{"version":3,"names":[],"mappings":"","sources":["search.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar Elastic, React, Search, Table;\n\nReact = require('react');\n\nElastic = require('./elastic');\n\nTable = require('./components/table');\n\nSearch = require('./components/search');\n\nElastic.search();\n\nReact.render(React.createElement(Search, null), document.getElementById('search'));\n\nReact.render(React.createElement(Table, null), document.getElementById('table'));\n\n\n\n},{\"./components/search\":2,\"./components/table\":3,\"./elastic\":4,\"react\":443}],2:[function(require,module,exports){\nvar React, Search, State;\n\nReact = require('react');\n\nState = require('../state');\n\nSearch = React.createClass({\n  mixins: [State.mixin],\n  cursors: {\n    query: ['query']\n  },\n  render: function() {\n    return React.createElement(\"input\", {\n      \"type\": \"text\",\n      \"placeholder\": \"Search\",\n      \"value\": this.cursors.query.get(),\n      \"onChange\": this.handleChange\n    });\n  },\n  handleChange: function(e) {\n    return this.cursors.query.edit(e.target.value);\n  }\n});\n\nmodule.exports = Search;\n\n\n\n},{\"../state\":5,\"react\":443}],3:[function(require,module,exports){\nvar React, State, Table;\n\nReact = require('react');\n\nState = require('../state');\n\nTable = React.createClass({\n  mixins: [State.mixin],\n  cursors: {\n    celllines: ['celllines']\n  },\n  render: function() {\n    return React.createElement(\"table\", null, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Biosamples ID\"), React.createElement(\"th\", null, \"Cell line Name\"), React.createElement(\"th\", null, \"Disease\"), React.createElement(\"th\", null, \"Accepted\"))), React.createElement(\"tbody\", null, this.renderBody(this.state.cursors.celllines)));\n  },\n  renderBody: function(celllines) {\n    var cellline, i, len, results;\n    if (!celllines) {\n      return '';\n    }\n    results = [];\n    for (i = 0, len = celllines.length; i < len; i++) {\n      cellline = celllines[i];\n      results.push(React.createElement(\"tr\", {\n        \"key\": cellline._id\n      }, React.createElement(\"td\", null, cellline._source.biosamplesid), React.createElement(\"td\", null, cellline._source.celllinename), React.createElement(\"td\", null, cellline._source.celllineprimarydisease), React.createElement(\"td\", null, cellline._source.celllineaccepted)));\n    }\n    return results;\n  }\n});\n\nmodule.exports = Table;\n\n\n\n},{\"../state\":5,\"react\":443}],4:[function(require,module,exports){\nvar Elasticsearch, LoDash, State, elastic, search;\n\nLoDash = require('lodash');\n\nElasticsearch = require('elasticsearch');\n\nState = require('./state');\n\nelastic = new Elasticsearch.Client({\n  hosts: 'localhost:9200'\n});\n\nsearch = function() {\n  var body, query;\n  query = State.select('query').get();\n  if (query) {\n    body = {\n      query: {\n        prefix: {\n          _all: query\n        }\n      }\n    };\n  } else {\n    body = {\n      query: {\n        match_all: {}\n      }\n    };\n  }\n  body.size = 1000;\n  return elastic.search({\n    index: 'ebisc',\n    type: 'cellline',\n    body: body\n  }).then(function(body) {\n    return State.set('celllines', body.hits.hits);\n  }).error(function(error) {\n    return console.log(error);\n  });\n};\n\nState.select('query').on('update', LoDash.debounce(search, 100));\n\nmodule.exports = {\n  search: search\n};\n\n\n\n},{\"./state\":5,\"elasticsearch\":242,\"lodash\":270}],5:[function(require,module,exports){\nvar Baobab, ReactAddons, options, state;\n\nBaobab = require('baobab');\n\nReactAddons = require('react/addons');\n\nstate = {\n  'query': '',\n  'facets': void 0,\n  'celllines': []\n};\n\noptions = {\n  shiftReferences: true,\n  mixins: [ReactAddons.PureRenderMixin]\n};\n\nmodule.exports = new Baobab(state, options);\n\n\n\n},{\"baobab\":7,\"react/addons\":271}],6:[function(require,module,exports){\n/**\n * Baobab Default Options\n * =======================\n *\n */\nmodule.exports = {\n\n  // Should the tree handle its transactions on its own?\n  autoCommit: true,\n\n  // Should the transactions be handled asynchronously?\n  asynchronous: true,\n\n  // Should the tree clone data when giving it back to the user?\n  clone: false,\n\n  // Which cloning function should the tree use?\n  cloningFunction: null,\n\n  // Should cursors be singletons?\n  cursorSingletons: true,\n\n  // Maximum records in the tree's history\n  maxHistory: 0,\n\n  // Collection of react mixins to merge with the tree's ones\n  mixins: [],\n\n  // Should the tree shift its internal reference when applying mutations?\n  shiftReferences: false,\n\n  // Custom typology object to use along with the validation utilities\n  typology: null,\n\n  // Validation specifications\n  validate: null\n};\n\n},{}],7:[function(require,module,exports){\n/**\n * Baobab Public Interface\n * ========================\n *\n * Exposes the main library classes.\n */\nvar Baobab = require('./src/baobab.js'),\n    helpers = require('./src/helpers.js');\n\n// Non-writable version\nObject.defineProperty(Baobab, 'version', {\n  value: '0.4.3'\n});\n\n// Exposing helpers\nBaobab.getIn = helpers.getIn;\n\n// Exporting\nmodule.exports = Baobab;\n\n},{\"./src/baobab.js\":10,\"./src/helpers.js\":13}],8:[function(require,module,exports){\n(function() {\n  'use strict';\n\n  /**\n   * Here is the list of every allowed parameter when using Emitter#on:\n   * @type {Object}\n   */\n  var __allowedOptions = {\n    once: 'boolean',\n    scope: 'object'\n  };\n\n\n  /**\n   * The emitter's constructor. It initializes the handlers-per-events store and\n   * the global handlers store.\n   *\n   * Emitters are useful for non-DOM events communication. Read its methods\n   * documentation for more information about how it works.\n   *\n   * @return {Emitter}         The fresh new instance.\n   */\n  var Emitter = function() {\n    this._enabled = true;\n    this._children = [];\n    this._handlers = {};\n    this._handlersAll = [];\n  };\n\n\n  /**\n   * This method binds one or more functions to the emitter, handled to one or a\n   * suite of events. So, these functions will be executed anytime one related\n   * event is emitted.\n   *\n   * It is also possible to bind a function to any emitted event by not\n   * specifying any event to bind the function to.\n   *\n   * Recognized options:\n   * *******************\n   *  - {?boolean} once   If true, the handlers will be unbound after the first\n   *                      execution. Default value: false.\n   *  - {?object}  scope  If a scope is given, then the listeners will be called\n   *                      with this scope as \"this\".\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.on('myEvent', function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on('myEvent', function(e) { console.log(e); }, { once: true });\n   *\n   * @param  {string}   event   The event to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >);\n   * > // Or:\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >   { once: true }}\n   * >);\n   *\n   * @param  {array}    events  The events to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > });\n   * > // Or:\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > }, { once: true });\n   *\n   * @param  {object}  bindings An object containing pairs event / function.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.on(function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on(function(e) { console.log(e); }, { once: true});\n   *\n   * @param  {function} handler The function to bind to every events.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.on = function(a, b, c) {\n    var i,\n        l,\n        k,\n        event,\n        eArray,\n        bindingObject;\n\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      eArray = typeof a === 'string' ?\n        [a] :\n        a;\n\n      for (i = 0, l = eArray.length; i !== l; i += 1) {\n        event = eArray[i];\n\n        // Check that event is not '':\n        if (!event)\n          continue;\n\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n\n        bindingObject = {\n          handler: b\n        };\n\n        for (k in c || {})\n          if (__allowedOptions[k])\n            bindingObject[k] = c[k];\n          else\n            throw new Error(\n              'The option \"' + k + '\" is not recognized by Emmett.'\n            );\n\n        this._handlers[event].push(bindingObject);\n      }\n\n    // Variant 3:\n    } else if (a && typeof a === 'object' && !Array.isArray(a))\n      for (event in a)\n        Emitter.prototype.on.call(this, event, a[event], b);\n\n    // Variant 4:\n    else if (typeof a === 'function') {\n      bindingObject = {\n        handler: a\n      };\n\n      for (k in c || {})\n        if (__allowedOptions[k])\n          bindingObject[k] = c[k];\n        else\n          throw new Error(\n            'The option \"' + k + '\" is not recognized by Emmett.'\n          );\n\n      this._handlersAll.push(bindingObject);\n    }\n\n    // No matching variant:\n    else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method works exactly as the previous #on, but will add an options\n   * object if none is given, and set the option \"once\" to true.\n   *\n   * The polymorphism works exactly as with the #on method.\n   */\n  Emitter.prototype.once = function(a, b, c) {\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      c = c || {};\n      c.once = true;\n      this.on(a, b, c);\n\n    // Variants 3 and 4:\n    } else if (\n      // Variant 3:\n      (a && typeof a === 'object' && !Array.isArray(a)) ||\n      // Variant 4:\n      (typeof a === 'function')\n    ) {\n      b = b || {};\n      b.once = true;\n      this.on(a, b);\n\n    // No matching variant:\n    } else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds one or more functions from events of the emitter. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.off('myEvent', myHandler);\n   *\n   * @param  {string}   event   The event to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.off(['myEvent1', 'myEvent2'], myHandler);\n   *\n   * @param  {array}    events  The events to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.off({\n   * >   myEvent1: myHandler1,\n   * >   myEvent2: myHandler2\n   * > });\n   *\n   * @param  {object} bindings An object containing pairs event / function.\n   * @return {Emitter}         Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.off(myHandler);\n   *\n   * @param  {function} handler The function to unbind from every events.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.off = function(events, handler) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    if (arguments.length === 1 && typeof eArray === 'function') {\n      handler = arguments[0];\n\n      // Handlers bound to events:\n      for (k in this._handlers) {\n        a = [];\n        for (i = 0, n = this._handlers[k].length; i !== n; i += 1)\n          if (this._handlers[k][i].handler !== handler)\n            a.push(this._handlers[k][i]);\n        this._handlers[k] = a;\n      }\n\n      a = [];\n      for (i = 0, n = this._handlersAll.length; i !== n; i += 1)\n        if (this._handlersAll[i].handler !== handler)\n          a.push(this._handlersAll[i]);\n      this._handlersAll = a;\n    }\n\n    else if (arguments.length === 2) {\n      for (i = 0, n = eArray.length; i !== n; i += 1) {\n        event = eArray[i];\n        if (this._handlers[event]) {\n          a = [];\n          for (j = 0, m = this._handlers[event].length; j !== m; j += 1)\n            if (this._handlers[event][j].handler !== handler)\n              a.push(this._handlers[event][j]);\n\n          this._handlers[event] = a;\n        }\n\n        if (this._handlers[event] && this._handlers[event].length === 0)\n          delete this._handlers[event];\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds every handlers attached to every or any events. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Usage:\n   * ******\n   * > myEmitter.unbindAll();\n   *\n   * @return {Emitter}      Returns this.\n   */\n  Emitter.prototype.unbindAll = function() {\n    var k;\n\n    this._handlersAll = [];\n    for (k in this._handlers)\n      delete this._handlers[k];\n\n    return this;\n  };\n\n\n  /**\n   * This method emits the specified event(s), and executes every handlers bound\n   * to the event(s).\n   *\n   * Use cases:\n   * **********\n   * > myEmitter.emit('myEvent');\n   * > myEmitter.emit('myEvent', myData);\n   * > myEmitter.emit(['myEvent1', 'myEvent2']);\n   * > myEmitter.emit(['myEvent1', 'myEvent2'], myData);\n   *\n   * @param  {string|array} events The event(s) to emit.\n   * @param  {object?}      data   The data.\n   * @return {Emitter}             Returns this.\n   */\n  Emitter.prototype.emit = function(events, data) {\n    var i,\n        n,\n        j,\n        m,\n        z,\n        a,\n        event,\n        child,\n        handlers,\n        eventName,\n        self = this,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    // Check that the emitter is enabled:\n    if (!this._enabled)\n      return this;\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, n = eArray.length; i !== n; i += 1) {\n      eventName = eArray[i];\n      handlers = (this._handlers[eventName] || []).concat(this._handlersAll);\n\n      if (handlers.length) {\n        event = {\n          type: eventName,\n          data: data || {},\n          target: this\n        };\n        a = [];\n\n        for (j = 0, m = handlers.length; j !== m; j += 1) {\n\n          // We have to verify that the handler still exists in the array,\n          // as it might have been mutated already\n          if (\n            (\n              this._handlers[eventName] &&\n              this._handlers[eventName].indexOf(handlers[j]) >= 0\n            ) ||\n            this._handlersAll.indexOf(handlers[j]) >= 0\n          ) {\n            handlers[j].handler.call(\n              'scope' in handlers[j] ? handlers[j].scope : this,\n              event\n            );\n\n            // Since the listener callback can mutate the _handlers,\n            // we register the handlers we want to remove, not the ones\n            // we want to keep\n            if (handlers[j].once)\n              a.push(handlers[j]);\n          }\n        }\n\n        // Go through handlers to remove\n        for (z = 0; z < a.length; z++) {\n          this._handlers[eventName].splice(a.indexOf(a[z]), 1);\n        }\n      }\n    }\n\n    // Events propagation:\n    for (i = 0, n = this._children.length; i !== n; i += 1) {\n      child = this._children[i];\n      child.emit.apply(child, arguments);\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method creates a new instance of Emitter and binds it as a child. Here\n   * is what children do:\n   *  - When the parent emits an event, the children will emit the same later\n   *  - When a child is killed, it is automatically unreferenced from the parent\n   *  - When the parent is killed, all children will be killed as well\n   *\n   * @return {Emitter} Returns the fresh new child.\n   */\n  Emitter.prototype.child = function() {\n    var self = this,\n        child = new Emitter();\n\n    child.on('emmett:kill', function() {\n      if (self._children)\n        for (var i = 0, l = self._children.length; i < l; i++)\n          if (self._children[i] === child) {\n            self._children.splice(i, 1);\n            break;\n          }\n    });\n    this._children.push(child);\n\n    return child;\n  };\n\n  /**\n   * This returns an array of handler functions corresponding to the given\n   * event or every handler functions if an event were not to be given.\n   *\n   * @param  {?string} event Name of the event.\n   * @return {Emitter} Returns this.\n   */\n  function mapHandlers(a) {\n    var i, l, h = [];\n\n    for (i = 0, l = a.length; i < l; i++)\n      h.push(a[i].handler);\n\n    return h;\n  }\n\n  Emitter.prototype.listeners = function(event) {\n    var handlers = [],\n        k,\n        i,\n        l;\n\n    // If no event is passed, we return every handlers\n    if (!event) {\n      handlers = mapHandlers(this._handlersAll);\n\n      for (k in this._handlers)\n        handlers = handlers.concat(mapHandlers(this._handlers[k]));\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners());\n    }\n\n    // Else we only retrieve the needed handlers\n    else {\n      handlers = mapHandlers(this._handlers[event]);\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners(event));\n    }\n\n    return handlers;\n  };\n\n\n  /**\n   * This method will first dispatch a \"emmett:kill\" event, and then unbinds all\n   * listeners and make it impossible to ever rebind any listener to any event.\n   */\n  Emitter.prototype.kill = function() {\n    this.emit('emmett:kill');\n\n    this.unbindAll();\n    this._handlers = null;\n    this._handlersAll = null;\n    this._enabled = false;\n\n    if (this._children)\n      for (var i = 0, l = this._children.length; i < l; i++)\n        this._children[i].kill();\n\n    this._children = null;\n  };\n\n\n  /**\n   * This method disabled the emitter, which means its emit method will do\n   * nothing.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.disable = function() {\n    this._enabled = false;\n\n    return this;\n  };\n\n\n  /**\n   * This method enables the emitter.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.enable = function() {\n    this._enabled = true;\n\n    return this;\n  };\n\n\n  /**\n   * Version:\n   */\n  Emitter.version = '2.1.2';\n\n\n  // Export:\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = Emitter;\n    exports.Emitter = Emitter;\n  } else if (typeof define === 'function' && define.amd)\n    define('emmett', [], function() {\n      return Emitter;\n    });\n  else\n    this.Emitter = Emitter;\n}).call(this);\n\n},{}],9:[function(require,module,exports){\n/**\n * typology.js - A data validation library for Node.js and the browser,\n *\n * Version: 0.3.1\n * Sources: http://github.com/jacomyal/typology\n * Doc:     http://github.com/jacomyal/typology#readme\n *\n * License:\n * --------\n * Copyright © 2014 Alexis Jacomy (@jacomyal), Guillaume Plique (@Yomguithereal)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * The Software is provided \"as is\", without warranty of any kind, express or\n * implied, including but not limited to the warranties of merchantability,\n * fitness for a particular purpose and noninfringement. In no event shall the\n * authors or copyright holders be liable for any claim, damages or other\n * liability, whether in an action of contract, tort or otherwise, arising\n * from, out of or in connection with the software or the use or other dealings\n * in the Software.\n */\n(function(global) {\n  'use strict';\n\n  /**\n   * Code conventions:\n   * *****************\n   *  - 80 characters max per line\n   *  - Write \"__myVar\" for any global private variable\n   *  - Write \"_myVar\" for any instance private variable\n   *  - Write \"myVar\" any local variable\n   */\n\n\n\n  /**\n   * PRIVATE GLOBALS:\n   * ****************\n   */\n\n  /**\n   * This object is a dictionnary that maps \"[object Something]\" strings to the\n   * typology form \"something\":\n   */\n  var __class2type = {};\n\n  /**\n   * This array is the list of every types considered native by typology:\n   */\n  var __nativeTypes = ['*'];\n\n  (function() {\n    var k,\n        className,\n        classes = [\n          'Arguments',\n          'Boolean',\n          'Number',\n          'String',\n          'Function',\n          'Array',\n          'Date',\n          'RegExp',\n          'Object'\n        ];\n\n    // Fill types\n    for (k in classes) {\n      className = classes[k];\n      __nativeTypes.push(className.toLowerCase());\n      __class2type['[object ' + className + ']'] = className.toLowerCase();\n    }\n  })();\n\n\n\n  /**\n   * CONSTRUCTOR:\n   * ************\n   */\n  function Typology(defs) {\n    /**\n     * INSTANCE PRIVATES:\n     * ******************\n     */\n\n    var _self = this;\n\n    /**\n     * This objects will contain every instance-specific custom types:\n     */\n    var _customTypes = {};\n\n    /**\n     * This function will recursively scan an object to check wether or not it\n     * matches a given type. It will return null if it matches, and an Error\n     * object else.\n     *\n     * Examples:\n     * *********\n     * 1. When the type matches:\n     *  > _scan('abc', 'string');\n     *  will return null.\n     *\n     * 2. When a top-level type does not match:\n     *  > _scan('abc', 'number');\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *\n     * 3. When a sub-object type does not its type:\n     *  > _scan({ a: 'abc' }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a' ]\n     *\n     * 4. When a deep sub-object type does not its type:\n     *  > _scan({ a: [ 123, 'abc' ] }, { a: ['number'] });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a', 1 ]\n     *\n     * 5. When a required key is missing:\n     *  > _scan({}, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"undefined\".\n     *   - path: [ 'a' ]\n     *\n     * 6. When an unexpected key is present:\n     *  > _scan({ a: 123, b: 456 }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Unexpected key \"b\".\n     *\n     * @param  {*}      obj  The value to validate.\n     * @param  {type}   type The type.\n     * @return {?Error}      Returns null or an Error object.\n     */\n    function _scan(obj, type) {\n      var a,\n          i,\n          l,\n          k,\n          error,\n          subError,\n          hasStar,\n          hasTypeOf,\n          optional = false,\n          exclusive = false,\n          typeOf = _self.get(obj);\n\n      if (_self.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        l = a.length;\n        for (i = 0; i < l; i++)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            throw new Error('Invalid type.');\n\n        if (type.match(/^\\?/))\n          optional = true;\n\n        if (type.replace(/^\\?/, '').match(/^\\!/))\n          exclusive = true;\n\n        if (exclusive && optional)\n          throw new Error('Invalid type.');\n\n        for (i in a)\n          if (_customTypes[a[i]])\n            if (\n              (typeof _customTypes[a[i]].type === 'function') ?\n                (_customTypes[a[i]].type.call(_self, obj) === true) :\n                !_scan(obj, _customTypes[a[i]].type)\n            ) {\n              if (exclusive) {\n                error = new Error();\n                error.message = 'Expected a \"' + type + '\" but found a ' +\n                                '\"' + a[i] + '\".';\n              error.expected = type;\n              error.type = a[i];\n              error.value = obj;\n                return error;\n              } else\n                return null;\n            }\n\n        if (obj === null || obj === undefined) {\n          if (!exclusive && !optional) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          } else\n            return null;\n\n        } else {\n          hasStar = ~a.indexOf('*');\n          hasTypeOf = ~a.indexOf(typeOf);\n          if (exclusive && (hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + (hasTypeOf ? typeOf : '*') + '\".';\n            error.type = hasTypeOf ? typeOf : '*';\n            error.expected = type;\n            error.value = obj;\n            return error;\n\n          } else if (!exclusive && !(hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n\n          } else\n            return null;\n        }\n\n      } else if (_self.get(type) === 'object') {\n        if (typeOf !== 'object') {\n          error = new Error();\n          error.message = 'Expected an object but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        for (k in type)\n          if ((subError = _scan(obj[k], type[k]))) {\n            error = subError;\n            error.path = error.path ?\n              [k].concat(error.path) :\n              [k];\n            return error;\n          }\n\n        for (k in obj)\n          if (type[k] === undefined) {\n            error = new Error();\n            error.message = 'Unexpected key \"' + k + '\".';\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          }\n\n        return null;\n\n      } else if (_self.get(type) === 'array') {\n        if (type.length !== 1)\n          throw new Error('Invalid type.');\n\n        if (typeOf !== 'array') {\n          error = new Error();\n          error.message = 'Expected an array but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        l = obj.length;\n        for (i = 0; i < l; i++)\n          if ((subError = _scan(obj[i], type[0]))) {\n            error = subError;\n            error.path = error.path ?\n              [i].concat(error.path) :\n              [i];\n            return error;\n          }\n\n        return null;\n      } else\n        throw new Error('Invalid type.');\n    }\n\n\n\n    /**\n     * INSTANCE METHODS:\n     * *****************\n     */\n\n    /**\n     * This method registers a custom type into the Typology instance. A type\n     * is registered under a unique name, and is described by an object (like\n     * classical C structures) or a function.\n     *\n     * Variant 1:\n     * **********\n     * > types.add('user', { id: 'string', name: '?string' });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {object}   type The corresponding structure.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 2:\n     * **********\n     * > types.add('integer', function(value) {\n     * >   return typeof value === 'number' && value === value | 0;\n     * > });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {function} type The function validating the type.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 3:\n     * **********\n     * > types.add({\n     * >   id: 'user',\n     * >   type: { id: 'string', name: '?string' }\n     * > });\n     *\n     * > types.add({\n     * >   id: 'integer',\n     * >   type: function(value) {\n     * >     return typeof value === 'number' && value === value | 0;\n     * >   }\n     * > });\n     *\n     * @param  {object}   specs An object describing fully the type.\n     * @return {Typology}       Returns this.\n     *\n     * Recognized parameters:\n     * **********************\n     * Here is the exhaustive list of every accepted parameters in the specs\n     * object:\n     *\n     *   {string}          id    The unique id of the type.\n     *   {function|object} type  The function or the structure object\n     *                           validating the type.\n     *   {?[string]}       proto Eventually an array of ids of types that are\n     *                           referenced in the structure but do not exist\n     *                           yet.\n     */\n    this.add = function(a1, a2) {\n      var o,\n          k,\n          a,\n          id,\n          tmp,\n          type;\n\n      // Polymorphism:\n      if (arguments.length === 1) {\n        if (this.get(a1) === 'object') {\n          o = a1;\n          id = o.id;\n          type = o.type;\n        } else\n          throw new Error('If types.add is called with one argument, ' +\n                          'this one has to be an object.');\n      } else if (arguments.length === 2) {\n        if (typeof a1 !== 'string' || !a1)\n          throw new Error('If types.add is called with more than one ' +\n                          'argument, the first one must be the string id.');\n        else\n          id = a1;\n\n        type = a2;\n      } else\n        throw new Error('types.add has to be called ' +\n                        'with one or two arguments.');\n\n      if (this.get(id) !== 'string' || id.length === 0)\n        throw new Error('A type requires an string id.');\n\n      if (_customTypes[id] !== undefined && _customTypes[id] !== 'proto')\n        throw new Error('The type \"' + id + '\" already exists.');\n\n      if (~__nativeTypes.indexOf(id))\n        throw new Error('\"' + id + '\" is a reserved type name.');\n\n      _customTypes[id] = 1;\n\n      // Check given prototypes:\n      a = (o || {}).proto || [];\n      a = Array.isArray(a) ? a : [a];\n      tmp = {};\n      for (k in a)\n        if (_customTypes[a[k]] === undefined) {\n          _customTypes[a[k]] = 1;\n          tmp[a[k]] = 1;\n        }\n\n      if ((this.get(type) !== 'function') && !this.isValid(type))\n        throw new Error('A type requires a valid definition. ' +\n                        'This one can be a preexistant type or else ' +\n                        'a function testing given objects.');\n\n      // Effectively add the type:\n      _customTypes[id] = (o === undefined) ?\n        {\n          id: id,\n          type: type\n        } :\n        {};\n\n      if (o !== undefined)\n        for (k in o)\n          _customTypes[id][k] = o[k];\n\n      // Delete prototypes:\n      for (k in tmp)\n        if (k !== id)\n          delete _customTypes[k];\n\n      return this;\n    };\n\n    /**\n     * This method returns true if a custom type is already registered in this\n     * instance under the given key.\n     *\n     * @param  {string}  key A type name.\n     * @return {boolean}     Returns true if the key is registered.\n     */\n    this.has = function(key) {\n      return !!_customTypes[key];\n    };\n\n    /**\n     * This method returns the native type of a given value.\n     *\n     * Examples:\n     * *********\n     * > types.get({ a: 1 }); // returns \"object\"\n     * > types.get('abcde');  // returns \"string\"\n     * > types.get(1234567);  // returns \"number\"\n     * > types.get([1, 2]);   // returns \"array\"\n     *\n     * @param  {*}      value Anything.\n     * @return {string}       Returns the native type of the value.\n     */\n    this.get = function(obj) {\n      return (obj === null || obj === undefined) ?\n        String(obj) :\n        __class2type[Object.prototype.toString.call(obj)] || 'object';\n    };\n\n    /**\n     * This method validates some value against a given type. If the flag throws\n     * has a truthy value, then the method will throw an error instead of\n     * returning false.\n     *\n     * To know more about the error thrown, you can read the documentation of\n     * the private method _scan.\n     *\n     * Examples:\n     * *********\n     * > types.check({ a: 1 }, 'object');                      // returns true\n     * > types.check({ a: 1 }, { a: 'string' });               // returns true\n     * > types.check({ a: 1 }, { a: 'string', b: '?number' }); // returns true\n     *\n     * > types.check({ a: 1 }, { a: 'string', b: 'number' }); // returns false\n     * > types.check({ a: 1 }, { a: 'number' });              // returns false\n     * > types.check({ a: 1 }, 'array');                      // returns false\n     *\n     * > types.check({ a: 1 }, 'array', true); // throws an Error\n     *\n     * @param  {*}        value  Anything.\n     * @param  {type}     type   A valid type.\n     * @param  {?boolean} throws If true, this method will throw an error\n     *                           instead of returning false.\n     * @return {boolean}         Returns true if the value matches the type, and\n     *                           not else.\n     */\n    this.check = function(obj, type, throws) {\n      var result = _scan(obj, type);\n      if (throws && result)\n        throw result;\n      else\n        return !result;\n    };\n\n    /**\n     * This method validates a type. If the type is not referenced or is not\n     * valid, it will return false.\n     *\n     * To know more about that function, don't hesitate to read the related\n     * unit tests.\n     *\n     * Examples:\n     * *********\n     * > types.isValid('string');        // returns true\n     * > types.isValid('?string');       // returns true\n     * > types.isValid('!string');       // returns true\n     * > types.isValid('string|number'); // returns true\n     * > types.isValid({ a: 'string' }); // returns true\n     * > types.isValid(['string']);      // returns true\n     *\n     * > types.isValid('!?string');                // returns false\n     * > types.isValid('myNotDefinedType');        // returns false\n     * > types.isValid(['myNotDefinedType']);      // returns false\n     * > types.isValid({ a: 'myNotDefinedType' }); // returns false\n     *\n     * > types.isValid('user');               // returns false\n     * > types.add('user', { id: 'string' }); // makes the type become valid\n     * > types.isValid('user');               // returns true\n     *\n     * @param  {*}       type The type to get checked.\n     * @return {boolean}      Returns true if the type is valid, and false else.\n     */\n    this.isValid = function(type) {\n      var a,\n          k,\n          i;\n\n      if (this.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        for (i in a)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'object') {\n        for (k in type)\n          if (!this.isValid(type[k]))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'array')\n        return type.length === 1 ?\n          this.isValid(type[0]) :\n          false;\n      else\n        return false;\n    };\n\n\n\n    /**\n     * INSTANTIATION ROUTINE:\n     * **********************\n     */\n\n    // Add a type \"type\" to shortcut the #isValid method:\n    this.add('type', (function(v) {\n      return this.isValid(v);\n    }).bind(this));\n\n    // Add a type \"primitive\" to match every primitive types (including null):\n    this.add('primitive', function(v) {\n      return !v || !(v instanceof Object || typeof v === 'object');\n    });\n\n    // Adding custom types at instantiation:\n    defs = defs || {};\n    if (this.get(defs) !== 'object')\n      throw Error('Invalid argument.');\n\n    for (var k in defs)\n      this.add(k, defs[k]);\n  }\n\n\n\n  /**\n   * GLOBAL PUBLIC API:\n   * ******************\n   */\n\n  // Creating a \"main\" typology instance to export:\n  var types = Typology;\n  Typology.call(types);\n\n  // Version:\n  Object.defineProperty(types, 'version', {\n    value: '0.3.1'\n  });\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = types;\n    exports.types = types;\n  } else if (typeof define === 'function' && define.amd)\n    define('typology', [], function() {\n      return types;\n    });\n  else\n    this.types = types;\n})(this);\n\n},{}],10:[function(require,module,exports){\n/**\n * Baobab Data Structure\n * ======================\n *\n * A handy data tree with cursors.\n */\nvar Cursor = require('./cursor.js'),\n    EventEmitter = require('emmett'),\n    Typology = require('typology'),\n    helpers = require('./helpers.js'),\n    update = require('./update.js'),\n    merge = require('./merge.js'),\n    mixins = require('./mixins.js'),\n    defaults = require('../defaults.js'),\n    type = require('./type.js');\n\nfunction complexHash(type) {\n  return type + '$' +\n    (new Date()).getTime() + (''  + Math.random()).replace('0.', '');\n}\n\n/**\n * Main Class\n */\nfunction Baobab(initialData, opts) {\n  if (arguments.length < 1)\n    initialData = {};\n\n  // New keyword optional\n  if (!(this instanceof Baobab))\n    return new Baobab(initialData, opts);\n\n  if (!type.Object(initialData) && !type.Array(initialData))\n    throw Error('Baobab: invalid data.');\n\n  // Extending\n  EventEmitter.call(this);\n\n  // Merging defaults\n  this.options = helpers.shallowMerge(defaults, opts);\n  this._cloner = this.options.cloningFunction || helpers.deepClone;\n\n  // Privates\n  this._transaction = {};\n  this._future = undefined;\n  this._history = [];\n  this._cursors = {};\n\n  // Internal typology\n  this.typology = this.options.typology ?\n    (this.options.typology instanceof Typology ?\n      this.options.typology :\n      new Typology(this.options.typology)) :\n    new Typology();\n\n  // Internal validation\n  this.validate = this.options.validate || null;\n\n  if (this.validate)\n    try {\n      this.typology.check(initialData, this.validate, true);\n    }\n    catch (e) {\n      e.message = '/' + e.path.join('/') + ': ' + e.message;\n      throw e;\n    }\n\n  // Properties\n  this.data = this._cloner(initialData);\n\n  // Mixin\n  this.mixin = mixins.baobab(this);\n}\n\nhelpers.inherits(Baobab, EventEmitter);\n\n/**\n * Private prototype\n */\nBaobab.prototype._archive = function() {\n  if (this.options.maxHistory <= 0)\n    return;\n\n  var record = {\n    data: this._cloner(this.data)\n  };\n\n  // Replacing\n  if (this._history.length === this.options.maxHistory) {\n    this._history.pop();\n  }\n  this._history.unshift(record);\n\n  return record;\n};\n\n/**\n * Prototype\n */\nBaobab.prototype.commit = function(referenceRecord) {\n  var self = this,\n      log;\n\n  if (referenceRecord) {\n\n    // Override\n    this.data = referenceRecord.data;\n    log = referenceRecord.log;\n  }\n  else {\n\n    // Shifting root reference\n    if (this.options.shiftReferences)\n      this.data = helpers.shallowClone(this.data);\n\n    // Applying modification (mutation)\n    var record = this._archive();\n    log = update(this.data, this._transaction, this.options);\n\n    if (record)\n      record.log = log;\n  }\n\n  if (this.validate) {\n    var errors = [],\n        l = log.length,\n        d,\n        i;\n\n    for (i = 0; i < l; i++) {\n      d = helpers.getIn(this.validate, log[i]);\n\n      if (!d)\n        continue;\n\n      try {\n        this.typology.check(this.get(log[i]), d, true);\n      }\n      catch (e) {\n        e.path = log[i].concat((e.path || []));\n        errors.push(e);\n      }\n    }\n\n    if (errors.length)\n      this.emit('invalid', {errors: errors});\n  }\n\n  // Resetting\n  this._transaction = {};\n\n  if (this._future)\n    this._future = clearTimeout(this._future);\n\n  // Baobab-level update event\n  this.emit('update', {\n    log: log\n  });\n\n  return this;\n};\n\nBaobab.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.select: invalid path.');\n\n  // Casting to array\n  path = !type.Array(path) ? [path] : path;\n\n  // Complex path?\n  var complex = type.ComplexPath(path);\n\n  var solvedPath;\n\n  if (complex)\n    solvedPath = helpers.solvePath(this.data, path);\n\n  // Registering a new cursor or giving the already existing one for path\n  if (!this.options.cursorSingletons) {\n    return new Cursor(this, path);\n  }\n  else {\n    var hash = path.map(function(step) {\n      if (type.Function(step))\n        return complexHash('fn');\n      else if (type.Object(step))\n        return complexHash('ob');\n      else\n        return step;\n    }).join('λ');\n\n    if (!this._cursors[hash]) {\n      var cursor = new Cursor(this, path, solvedPath, hash);\n      this._cursors[hash] = cursor;\n      return cursor;\n    }\n    else {\n      return this._cursors[hash];\n    }\n  }\n};\n\nBaobab.prototype.root = function() {\n  return this.select();\n};\n\nBaobab.prototype.reference = function(path) {\n  var data;\n\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.get: invalid path.');\n\n  return helpers.getIn(\n    this.data, type.String(path) || type.Number(path) ? [path] : path\n  );\n};\n\nBaobab.prototype.get = function() {\n  var ref = this.reference.apply(this, arguments);\n\n  return this.options.clone ? this._cloner(ref) : ref;\n};\n\nBaobab.prototype.clone = function(path) {\n  return this._cloner(this.reference.apply(this, arguments));\n};\n\nBaobab.prototype.set = function(key, val) {\n\n  if (arguments.length < 2)\n    throw Error('Baobab.set: expects a key and a value.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(this.data, key);\n\n    if (!path)\n      throw Error('Baobab.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nBaobab.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('Baobab.unset: expects a valid key to unset.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n\n  return this.update(spec);\n};\n\nBaobab.prototype.update = function(spec) {\n  var self = this;\n\n  if (!type.Object(spec))\n    throw Error('Baobab.update: wrong specification.');\n\n  this._transaction = merge(spec, this._transaction);\n\n  // Should we let the user commit?\n  if (!this.options.autoCommit)\n    return this;\n\n  // Should we update synchronously?\n  if (!this.options.asynchronous)\n    return this.commit();\n\n  // Updating asynchronously\n  if (!this._future)\n    this._future = setTimeout(self.commit.bind(self, null), 0);\n\n  return this;\n};\n\nBaobab.prototype.hasHistory = function() {\n  return !!this._history.length;\n};\n\nBaobab.prototype.getHistory = function() {\n  return this._history;\n};\n\nBaobab.prototype.undo = function() {\n  if (!this.hasHistory())\n    throw Error('Baobab.undo: no history recorded, cannot undo.');\n\n  var lastRecord = this._history.shift();\n  this.commit(lastRecord);\n};\n\nBaobab.prototype.release = function() {\n\n  delete this.data;\n  delete this._transaction;\n  delete this._history;\n\n  // Releasing cursors\n  for (var k in this._cursors)\n    this._cursors[k].release();\n  delete this._cursors;\n\n  // Killing event emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nBaobab.prototype.toJSON = function() {\n  return this.reference();\n};\n\n/**\n * Export\n */\nmodule.exports = Baobab;\n\n},{\"../defaults.js\":6,\"./cursor.js\":12,\"./helpers.js\":13,\"./merge.js\":14,\"./mixins.js\":15,\"./type.js\":16,\"./update.js\":17,\"emmett\":8,\"typology\":9}],11:[function(require,module,exports){\n/**\n * Baobab Cursor Combination\n * ==========================\n *\n * A useful abstraction dealing with cursor's update logical combinations.\n */\nvar EventEmitter = require('emmett'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Utilities\n */\nfunction bindCursor(c, cursor) {\n  cursor.on('update', c.cursorListener);\n  c.tree.off('update', c.treeListener);\n  c.tree.on('update', c.treeListener);\n}\n\n/**\n * Main Class\n */\nfunction Combination(operator /*, &cursors */) {\n  var self = this;\n\n  // Safeguard\n  if (arguments.length < 2)\n    throw Error('baobab.Combination: not enough arguments.');\n\n  var first = arguments[1],\n      rest = helpers.arrayOf(arguments).slice(2);\n\n  if (first instanceof Array) {\n    rest = first.slice(1);\n    first = first[0];\n  }\n\n  if (!type.Cursor(first))\n    throw Error('baobab.Combination: argument should be a cursor.');\n\n  if (operator !== 'or' && operator !== 'and')\n    throw Error('baobab.Combination: invalid operator.');\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Properties\n  this.cursors = [first];\n  this.operators = [];\n  this.tree = first.tree;\n\n  // State\n  this.updates = new Array(this.cursors.length);\n\n  // Listeners\n  this.cursorListener = function() {\n    self.updates[self.cursors.indexOf(this)] = true;\n  };\n\n  this.treeListener = function() {\n    var shouldFire = self.updates[0],\n        i,\n        l;\n\n    for (i = 1, l = self.cursors.length; i < l; i++) {\n      shouldFire = self.operators[i - 1] === 'or' ?\n        shouldFire || self.updates[i] :\n        shouldFire && self.updates[i];\n    }\n\n    if (shouldFire)\n      self.emit('update');\n\n    // Waiting for next update\n    self.updates = new Array(self.cursors.length);\n  };\n\n  // Lazy binding\n  this.bound = false;\n\n  var regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (self.bound)\n      return;\n    self.bound = true;\n    self.cursors.forEach(function(cursor) {\n      bindCursor(self, cursor);\n    });\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n\n  // Attaching any other passed cursors\n  rest.forEach(function(cursor) {\n    this[operator](cursor);\n  }, this);\n}\n\nhelpers.inherits(Combination, EventEmitter);\n\n/**\n * Prototype\n */\nfunction makeOperator(operator) {\n  Combination.prototype[operator] = function(cursor) {\n\n    // Safeguard\n    if (!type.Cursor(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': argument should be a cursor.');\n    }\n\n    if (~this.cursors.indexOf(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': cursor already in combination.');\n    }\n\n    this.cursors.push(cursor);\n    this.operators.push(operator);\n    this.updates.length++;\n\n    if (this.bound)\n      bindCursor(this, cursor);\n\n    return this;\n  };\n}\n\nmakeOperator('or');\nmakeOperator('and');\n\nCombination.prototype.release = function() {\n\n  // Dropping cursors listeners\n  this.cursors.forEach(function(cursor) {\n    cursor.off('update', this.cursorListener);\n  }, this);\n\n  // Dropping tree listener\n  this.tree.off('update', this.treeListener);\n\n  // Cleaning\n  this.cursors = null;\n  this.operators = null;\n  this.tree = null;\n  this.updates = null;\n\n  // Dropping own listeners\n  this.kill();\n};\n\n/**\n * Exporting\n */\nmodule.exports = Combination;\n\n},{\"./helpers.js\":13,\"./type.js\":16,\"emmett\":8}],12:[function(require,module,exports){\n/**\n * Baobab Cursor Abstraction\n * ==========================\n *\n * Nested selection into a baobab tree.\n */\nvar EventEmitter = require('emmett'),\n    Combination = require('./combination.js'),\n    mixins = require('./mixins.js'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Main Class\n */\nfunction Cursor(tree, path, solvedPath, hash) {\n  var self = this;\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Enforcing array\n  path = path || [];\n\n  // Properties\n  this.tree = tree;\n  this.path = path;\n  this.hash = hash;\n  this.relevant = this.reference() !== undefined;\n\n  // Complex path?\n  this.complexPath = !!solvedPath;\n  this.solvedPath = this.complexPath ? solvedPath : this.path;\n\n  // Root listeners\n  this.updateHandler = function(e) {\n    var log = e.data.log,\n        shouldFire = false,\n        c, p, l, m, i, j;\n\n    // Solving path if needed\n    if (self.complexPath)\n      self.solvedPath = helpers.solvePath(self.tree.data, self.path);\n\n    // If selector listens at tree, we fire\n    if (!self.path.length)\n      return self.emit('update');\n\n    // Checking update log to see whether the cursor should update.\n    outer:\n    for (i = 0, l = log.length; i < l; i++) {\n      c = log[i];\n\n      for (j = 0, m = c.length; j < m; j++) {\n        p = c[j];\n\n        // If path is not relevant to us, we break\n        if (p !== '' + self.solvedPath[j])\n          break;\n\n        // If we reached last item and we are relevant, we fire\n        if (j + 1 === m || j + 1 === self.solvedPath.length) {\n          shouldFire = true;\n          break outer;\n        }\n      }\n    }\n\n    // Handling relevancy\n    var data = self.reference() !== undefined;\n\n    if (self.relevant) {\n      if (data && shouldFire) {\n        self.emit('update');\n      }\n      else if (!data) {\n        self.emit('irrelevant');\n        self.relevant = false;\n      }\n    }\n    else {\n      if (data && shouldFire) {\n        self.emit('relevant');\n        self.emit('update');\n        self.relevant = true;\n      }\n    }\n  };\n\n  // Making mixin\n  this.mixin = mixins.cursor(this);\n\n  // Lazy binding\n  var bound = false,\n      regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (bound)\n      return;\n    bound = true;\n    self.tree.on('update', self.updateHandler);\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n}\n\nhelpers.inherits(Cursor, EventEmitter);\n\n/**\n * Predicates\n */\nCursor.prototype.isRoot = function() {\n  return !this.path.length;\n};\n\nCursor.prototype.isLeaf = function() {\n  return type.Primitive(this.reference());\n};\n\nCursor.prototype.isBranch = function() {\n  return !this.isLeaf() && !this.isRoot();\n};\n\n/**\n * Traversal\n */\nCursor.prototype.root = function() {\n  return this.tree.root();\n};\n\nCursor.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('baobab.Cursor.select: invalid path.');\n  return this.tree.select(this.path.concat(path));\n};\n\nCursor.prototype.up = function() {\n  if (this.solvedPath && this.solvedPath.length)\n    return this.tree.select(this.path.slice(0, -1));\n  else\n    return null;\n};\n\nCursor.prototype.left = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.left: cannot go left on a non-list type.');\n\n  return last ?\n    this.tree.select(this.solvedPath.slice(0, -1).concat(last - 1)) :\n    null;\n};\n\nCursor.prototype.leftmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.leftmost: cannot go left on a non-list type.');\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(0));\n};\n\nCursor.prototype.right = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  if (last + 1 === this.up().reference().length)\n    return null;\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(last + 1));\n};\n\nCursor.prototype.rightmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  var list = this.up().reference();\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(list.length - 1));\n};\n\nCursor.prototype.down = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (!(this.reference() instanceof Array))\n    return null;\n\n  return this.tree.select(this.solvedPath.concat(0));\n};\n\n/**\n * Access\n */\nCursor.prototype.get = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.get(this.solvedPath.concat(path));\n  else\n    return this.tree.get(this.solvedPath);\n};\n\nCursor.prototype.reference = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.reference(this.solvedPath.concat(path));\n  else\n    return this.tree.reference(this.solvedPath);\n};\n\nCursor.prototype.clone = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.clone(this.solvedPath.concat(path));\n  else\n    return this.tree.clone(this.solvedPath);\n};\n\n/**\n * Update\n */\nCursor.prototype.set = function(key, val) {\n  if (arguments.length < 2)\n    throw Error('baobab.Cursor.set: expecting at least key/value.');\n\n  var data = this.reference();\n\n  if (typeof data !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(data, key);\n\n    if (!path)\n      throw Error('baobab.Cursor.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nCursor.prototype.edit = function(val) {\n  return this.update({$set: val});\n};\n\nCursor.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('baobab.Cursor.unset: expects a valid key to unset.');\n\n  if (typeof this.reference() !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n  return this.update(spec);\n};\n\nCursor.prototype.remove = function() {\n  if (this.isRoot())\n    throw Error('baobab.Cursor.remove: cannot remove root node.');\n\n  return this.update({$unset: true});\n};\n\nCursor.prototype.apply = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.apply: argument is not a function.');\n\n  return this.update({$apply: fn});\n};\n\nCursor.prototype.chain = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.chain: argument is not a function.');\n\n  return this.update({$chain: fn});\n};\n\nCursor.prototype.push = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$push: helpers.arrayOf(arguments)});\n  else\n    return this.update({$push: value});\n};\n\nCursor.prototype.unshift = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$unshift: helpers.arrayOf(arguments)});\n  else\n    return this.update({$unshift: value});\n};\n\nCursor.prototype.merge = function(o) {\n  if (!type.Object(o))\n    throw Error('baobab.Cursor.merge: trying to merge a non-object.');\n\n  if (!type.Object(this.reference()))\n    throw Error('baobab.Cursor.merge: trying to merge into a non-object.');\n\n  this.update({$merge: o});\n};\n\nCursor.prototype.update = function(spec) {\n  this.tree.update(helpers.pathObject(this.solvedPath, spec));\n  return this;\n};\n\n/**\n * Combination\n */\nCursor.prototype.or = function(otherCursor) {\n  return new Combination('or', this, otherCursor);\n};\n\nCursor.prototype.and = function(otherCursor) {\n  return new Combination('and', this, otherCursor);\n};\n\n/**\n * Releasing\n */\nCursor.prototype.release = function() {\n\n  // Removing listener on parent\n  this.tree.off('update', this.updateHandler);\n\n  // If the cursor is hashed, we unsubscribe from the parent\n  if (this.hash)\n    delete this.tree._cursors[this.hash];\n\n  // Dereferencing\n  delete this.tree;\n  delete this.path;\n  delete this.solvePath;\n\n  // Killing emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nCursor.prototype.toJSON = function() {\n  return this.reference();\n};\n\ntype.Cursor = function (value) {\n  return value instanceof Cursor;\n};\n\n/**\n * Export\n */\nmodule.exports = Cursor;\n\n},{\"./combination.js\":11,\"./helpers.js\":13,\"./mixins.js\":15,\"./type.js\":16,\"emmett\":8}],13:[function(require,module,exports){\n/**\n * Baobab Helpers\n * ===============\n *\n * Miscellaneous helper functions.\n */\nvar type = require('./type.js');\n\n// Make a real array of an array-like object\nfunction arrayOf(o) {\n  return Array.prototype.slice.call(o);\n}\n\n// Shallow merge\nfunction shallowMerge(o1, o2) {\n  var o = {},\n      k;\n\n  for (k in o1) o[k] = o1[k];\n  for (k in o2) o[k] = o2[k];\n\n  return o;\n}\n\n// Clone a regexp\nfunction cloneRegexp(re) {\n  var pattern = re.source,\n      flags = '';\n\n  if (re.global) flags += 'g';\n  if (re.multiline) flags += 'm';\n  if (re.ignoreCase) flags += 'i';\n  if (re.sticky) flags += 'y';\n  if (re.unicode) flags += 'u';\n\n  return new RegExp(pattern, flags);\n}\n\n// Cloning function\nfunction clone(deep, item) {\n  if (!item ||\n      typeof item !== 'object' ||\n      item instanceof Error ||\n      item instanceof ArrayBuffer)\n    return item;\n\n  // Array\n  if (type.Array(item)) {\n    if (deep) {\n      var i, l, a = [];\n      for (i = 0, l = item.length; i < l; i++)\n        a.push(deepClone(item[i]));\n      return a;\n    }\n    else {\n      return item.slice(0);\n    }\n  }\n\n  // Date\n  if (type.Date(item))\n    return new Date(item.getTime());\n\n  // RegExp\n  if (item instanceof RegExp)\n    return cloneRegexp(item);\n\n  // Object\n  if (type.Object(item)) {\n    var k, o = {};\n\n    if (item.constructor && item.constructor !== Object)\n      o = Object.create(item.constructor.prototype);\n\n    for (k in item)\n      if (item.hasOwnProperty(k))\n        o[k] = deep ? deepClone(item[k]) : item[k];\n    return o;\n  }\n\n  return item;\n}\n\n// Shallow & deep cloning functions\nvar shallowClone = clone.bind(null, false),\n    deepClone = clone.bind(null, true);\n\n// Simplistic composition\nfunction compose(fn1, fn2) {\n  return function(arg) {\n    return fn2(fn1(arg));\n  };\n}\n\n// Get first item matching predicate in list\nfunction first(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return a[i];\n  }\n  return;\n}\n\nfunction index(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return i;\n  }\n  return -1;\n}\n\n// Compare object to spec\nfunction compare(object, spec) {\n  var ok = true,\n      k;\n\n  // If we reached here via a recursive call, object may be undefined because\n  // not all items in a collection will have the same deep nesting structure\n  if (!object) {\n    return false;\n  }\n\n  for (k in spec) {\n    if (type.Object(spec[k])) {\n      ok = ok && compare(object[k], spec[k]);\n    }\n    else if (type.Array(spec[k])) {\n      ok = ok && !!~spec[k].indexOf(object[k]);\n    }\n    else {\n      if (object[k] !== spec[k])\n        return false;\n    }\n  }\n\n  return ok;\n}\n\nfunction firstByComparison(object, spec) {\n  return first(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\nfunction indexByComparison(object, spec) {\n  return index(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\n// Retrieve nested objects\nfunction getIn(object, path) {\n  path = path || [];\n\n  var c = object,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      c = first(c, path[i]);\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      c = firstByComparison(c, path[i]);\n    }\n    else {\n      c = c[path[i]];\n    }\n  }\n\n  return c;\n}\n\n// Solve a complex path\nfunction solvePath(object, path) {\n  var solvedPath = [],\n      c = object,\n      idx,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return null;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      idx = index(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      idx = indexByComparison(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else {\n      solvedPath.push(path[i]);\n      c = c[path[i]] || {};\n    }\n  }\n\n  return solvedPath;\n}\n\n// Return a fake object relative to the given path\nfunction pathObject(path, spec) {\n  var l = path.length,\n      o = {},\n      c = o,\n      i;\n\n  if (!l)\n    o = spec;\n\n  for (i = 0; i < l; i++) {\n    c[path[i]] = (i + 1 === l) ? spec : {};\n    c = c[path[i]];\n  }\n\n  return o;\n}\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\nmodule.exports = {\n  arrayOf: arrayOf,\n  deepClone: deepClone,\n  shallowClone: shallowClone,\n  shallowMerge: shallowMerge,\n  compose: compose,\n  getIn: getIn,\n  inherits: inherits,\n  pathObject: pathObject,\n  solvePath: solvePath\n};\n\n},{\"./type.js\":16}],14:[function(require,module,exports){\n/**\n * Baobab Merge\n * =============\n *\n * A function used to merge updates in the stack.\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n// Helpers\nfunction hasKey(o, key) {\n  return key in (o || {});\n}\n\nfunction conflict(a, b, key) {\n  return hasKey(a, key) && hasKey(b, key);\n}\n\n// Main function\nfunction merge() {\n  var res = {},\n      current,\n      next,\n      l = arguments.length,\n      i,\n      k;\n\n  for (i = l - 1; i >= 0; i--) {\n\n    // Upper $set/$apply... and conflicts\n    // When solving conflicts, here is the priority to apply:\n    // -- 0) $unset\n    // -- 1) $set\n    // -- 2) $merge\n    // -- 3) $apply\n    // -- 4) $chain\n    if (arguments[i].$unset) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$merge;\n      res.$unset = arguments[i].$unset;\n    }\n    else if (arguments[i].$set) {\n      delete res.$apply;\n      delete res.$merge;\n      delete res.$unset;\n      res.$set = arguments[i].$set;\n      continue;\n    }\n    else if (arguments[i].$merge) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$unset;\n      res.$merge = arguments[i].$merge;\n      continue;\n    }\n    else if (arguments[i].$apply){\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n      res.$apply = arguments[i].$apply;\n      continue;\n    }\n    else if (arguments[i].$chain) {\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n\n      if (res.$apply)\n        res.$apply = helpers.compose(res.$apply, arguments[i].$chain);\n      else\n        res.$apply = arguments[i].$chain;\n      continue;\n    }\n\n    for (k in arguments[i]) {\n      current = res[k];\n      next = arguments[i][k];\n\n      if (current && type.Object(next)) {\n\n        // $push conflict\n        if (conflict(current, next, '$push')) {\n          if (type.Array(current.$push))\n            current.$push = current.$push.concat(next.$push);\n          else\n            current.$push = [current.$push].concat(next.$push);\n        }\n\n        // $unshift conflict\n        else if (conflict(current, next, '$unshift')) {\n          if (type.Array(next.$unshift))\n            current.$unshift = next.$unshift.concat(current.$unshift);\n          else\n            current.$unshift = [next.$unshift].concat(current.$unshift);\n        }\n\n        // No conflict\n        else {\n          res[k] = merge(next, current);\n        }\n      }\n      else {\n        res[k] = next;\n      }\n    }\n  }\n\n  return res;\n}\n\nmodule.exports = merge;\n\n},{\"./helpers.js\":13,\"./type.js\":16}],15:[function(require,module,exports){\n/**\n * Baobab React Mixins\n * ====================\n *\n * Compilation of react mixins designed to deal with cursors integration.\n */\nvar Combination = require('./combination.js'),\n    type = require('./type.js');\n\nmodule.exports = {\n  baobab: function(baobab) {\n    return {\n\n      // Run Baobab mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding baobab to instance\n          this.tree = baobab;\n\n          // Is there any cursors to create?\n          if (!this.cursor && !this.cursors)\n            return {};\n\n          // Is there conflicting definitions?\n          if (this.cursor && this.cursors)\n            throw Error('baobab.mixin: you cannot have both ' +\n                        '`component.cursor` and `component.cursors`. Please ' +\n                        'make up your mind.');\n\n          // Type\n          this.__type = null;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState(this.__getCursorData());\n          }).bind(this);\n\n          if (this.cursor) {\n            if (!type.MixinCursor(this.cursor))\n              throw Error('baobab.mixin.cursor: invalid data (cursor, ' +\n                          'string, array or function).');\n\n            if (type.Function(this.cursor))\n              this.cursor = this.cursor();\n\n            if (!type.Cursor(this.cursor))\n              this.cursor = baobab.select(this.cursor);\n\n            this.__getCursorData = (function() {\n              return {cursor: this.cursor.get()};\n            }).bind(this);\n            this.__type = 'single';\n          }\n          else if (this.cursors) {\n            if (!type.MixinCursors(this.cursors))\n              throw Error('baobab.mixin.cursor: invalid data (object, array or function).');\n\n            if (type.Function(this.cursors))\n              this.cursors = this.cursors();\n\n            if (type.Array(this.cursors)) {\n              this.cursors = this.cursors.map(function(path) {\n                return type.Cursor(path) ? path : baobab.select(path);\n              });\n\n              this.__getCursorData = (function() {\n                return {cursors: this.cursors.map(function(cursor) {\n                  return cursor.get();\n                })};\n              }).bind(this);\n              this.__type = 'array';\n            }\n            else {\n              for (var k in this.cursors) {\n                if (!type.Cursor(this.cursors[k]))\n                  this.cursors[k] = baobab.select(this.cursors[k]);\n              }\n\n              this.__getCursorData = (function() {\n                var d = {};\n                for (k in this.cursors)\n                  d[k] = this.cursors[k].get();\n                return {cursors: d};\n              }).bind(this);\n              this.__type = 'object';\n            }\n          }\n\n          return this.__getCursorData();\n        },\n        componentDidMount: function() {\n          if (this.__type === 'single') {\n            this.__combination = new Combination('or', [this.cursor]);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'array') {\n            this.__combination = new Combination('or', this.cursors);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'object') {\n            this.__combination = new Combination(\n              'or',\n              Object.keys(this.cursors).map(function(k) {\n                return this.cursors[k];\n              }, this)\n            );\n            this.__combination.on('update', this.__updateHandler);\n          }\n        },\n        componentWillUnmount: function() {\n          if (this.__combination)\n            this.__combination.release();\n        }\n      }].concat(baobab.options.mixins)\n    };\n  },\n  cursor: function(cursor) {\n    return {\n\n      // Run cursor mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding cursor to instance\n          this.cursor = cursor;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState({cursor: this.cursor.get()});\n          }).bind(this);\n\n          return {cursor: this.cursor.get()};\n        },\n        componentDidMount: function() {\n\n          // Listening to updates\n          this.cursor.on('update', this.__updateHandler);\n        },\n        componentWillUnmount: function() {\n\n          // Unbinding handler\n          this.cursor.off('update', this.__updateHandler);\n        }\n      }].concat(cursor.tree.options.mixins)\n    };\n  }\n};\n\n},{\"./combination.js\":11,\"./type.js\":16}],16:[function(require,module,exports){\n/**\n * Baobab Type Checking\n * =====================\n *\n * Misc helpers functions used throughout the library to perform some type\n * tests at runtime.\n *\n * @christianalfoni\n */\n\n// Not reusing methods as it will just be an extra\n// call on the stack\nvar type = function (value) {\n  if (Array.isArray(value)) {\n    return 'array';\n  } else if (typeof value === 'object' && value !== null) {\n    return 'object';\n  } else if (typeof value === 'string') {\n    return 'string';\n  } else if (typeof value === 'number') {\n    return 'number';\n  } else if (typeof value === 'boolean') {\n    return 'boolean';\n  } else if (typeof value === 'function') {\n    return 'function';\n  } else if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  } else if (value instanceof Date) {\n    return 'date';\n  } else {\n    return 'invalid';\n  }\n};\n\ntype.Array = function (value) {\n  return Array.isArray(value);\n};\n\ntype.Object = function (value) {\n  return !Array.isArray(value) && typeof value === 'object' && value !== null;\n};\n\ntype.String = function (value) {\n  return typeof value === 'string';\n};\n\ntype.Number = function (value) {\n  return typeof value === 'number';\n};\n\ntype.Boolean = function (value) {\n  return typeof value === 'boolean';\n};\n\ntype.Function = function (value) {\n  return typeof value === 'function';\n};\n\ntype.Primitive = function (value) {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\n};\n\ntype.Date = function (value) {\n  return value instanceof Date;\n};\n\ntype.Step = function (value) {\n  var valueType = type(value);\n  var notValid = ['null', 'undefined', 'invalid', 'date'];\n  return notValid.indexOf(valueType) === -1;\n};\n\n// Should undefined be allowed?\ntype.Path = function (value) {\n  var types = ['object', 'string', 'number', 'function', 'undefined'];\n  if (type.Array(value)) {\n    for (var x = 0; x < value.length; x++) {\n      if (types.indexOf(type(value[x])) === -1) {\n        return false;\n      }\n    }\n  } else {\n    return types.indexOf(type(value)) >= 0;\n  }\n  return true;\n\n};\n\n// string|number|array|cursor|function\ntype.MixinCursor = function (value) {\n  var allowedValues = ['string', 'number', 'array', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0 || type.Cursor(value);\n};\n\n// array|object|function\ntype.MixinCursors = function (value) {\n  var allowedValues = ['array', 'object', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0;\n};\n\n// Already know this is an array\ntype.ComplexPath = function (value) {\n  var complexTypes = ['object', 'function'];\n  for (var x = 0; x < value.length; x++) {\n    if (complexTypes.indexOf(type(value[x])) >= 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = type;\n\n},{}],17:[function(require,module,exports){\n/**\n * Baobab Update\n * ==============\n *\n * A handy method to mutate an atom according to the given specification.\n * Mostly inspired by http://facebook.github.io/react/docs/update.html\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\nvar COMMANDS = {};\n[\n  '$set',\n  '$push',\n  '$unshift',\n  '$apply',\n  '$merge'\n].forEach(function(c) {\n  COMMANDS[c] = true;\n});\n\n// Helpers\nfunction makeError(path, message) {\n  var e = new Error('baobab.update: ' + message + ' at path /' +\n                    path.toString());\n\n  e.path = path;\n  return e;\n}\n\n// Core function\nfunction update(target, spec, opts) {\n  opts = opts || {shiftReferences: false};\n  var log = {};\n\n  // Closure mutating the internal object\n  (function mutator(o, spec, path, parent) {\n    path = path || [];\n\n    var hash = path.join('λ'),\n        fn,\n        h,\n        k,\n        v;\n\n    for (k in spec) {\n      if (COMMANDS[k]) {\n        v = spec[k];\n\n        // Logging update\n        log[hash] = true;\n\n        // TODO: this could be before in the recursion\n        // Applying\n        switch (k) {\n          case '$push':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $push to a non array');\n\n            if (!type.Array(v))\n              o.push(v);\n            else\n              o.push.apply(o, v);\n            break;\n          case '$unshift':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $unshift to a non array');\n\n            if (!type.Array(v))\n              o.unshift(v);\n            else\n              o.unshift.apply(o, v);\n            break;\n        }\n      }\n      else {\n        h = hash ? hash + 'λ' + k : k;\n\n        if ('$unset' in (spec[k] || {})) {\n\n          // Logging update\n          log[h] = true;\n\n          if (type.Array(o)) {\n            if (!opts.shiftReferences)\n              o.splice(k, 1);\n            else\n              parent[path[path.length - 1]] = o.slice(0, +k).concat(o.slice(+k + 1));\n          }\n          else {\n            delete o[k];\n          }\n        }\n        else if ('$set' in (spec[k] || {})) {\n          v = spec[k].$set;\n\n          // Logging update\n          log[h] = true;\n          o[k] = v;\n        }\n        else if ('$apply' in (spec[k] || {}) || '$chain' in (spec[k] || {})) {\n\n          // TODO: this should not happen likewise.\n          fn = spec[k].$apply || spec[k].$chain;\n\n          if (typeof fn !== 'function')\n            throw makeError(path.concat(k), 'using command $apply with a non function');\n\n          // Logging update\n          log[h] = true;\n          o[k] = fn.call(null, o[k]);\n        }\n        else if ('$merge' in (spec[k] || {})) {\n          v = spec[k].$merge;\n\n          if (!type.Object(o[k]))\n            throw makeError(path.concat(k), 'using command $merge on a non-object');\n\n          // Logging update\n          log[h] = true;\n          o[k] = helpers.shallowMerge(o[k], v);\n        }\n        else if (opts.shiftReferences &&\n                 ('$push' in (spec[k] || {}) ||\n                  '$unshift' in (spec[k] || {}))) {\n          if ('$push' in (spec[k] || {})) {\n            v = spec[k].$push;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $push to a non array');\n            o[k] = o[k].concat(v);\n          }\n          if ('$unshift' in (spec[k] || {})) {\n            v = spec[k].$unshift;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $unshift to a non array');\n            o[k] = (v instanceof Array ? v : [v]).concat(o[k]);\n          }\n\n          // Logging update\n          log[h] = true;\n        }\n        else {\n\n          // If nested object does not exist, we create it\n          if (typeof o[k] === 'undefined')\n            o[k] = {};\n\n          // Shifting reference\n          if (opts.shiftReferences)\n            o[k] = helpers.shallowClone(o[k]);\n\n          // Recur\n          // TODO: fix this horrendous behaviour.\n          mutator(\n            o[k],\n            spec[k],\n            path.concat(k),\n            o\n          );\n        }\n      }\n    }\n  })(target, spec);\n\n  return Object.keys(log).map(function(hash) {\n    return hash.split('λ');\n  });\n}\n\n// Exporting\nmodule.exports = update;\n\n},{\"./helpers.js\":13,\"./type.js\":16}],18:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding) {\n  var self = this\n  if (!(self instanceof Buffer)) return new Buffer(subject, encoding)\n\n  var type = typeof subject\n  var length\n\n  if (type === 'number') {\n    length = +subject\n  } else if (type === 'string') {\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) {\n    // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data)) subject = subject.data\n    length = +subject.length\n  } else {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (length > kMaxLength) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' +\n      kMaxLength.toString(16) + ' bytes')\n  }\n\n  if (length < 0) length = 0\n  else length >>>= 0 // coerce to uint32\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    self = Buffer._augment(new Uint8Array(length)) // eslint-disable-line consistent-this\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    self.length = length\n    self._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    self._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++) {\n        self[i] = subject.readUInt8(i)\n      }\n    } else {\n      for (i = 0; i < length; i++) {\n        self[i] = ((subject[i] % 256) + 256) % 256\n      }\n    }\n  } else if (type === 'string') {\n    self.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (i = 0; i < length; i++) {\n      self[i] = 0\n    }\n  }\n\n  if (length > 0 && length <= Buffer.poolSize) self.parent = rootParent\n\n  return self\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function byteLength (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function toString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n\n  if (length < 0 || offset < 0 || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) >>> 0 & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkInt(\n      this, value, offset, byteLength,\n      Math.pow(2, 8 * byteLength - 1) - 1,\n      -Math.pow(2, 8 * byteLength - 1)\n    )\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, target_start, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (target_start >= target.length) target_start = target.length\n  if (!target_start) target_start = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (target_start < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - target_start < end - start) {\n    end = target.length - target_start + start\n  }\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z\\-]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n},{\"base64-js\":19,\"ieee754\":20,\"is-array\":21}],19:[function(require,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],20:[function(require,module,exports){\nexports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n},{}],21:[function(require,module,exports){\n\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n},{}],22:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],23:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],24:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],25:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],26:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/punycode v1.2.4 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /\\x2E|\\u3002|\\uFF0E|\\uFF61/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\twhile (length--) {\n\t\t\tarray[length] = fn(array[length]);\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings.\n\t * @private\n\t * @param {String} domain The domain name.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\treturn map(string.split(regexSeparators), fn).join('.');\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols to a Punycode string of ASCII-only\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name to Unicode. Only the\n\t * Punycoded parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it on a string that has already been converted to\n\t * Unicode.\n\t * @memberOf punycode\n\t * @param {String} domain The Punycode domain name to convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name to Punycode. Only the\n\t * non-ASCII parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it with a domain that's already in ASCII.\n\t * @memberOf punycode\n\t * @param {String} domain The domain name to convert, as a Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name.\n\t */\n\tfunction toASCII(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.2.4',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],27:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],28:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":27,\"./encode\":28}],30:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n},{\"punycode\":26,\"querystring\":29}],31:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],32:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./support/isBuffer\":31,\"_process\":25,\"inherits\":23}],33:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    if (promise.isRejected()) {\n        return promise;\n    }\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],34:[function(require,module,exports){\n(function (process){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = require(\"./schedule.js\");\nvar Queue = require(\"./queue.js\");\nvar _process = typeof process !== \"undefined\" ? process : undefined;\n\nfunction Async() {\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule =\n        schedule.isStatic ? schedule(this.drainQueues) : schedule;\n}\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._normalQueue.length() > 0;\n};\n\nAsync.prototype._withDomain = function(fn) {\n    if (_process !== undefined &&\n        _process.domain != null &&\n        !fn.domain) {\n        fn = _process.domain.bind(fn);\n    }\n    return fn;\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    fn = this._withDomain(fn);\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");\n    }\n};\n\nAsync.prototype.invokeLater = function (fn, receiver, arg) {\n    fn = this._withDomain(fn);\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n};\n\nAsync.prototype.invokeFirst = function (fn, receiver, arg) {\n    fn = this._withDomain(fn);\n    this._normalQueue.unshift(fn, receiver, arg);\n    this._queueTick();\n};\n\nAsync.prototype.invoke = function (fn, receiver, arg) {\n    fn = this._withDomain(fn);\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n};\n\nAsync.prototype.settlePromises = function(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n};\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = new Async();\nmodule.exports.firstLineError = firstLineError;\n\n}).call(this,require('_process'))\n},{\"./queue.js\":56,\"./schedule.js\":59,\"_process\":25}],35:[function(require,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = require(\"./promise.js\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise.js\":51}],36:[function(require,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = require(\"./util.js\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nfunction makeMethodCaller (methodName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict'                                                         \\n\\\n        var len = this.length;                                               \\n\\\n        switch(len) {                                                        \\n\\\n            case 1: return obj.methodName(this[0]);                          \\n\\\n            case 2: return obj.methodName(this[0], this[1]);                 \\n\\\n            case 3: return obj.methodName(this[0], this[1], this[2]);        \\n\\\n            case 0: return obj.methodName();                                 \\n\\\n            default: return obj.methodName.apply(obj, this);                 \\n\\\n        }                                                                    \\n\\\n        \".replace(/methodName/g, methodName));\n}\n\nfunction makeGetter (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n}\n\nfunction getCompiled(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n}\n\nfunction getMethodCaller(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n}\n\nfunction getGetter(name) {\n    return getCompiled(name, makeGetter, getterCache);\n}\n\nfunction caller(obj) {\n    return obj[this.pop()].apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n    if (canEvaluate) {\n        var maybeCaller = getMethodCaller(methodName);\n        if (maybeCaller !== null) {\n            return this._then(\n                maybeCaller, undefined, undefined, args, undefined);\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util.js\":66}],37:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar errors = require(\"./errors.js\");\nvar async = require(\"./async.js\");\nvar CancellationError = errors.CancellationError;\n\nPromise.prototype._cancel = function (reason) {\n    if (!this.isCancellable()) return this;\n    var parent;\n    var promiseToReject = this;\n    while ((parent = promiseToReject._cancellationParent) !== undefined &&\n        parent.isCancellable()) {\n        promiseToReject = parent;\n    }\n    this._unsetCancellable();\n    promiseToReject._target()._rejectCallback(reason, false, true);\n};\n\nPromise.prototype.cancel = function (reason) {\n    if (!this.isCancellable()) return this;\n    if (reason === undefined) reason = new CancellationError();\n    async.invokeLater(this._cancel, this, reason);\n    return this;\n};\n\nPromise.prototype.cancellable = function () {\n    if (this._cancellable()) return this;\n    this._setCancellable();\n    this._cancellationParent = undefined;\n    return this;\n};\n\nPromise.prototype.uncancellable = function () {\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 4);\n    ret._follow(this);\n    ret._unsetCancellable();\n    return ret;\n};\n\nPromise.prototype.fork = function (didFulfill, didReject, didProgress) {\n    var ret = this._then(didFulfill, didReject, didProgress,\n                         undefined, undefined);\n\n    ret._setCancellable();\n    ret._cancellationParent = undefined;\n    return ret;\n};\n};\n\n},{\"./async.js\":34,\"./errors.js\":42}],38:[function(require,module,exports){\n(function (process){\n\"use strict\";\nmodule.exports = function() {\nvar async = require(\"./async.js\");\nvar inherits = require(\"./util.js\").inherits;\nvar bluebirdFramePattern = /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](main|debug|zalgo)/;\nvar stackFramePattern = null;\nvar formatStack = null;\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\ninherits(CapturedTrace, Error);\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.parent = function() {\n    return this._parent;\n};\n\nCapturedTrace.prototype.hasParent = function() {\n    return this._parent !== undefined;\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var header = CapturedTrace.cleanHeaderStack(error, false);\n    var stacks = [header.slice(1)];\n    var trace = this;\n\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\"), 0));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    var message = header[0].split(\"\\u0002\\u0000\\u0001\").join(\"\\n\");\n    error.stack = reconstructStack(message, stacks);\n};\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    stacks[i] = stacks[i].join(\"\\n\");\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction protectErrorMessageNewlines (stack) {\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i <= 1) return 1;\n    var errorMessageLines = [];\n    for (var j = 0; j < i; ++j) {\n        errorMessageLines.push(stack.shift());\n    }\n    stack.unshift(errorMessageLines.join(\"\\u0002\\u0000\\u0001\"));\n    return i;\n}\n\nfunction unProtectNewlines(stack) {\n    if (stack.length > 0) {\n        stack[0] = stack[0].split(\"\\u0002\\u0000\\u0001\").join(\"\\n\");\n    }\n    return stack;\n}\n\nfunction cleanStack(stack, initialIndex) {\n    var ret = stack.slice(0, initialIndex);\n    for (var i = initialIndex; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = stackFramePattern.test(line) ||\n            \"    (No stack trace)\" === line;\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nCapturedTrace.cleanHeaderStack = function(error, shouldUnProtectNewlines) {\n    if (error.__stackCleaned__) return;\n    error.__stackCleaned__ = true;\n    var stack = error.stack;\n    stack = typeof stack === \"string\"\n        ? stack.split(\"\\n\")\n        : [error.toString(), \"    (No stack trace)\"];\n    var initialIndex = protectErrorMessageNewlines(stack);\n    stack = cleanStack(stack, initialIndex);\n    if (shouldUnProtectNewlines) stack = unProtectNewlines(stack);\n    error.stack = stack.join(\"\\n\");\n    return stack;\n};\n\nCapturedTrace.formatAndLogError = function(error, title) {\n    if (typeof console === \"object\") {\n        var message;\n        if (typeof error === \"object\" || typeof error === \"function\") {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof console.warn === \"function\" ||\n            typeof console.warn === \"object\") {\n            console.warn(message);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n};\n\nCapturedTrace.unhandledRejection = function (reason) {\n    CapturedTrace.formatAndLogError(reason, \"^--- With additional stack trace: \");\n};\n\nCapturedTrace.isSupported = function () {\n    return typeof captureStackTrace === \"function\";\n};\n\nCapturedTrace.fireRejectionEvent =\nfunction(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent(name, reason, promise);\n    } catch (e) {\n        globalEventFired = true;\n        async.throwLater(e);\n    }\n\n    var domEventFired = false;\n    if (fireDomEvent) {\n        try {\n            domEventFired = fireDomEvent(name.toLowerCase(), {\n                reason: reason,\n                promise: promise\n            });\n        } catch (e) {\n            domEventFired = true;\n            async.throwLater(e);\n        }\n    }\n\n    if (!globalEventFired && !localEventFired && !domEventFired &&\n        name === \"unhandledRejection\") {\n        CapturedTrace.formatAndLogError(reason, \"Possibly unhandled \");\n    }\n};\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj.toString();\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\nCapturedTrace.setBounds = function(firstLineError, lastLineError) {\n    if (!CapturedTrace.isSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.name + \". \" + error.message;\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit = Error.stackTraceLimit + 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit = Error.stackTraceLimit + 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit = Error.stackTraceLimit - 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        typeof \"\".startsWith === \"function\" &&\n        (err.stack.startsWith(\"stackDetection@\")) &&\n        stackDetection.name === \"stackDetection\") {\n\n        stackFramePattern = /@/;\n        var rline = /[@\\n]/;\n\n        formatStack = function(stack, error) {\n            if (typeof stack === \"string\") {\n                return (error.name + \". \" + error.message + \"\\n\" + stack);\n            }\n\n            if (error.name !== undefined &&\n                error.message !== undefined) {\n                return error.name + \". \" + error.message;\n            }\n            return formatNonError(error);\n        };\n\n        return function captureStackTrace(o) {\n            var stack = new Error().stack;\n            var split = stack.split(rline);\n            var len = split.length;\n            var ret = \"\";\n            for (var i = 0; i < len; i += 2) {\n                ret += split[i];\n                ret += \"@\";\n                ret += split[i + 1];\n                ret += \"\\n\";\n            }\n            o.stack = ret;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow) {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.name + \". \" + error.message;\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})();\n\nvar fireDomEvent;\nvar fireGlobalEvent = (function() {\n    if (typeof process !== \"undefined\" &&\n        typeof process.version === \"string\" &&\n        typeof window === \"undefined\") {\n        return function(name, reason, promise) {\n            if (name === \"rejectionHandled\") {\n                return process.emit(name, promise);\n            } else {\n                return process.emit(name, reason, promise);\n            }\n        };\n    } else {\n        var customEventWorks = false;\n        try {\n            var ev = new self.CustomEvent(\"test\");\n            customEventWorks = ev instanceof CustomEvent;\n        } catch (e) {}\n        fireDomEvent = function(type, detail) {\n            var event;\n            if (customEventWorks) {\n                event = new self.CustomEvent(type, {\n                    detail: detail,\n                    bubbles: false,\n                    cancelable: true\n                });\n            } else if (self.dispatchEvent) {\n                event = document.createEvent(\"CustomEvent\");\n                event.initCustomEvent(type, false, true, detail);\n            }\n\n            return event ? !self.dispatchEvent(event) : false;\n        };\n\n        var toWindowMethodNameMap = {};\n        toWindowMethodNameMap[\"unhandledRejection\"] = (\"on\" +\n            \"unhandledRejection\").toLowerCase();\n        toWindowMethodNameMap[\"rejectionHandled\"] = (\"on\" +\n            \"rejectionHandled\").toLowerCase();\n\n        return function(name, reason, promise) {\n            var methodName = toWindowMethodNameMap[name];\n            var method = self[methodName];\n            if (!method) return false;\n            if (name === \"rejectionHandled\") {\n                method.call(self, promise);\n            } else {\n                method.call(self, reason, promise);\n            }\n            return true;\n        };\n    }\n})();\n\nreturn CapturedTrace;\n};\n\n}).call(this,require('_process'))\n},{\"./async.js\":34,\"./util.js\":66,\"_process\":25}],39:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = require(\"./util.js\");\nvar errors = require(\"./errors.js\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar keys = require(\"./es5.js\").keys;\nvar TypeError = errors.TypeError;\n\nfunction CatchFilter(instances, callback, promise) {\n    this._instances = instances;\n    this._callback = callback;\n    this._promise = promise;\n}\n\nfunction safePredicate(predicate, e) {\n    var safeObject = {};\n    var retfilter = tryCatch(predicate).call(safeObject, e);\n\n    if (retfilter === errorObj) return retfilter;\n\n    var safeKeys = keys(safeObject);\n    if (safeKeys.length) {\n        errorObj.e = new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\");\n        return errorObj;\n    }\n    return retfilter;\n}\n\nCatchFilter.prototype.doFilter = function (e) {\n    var cb = this._callback;\n    var promise = this._promise;\n    var boundTo = promise._boundTo;\n    for (var i = 0, len = this._instances.length; i < len; ++i) {\n        var item = this._instances[i];\n        var itemIsErrorType = item === Error ||\n            (item != null && item.prototype instanceof Error);\n\n        if (itemIsErrorType && e instanceof item) {\n            var ret = tryCatch(cb).call(boundTo, e);\n            if (ret === errorObj) {\n                NEXT_FILTER.e = ret.e;\n                return NEXT_FILTER;\n            }\n            return ret;\n        } else if (typeof item === \"function\" && !itemIsErrorType) {\n            var shouldHandle = safePredicate(item, e);\n            if (shouldHandle === errorObj) {\n                e = errorObj.e;\n                break;\n            } else if (shouldHandle) {\n                var ret = tryCatch(cb).call(boundTo, e);\n                if (ret === errorObj) {\n                    NEXT_FILTER.e = ret.e;\n                    return NEXT_FILTER;\n                }\n                return ret;\n            }\n        }\n    }\n    NEXT_FILTER.e = e;\n    return NEXT_FILTER;\n};\n\nreturn CatchFilter;\n};\n\n},{\"./errors.js\":42,\"./es5.js\":43,\"./util.js\":66}],40:[function(require,module,exports){\n\"use strict\";\nvar util = require(\"./util.js\");\nvar isPrimitive = util.isPrimitive;\nvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\n\nmodule.exports = function(Promise) {\nvar returner = function () {\n    return this;\n};\nvar thrower = function () {\n    throw this;\n};\n\nvar wrapper = function (value, action) {\n    if (action === 1) {\n        return function () {\n            throw value;\n        };\n    } else if (action === 2) {\n        return function () {\n            return value;\n        };\n    }\n};\n\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (wrapsPrimitiveReceiver && isPrimitive(value)) {\n        return this._then(\n            wrapper(value, 2),\n            undefined,\n            undefined,\n            undefined,\n            undefined\n       );\n    }\n    return this._then(returner, undefined, undefined, value, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    if (wrapsPrimitiveReceiver && isPrimitive(reason)) {\n        return this._then(\n            wrapper(reason, 1),\n            undefined,\n            undefined,\n            undefined,\n            undefined\n       );\n    }\n    return this._then(thrower, undefined, undefined, reason, undefined);\n};\n};\n\n},{\"./util.js\":66}],41:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, null, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, null, INTERNAL);\n};\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\nvar Objectfreeze = require(\"./es5.js\").freeze;\nvar util = require(\"./util.js\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nAggregateError.prototype.length = 0;\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    notEnumerableProp(Error, \"__BluebirdErrorTypes__\", errorTypes);\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError\n};\n\n},{\"./es5.js\":43,\"./util.js\":66}],43:[function(require,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        keys: Object.keys,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],44:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, NEXT_FILTER, tryConvertToPromise) {\nvar util = require(\"./util.js\");\nvar wrapsPrimitiveReceiver = util.wrapsPrimitiveReceiver;\nvar isPrimitive = util.isPrimitive;\nvar thrower = util.thrower;\n\nfunction returnThis() {\n    return this;\n}\nfunction throwThis() {\n    throw this;\n}\nfunction return$(r) {\n    return function() {\n        return r;\n    };\n}\nfunction throw$(r) {\n    return function() {\n        throw r;\n    };\n}\nfunction promisedFinally(ret, reasonOrValue, isFulfilled) {\n    var then;\n    if (wrapsPrimitiveReceiver && isPrimitive(reasonOrValue)) {\n        then = isFulfilled ? return$(reasonOrValue) : throw$(reasonOrValue);\n    } else {\n        then = isFulfilled ? returnThis : throwThis;\n    }\n    return ret._then(then, thrower, undefined, reasonOrValue, undefined);\n}\n\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    var ret = promise._isBound()\n                    ? handler.call(promise._boundTo)\n                    : handler();\n\n    if (ret !== undefined) {\n        var maybePromise = tryConvertToPromise(ret, promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            return promisedFinally(maybePromise, reasonOrValue,\n                                    promise.isFulfilled());\n        }\n    }\n\n    if (promise.isRejected()) {\n        NEXT_FILTER.e = reasonOrValue;\n        return NEXT_FILTER;\n    } else {\n        return reasonOrValue;\n    }\n}\n\nfunction tapHandler(value) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    var ret = promise._isBound()\n                    ? handler.call(promise._boundTo, value)\n                    : handler(value);\n\n    if (ret !== undefined) {\n        var maybePromise = tryConvertToPromise(ret, promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            return promisedFinally(maybePromise, value, true);\n        }\n    }\n    return value;\n}\n\nPromise.prototype._passThroughHandler = function (handler, isFinally) {\n    if (typeof handler !== \"function\") return this.then();\n\n    var promiseAndHandler = {\n        promise: this,\n        handler: handler\n    };\n\n    return this._then(\n            isFinally ? finallyHandler : tapHandler,\n            isFinally ? finallyHandler : undefined, undefined,\n            promiseAndHandler, undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThroughHandler(handler, true);\n};\n\nPromise.prototype.tap = function (handler) {\n    return this._passThroughHandler(handler, false);\n};\n};\n\n},{\"./util.js\":66}],46:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise) {\nvar errors = require(\"./errors.js\");\nvar TypeError = errors.TypeError;\nvar deprecated = require(\"./util.js\").deprecated;\nvar util = require(\"./util.js\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    var promise = this._promise = new Promise(INTERNAL);\n    promise._captureStackTrace();\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n}\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._next(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    if (result === errorObj) {\n        this._generator = undefined;\n        var trace = util.canAttachTrace(result.e)\n            ? result.e : new Error(util.toString(result.e));\n        this._promise._attachExtraTrace(trace);\n        this._promise._reject(result.e, trace);\n        return;\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._generator = undefined;\n        if (!this._promise._tryFollow(value)) {\n            this._promise._fulfill(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._throw(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/4Y4pDk\\u000a\\u000a\".replace(\"%s\", value) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise._then(\n            this._next,\n            this._throw,\n            undefined,\n            this,\n            null\n       );\n    }\n};\n\nPromiseSpawn.prototype._throw = function (reason) {\n    if (util.canAttachTrace(reason))\n        this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._next = function (value) {\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        spawn._generator = generator;\n        spawn._next(undefined);\n        return spawn.promise();\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    deprecated(\"Promise.spawn is deprecated. Use Promise.coroutine instead.\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/6Vqhm0\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors.js\":42,\"./util.js\":66}],47:[function(require,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL) {\nvar util = require(\"./util.js\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var caller = function(count) {\n        var values = [];\n        for (var i = 1; i <= count; ++i) values.push(\"holder.p\" + i);\n        return new Function(\"holder\", \"                                      \\n\\\n            'use strict';                                                    \\n\\\n            var callback = holder.fn;                                        \\n\\\n            return callback(values);                                         \\n\\\n            \".replace(/values/g, values.join(\", \")));\n    };\n    var thenCallbacks = [];\n    var callers = [undefined];\n    for (var i = 1; i <= 5; ++i) {\n        thenCallbacks.push(thenCallback(i));\n        callers.push(caller(i));\n    }\n\n    var Holder = function(total, fn) {\n        this.p1 = this.p2 = this.p3 = this.p4 = this.p5 = null;\n        this.fn = fn;\n        this.total = total;\n        this.now = 0;\n    };\n\n    Holder.prototype.callers = callers;\n    Holder.prototype.checkFulfillment = function(promise) {\n        var now = this.now;\n        now++;\n        var total = this.total;\n        if (now >= total) {\n            var handler = this.callers[total];\n            promise._pushContext();\n            var ret = tryCatch(handler)(this);\n            promise._popContext();\n            if (ret === errorObj) {\n                promise._rejectCallback(ret.e, false, true);\n            } else if (!promise._tryFollow(ret)) {\n                promise._fulfillUnchecked(ret);\n            }\n        } else {\n            this.now = now;\n        }\n    };\n}\n\nfunction reject(reason) {\n    this._reject(reason);\n}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (last < 6 && canEvaluate) {\n            var ret = new Promise(INTERNAL);\n            ret._captureStackTrace();\n            var holder = new Holder(last, fn);\n            var callbacks = thenCallbacks;\n            for (var i = 0; i < last; ++i) {\n                var maybePromise = tryConvertToPromise(arguments[i], ret);\n                if (maybePromise instanceof Promise) {\n                    maybePromise = maybePromise._target();\n                    if (maybePromise._isPending()) {\n                        maybePromise._then(callbacks[i], reject,\n                                           undefined, ret, holder);\n                    } else if (maybePromise._isFulfilled()) {\n                        callbacks[i].call(ret,\n                                          maybePromise._value(), holder);\n                    } else {\n                        ret._reject(maybePromise._reason());\n                    }\n                } else {\n                    callbacks[i].call(ret, maybePromise, holder);\n                }\n            }\n            return ret;\n        }\n    }\n    var $_len = arguments.length;var args = new Array($_len); for(var $_i = 0; $_i < $_len; ++$_i) {args[$_i] = arguments[$_i];}\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util.js\":66}],48:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL) {\nvar util = require(\"./util.js\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar PENDING = {};\nvar EMPTY_ARRAY = [];\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._setIsSpreadable();\n    this._promise._captureStackTrace();\n    this._callback = fn;\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = limit >= 1 ? [] : EMPTY_ARRAY;\n    this._init$(undefined, -2);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n    if (values[index] === PENDING) {\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var callback = this._callback;\n        var receiver = this._promise._boundTo;\n        this._promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        this._promise._popContext();\n        if (ret === errorObj) return this._reject(ret.e);\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            if (maybePromise._isPending()) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = PENDING;\n                return maybePromise._proxyPromiseArray(this, index);\n            } else if (maybePromise._isFulfilled()) {\n                ret = maybePromise._value();\n            } else {\n                return this._reject(maybePromise._reason());\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n\n    }\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    var limit = typeof options === \"object\" && options !== null\n        ? options.concurrency\n        : 0;\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter);\n}\n\nPromise.prototype.map = function (fn, options) {\n    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n\n    return map(this, fn, options, null).promise();\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    return map(promises, fn, options, _filter).promise();\n};\n\n\n};\n\n},{\"./util.js\":66}],49:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret = tryCatch(nodeback).apply(promise._boundTo, [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundTo;\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var target = promise._target();\n        var newReason = target._getCarriedStackTrace();\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundTo, reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.nodeify = function (nodeback, options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./async.js\":34,\"./util.js\":66}],50:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray) {\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nPromise.prototype.progressed = function (handler) {\n    return this._then(undefined, undefined, handler, undefined, undefined);\n};\n\nPromise.prototype._progress = function (progressValue) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._target()._progressUnchecked(progressValue);\n\n};\n\nPromise.prototype._progressHandlerAt = function (index) {\n    return index === 0\n        ? this._progressHandler0\n        : this[(index << 2) + index - 5 + 2];\n};\n\nPromise.prototype._doProgressWith = function (progression) {\n    var progressValue = progression.value;\n    var handler = progression.handler;\n    var promise = progression.promise;\n    var receiver = progression.receiver;\n\n    var ret = tryCatch(handler).call(receiver, progressValue);\n    if (ret === errorObj) {\n        if (ret.e != null &&\n            ret.e.name !== \"StopProgressPropagation\") {\n            var trace = util.canAttachTrace(ret.e)\n                ? ret.e : new Error(util.toString(ret.e));\n            promise._attachExtraTrace(trace);\n            promise._progress(ret.e);\n        }\n    } else if (ret instanceof Promise) {\n        ret._then(promise._progress, null, null, promise, undefined);\n    } else {\n        promise._progress(ret);\n    }\n};\n\n\nPromise.prototype._progressUnchecked = function (progressValue) {\n    var len = this._length();\n    var progress = this._progress;\n    for (var i = 0; i < len; i++) {\n        var handler = this._progressHandlerAt(i);\n        var promise = this._promiseAt(i);\n        if (!(promise instanceof Promise)) {\n            var receiver = this._receiverAt(i);\n            if (typeof handler === \"function\") {\n                handler.call(receiver, progressValue, promise);\n            } else if (receiver instanceof PromiseArray &&\n                       !receiver._isResolved()) {\n                receiver._promiseProgressed(progressValue, promise);\n            }\n            continue;\n        }\n\n        if (typeof handler === \"function\") {\n            async.invoke(this._doProgressWith, this, {\n                handler: handler,\n                promise: promise,\n                receiver: this._receiverAt(i),\n                value: progressValue\n            });\n        } else {\n            async.invoke(progress, promise, progressValue);\n        }\n    }\n};\n};\n\n},{\"./async.js\":34,\"./util.js\":66}],51:[function(require,module,exports){\n(function (process){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/LhFpo0\\u000a\");\n};\nvar reflect = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nvar util = require(\"./util.js\");\nvar async = require(\"./async.js\");\nvar errors = require(\"./errors.js\");\nvar RangeError = errors.RangeError;\nvar TypeError = errors.TypeError;\nvar CancellationError = errors.CancellationError;\nvar TimeoutError = errors.TimeoutError;\nvar OperationalError = errors.OperationalError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {e: null};\nvar tryConvertToPromise = require(\"./thenables.js\")(Promise, INTERNAL);\nvar PromiseArray =\n    require(\"./promise_array.js\")(Promise, INTERNAL,\n                                    tryConvertToPromise, apiRejection);\nvar CapturedTrace = require(\"./captured_trace.js\")();\nvar CatchFilter = require(\"./catch_filter.js\")(NEXT_FILTER);\nvar PromiseResolver = require(\"./promise_resolver.js\");\nvar isArray = util.isArray;\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar originatesFromRejection = util.originatesFromRejection;\nvar markAsOriginatingFromRejection = util.markAsOriginatingFromRejection;\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\n\nvar debugging = false || !!(\n    typeof process !== \"undefined\" &&\n    typeof process.execPath === \"string\" &&\n    typeof process.env === \"object\" &&\n    (process.env[\"BLUEBIRD_DEBUG\"] ||\n        process.env[\"NODE_ENV\"] === \"development\")\n);\nfunction Promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"the promise constructor requires a resolver function\\u000a\\u000a    See http://goo.gl/EC22Yn\\u000a\");\n    }\n    if (this.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/KsIlge\\u000a\");\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._progressHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settledValue = undefined;\n    this._boundTo = undefined;\n    if (resolver !== INTERNAL) this._resolveFromResolver(resolver);\n}\n\nPromise.prototype.bind = function (thisArg) {\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    if (maybePromise instanceof Promise) {\n        target._then(INTERNAL, ret._reject, ret._progress, ret, null);\n        maybePromise._then(function(thisArg) {\n            if (ret._isPending()) {\n                ret._setBoundTo(thisArg);\n                ret._follow(target);\n            }\n        }, ret._reject, ret._progress, ret, null);\n    } else {\n        ret._setBoundTo(thisArg);\n        ret._follow(target);\n    }\n\n    return ret;\n};\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (typeof item === \"function\") {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(\n                    new TypeError(\"Catch filter must inherit from Error or be a simple predicate function\\u000a\\u000a    See http://goo.gl/o84o68\\u000a\"));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        var catchFilter = new CatchFilter(catchInstances, fn, this);\n        return this._then(undefined, catchFilter.doFilter, undefined,\n            catchFilter, undefined);\n    }\n    return this._then(undefined, fn, undefined, undefined, undefined);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflect, reflect, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject, didProgress) {\n    return this._then(didFulfill, didReject, didProgress,\n        undefined, undefined);\n};\n\n\nPromise.prototype.done = function (didFulfill, didReject, didProgress) {\n    var promise = this._then(didFulfill, didReject, didProgress,\n        undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (didFulfill, didReject) {\n    var followee = this._target();\n    var target = followee._isSpreadable()\n        ? (followee === this ? this : this.then())\n        : this.all();\n    return target._then(didFulfill, didReject, undefined, APPLY, undefined);\n};\n\nPromise.prototype.isCancellable = function () {\n    return !this.isResolved() &&\n        this._cancellable();\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    var ret = new PromiseArray(this).promise();\n    ret._setIsSpreadable();\n    return ret;\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(originatesFromRejection, fn);\n};\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.all = function (promises) {\n    var ret = new PromiseArray(promises).promise();\n    ret._setIsSpreadable();\n    return ret;\n};\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        ret._popContext();\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn, args, ctx) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value = isArray(args)\n        ? tryCatch(fn).apply(ctx, args)\n        : tryCatch(fn).call(ctx, args);\n    ret._popContext();\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.defer = Promise.pending = function () {\n    var promise = new Promise(INTERNAL);\n    return new PromiseResolver(promise);\n};\n\nPromise.bind = function (thisArg) {\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n\n    if (maybePromise instanceof Promise) {\n        maybePromise._then(function(thisArg) {\n            ret._setBoundTo(thisArg);\n            ret._fulfill(undefined);\n        }, ret._reject, ret._progress, ret, null);\n    } else {\n        ret._setBoundTo(thisArg);\n        ret._setFulfilled();\n    }\n    return ret;\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        var val = ret;\n        ret = new Promise(INTERNAL);\n        ret._setFulfilled();\n        ret._settledValue = val;\n        ret._cleanValues();\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    possiblyUnhandledRejection = typeof fn === \"function\" ? fn : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    unhandledRejectionHandled = typeof fn === \"function\" ? fn : undefined;\n};\n\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() &&\n        debugging === false\n   ) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/DT1qyG\\u000a\");\n    }\n    debugging = CapturedTrace.isSupported();\n};\n\nPromise.hasLongStackTraces = function () {\n    return debugging && CapturedTrace.isSupported();\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    async._schedule = fn;\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    didProgress,\n    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var ret = haveInternalData ? internalData : new Promise(INTERNAL);\n\n    if (!haveInternalData) {\n        ret._propagateFrom(this, 4 | 1);\n        ret._captureStackTrace();\n    }\n\n    var target = this._target();\n    if (target !== this) {\n        if (receiver === undefined) receiver = this._boundTo;\n        if (!haveInternalData) ret._setIsMigrated();\n    }\n\n    var callbackIndex =\n        target._addCallbacks(didFulfill, didReject, didProgress, ret, receiver);\n\n    if (target._isResolved() && !target._isSettlePromisesQueued()) {\n        async.invoke(\n            target._settlePromiseAtPostResolution, target, callbackIndex);\n    }\n\n    return ret;\n};\n\nPromise.prototype._settlePromiseAtPostResolution = function (index) {\n    if (this._isRejectionUnhandled()) this._unsetRejectionIsUnhandled();\n    this._settlePromiseAt(index);\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 131071;\n};\n\nPromise.prototype._isFollowingOrFulfilledOrRejected = function () {\n    return (this._bitField & 939524096) > 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 536870912) === 536870912;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -131072) |\n        (len & 131071);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 536870912;\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 33554432;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 33554432) > 0;\n};\n\nPromise.prototype._cancellable = function () {\n    return (this._bitField & 67108864) > 0;\n};\n\nPromise.prototype._setCancellable = function () {\n    this._bitField = this._bitField | 67108864;\n};\n\nPromise.prototype._unsetCancellable = function () {\n    this._bitField = this._bitField & (~67108864);\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 2097152;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~2097152);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 2097152) > 0;\n};\n\nPromise.prototype._isSpreadable = function () {\n    return (this._bitField & 131072) > 0;\n};\n\nPromise.prototype._setIsSpreadable = function () {\n    this._bitField = this._bitField | 131072;\n};\n\nPromise.prototype._setIsMigrated = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._unsetIsMigrated = function () {\n    this._bitField = this._bitField & (~4194304);\n};\n\nPromise.prototype._isMigrated = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 524288;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~524288);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 524288) > 0;\n};\n\nPromise.prototype._setCarriedStackTrace = function (capturedTrace) {\n    this._bitField = this._bitField | 1048576;\n    this._fulfillmentHandler0 = capturedTrace;\n};\n\nPromise.prototype._isCarryingStackTrace = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._getCarriedStackTrace = function () {\n    return this._isCarryingStackTrace()\n        ? this._fulfillmentHandler0\n        : undefined;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0\n        ? this._receiver0\n        : this[\n            index * 5 - 5 + 4];\n    if (this._isBound() && ret === undefined) {\n        return this._boundTo;\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return index === 0\n        ? this._promise0\n        : this[index * 5 - 5 + 3];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return index === 0\n        ? this._fulfillmentHandler0\n        : this[index * 5 - 5 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return index === 0\n        ? this._rejectionHandler0\n        : this[index * 5 - 5 + 1];\n};\n\nPromise.prototype._migrateCallbacks = function (\n    fulfill,\n    reject,\n    progress,\n    promise,\n    receiver\n) {\n    if (promise instanceof Promise) promise._setIsMigrated();\n    this._addCallbacks(fulfill, reject, progress, promise, receiver);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    progress,\n    promise,\n    receiver\n) {\n    var index = this._length();\n\n    if (index >= 131071 - 5) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        if (receiver !== undefined) this._receiver0 = receiver;\n        if (typeof fulfill === \"function\" && !this._isCarryingStackTrace())\n            this._fulfillmentHandler0 = fulfill;\n        if (typeof reject === \"function\") this._rejectionHandler0 = reject;\n        if (typeof progress === \"function\") this._progressHandler0 = progress;\n    } else {\n        var base = index * 5 - 5;\n        this[base + 3] = promise;\n        this[base + 4] = receiver;\n        if (typeof fulfill === \"function\")\n            this[base + 0] = fulfill;\n        if (typeof reject === \"function\")\n            this[base + 1] = reject;\n        if (typeof progress === \"function\")\n            this[base + 2] = progress;\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._setProxyHandlers = function (receiver, promiseSlotValue) {\n    var index = this._length();\n\n    if (index >= 131071 - 5) {\n        index = 0;\n        this._setLength(0);\n    }\n    if (index === 0) {\n        this._promise0 = promiseSlotValue;\n        this._receiver0 = receiver;\n    } else {\n        var base = index * 5 - 5;\n        this[base + 3] = promiseSlotValue;\n        this[base + 4] = receiver;\n    }\n    this._setLength(index + 1);\n};\n\nPromise.prototype._proxyPromiseArray = function (promiseArray, index) {\n    this._setProxyHandlers(promiseArray, index);\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 8388608;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~8388608);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 8388608) === 8388608;\n};\n\nPromise.prototype._resolveCallback = function(value) {\n    if (this._tryFollow(value)) {\n        return;\n    }\n    this._fulfill(value);\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, shouldNotMarkOriginatingFromRejection) {\n    if (!shouldNotMarkOriginatingFromRejection) {\n        markAsOriginatingFromRejection(reason);\n    }\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = canAttachTrace(reason) &&\n        typeof trace.stack === \"string\";\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason, trace === reason ? undefined : trace);\n};\n\nPromise.prototype._resolveFromResolver = function (resolver) {\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = tryCatch(resolver)(function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined && r === errorObj) {\n        promise._rejectCallback(r.e, true, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    if (promise._isRejected()) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY && !this._isRejected()) {\n        x = tryCatch(handler).apply(this._boundTo, value);\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    promise._popContext();\n\n    if (x === errorObj || x === promise || x === NEXT_FILTER) {\n        var err = x === promise ? makeSelfResolutionError() : x.e;\n        promise._rejectCallback(err, false, true);\n    } else {\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._follow = function (promise) {\n    if (promise._isPending()) {\n        var len = this._length();\n        for (var i = 0; i < len; ++i) {\n            promise._migrateCallbacks(\n                this._fulfillmentHandlerAt(i),\n                this._rejectionHandlerAt(i),\n                this._progressHandlerAt(i),\n                this._promiseAt(i),\n                this._receiverAt(i)\n            );\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n        this._propagateFrom(promise, 1);\n    } else if (promise._isFulfilled()) {\n        this._fulfillUnchecked(promise._value());\n    } else {\n        this._rejectUnchecked(promise._reason(),\n            promise._getCarriedStackTrace());\n    }\n    if (promise._isRejectionUnhandled()) promise._unsetRejectionIsUnhandled();\n};\n\nPromise.prototype._tryFollow = function (value) {\n    if (this._isFollowingOrFulfilledOrRejected() ||\n        value === this) {\n        return false;\n    }\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) {\n        return false;\n    }\n    this._follow(maybePromise._target());\n    return true;\n};\n\nPromise.prototype._captureStackTrace = function () {\n    if (debugging) {\n        this._trace = new CapturedTrace(this._peekContext());\n    }\n    return this;\n};\n\nPromise.prototype._canAttachTrace = function(error) {\n    return debugging && canAttachTrace(error);\n};\n\nPromise.prototype._attachExtraTraceIgnoreSelf = function (error) {\n    if (this._canAttachTrace(error) && this._trace._parent !== undefined) {\n        this._trace._parent.attachExtraTrace(error);\n    }\n};\n\nPromise.prototype._attachExtraTrace = function (error, ignoreSelf) {\n    if (debugging && canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else {\n            CapturedTrace.cleanHeaderStack(error, true);\n        }\n    }\n};\n\nPromise.prototype._cleanValues = function () {\n    if (this._cancellable()) {\n        this._cancellationParent = undefined;\n    }\n};\n\nPromise.prototype._propagateFrom = function (parent, flags) {\n    if ((flags & 1) > 0 && parent._cancellable()) {\n        this._setCancellable();\n        this._cancellationParent = parent;\n    }\n    if ((flags & 4) > 0) {\n        this._setBoundTo(parent._boundTo);\n    }\n};\n\nPromise.prototype._fulfill = function (value) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._fulfillUnchecked(value);\n};\n\nPromise.prototype._reject = function (reason, carriedStackTrace) {\n    if (this._isFollowingOrFulfilledOrRejected()) return;\n    this._rejectUnchecked(reason, carriedStackTrace);\n};\n\nPromise.prototype._settlePromiseAt = function (index) {\n    var promise = this._promiseAt(index);\n    var isPromise = promise instanceof Promise;\n\n    if (isPromise && promise._isMigrated()) {\n        promise._unsetIsMigrated();\n        return async.invoke(this._settlePromiseAt, this, index);\n    }\n    var handler = this._isFulfilled()\n        ? this._fulfillmentHandlerAt(index)\n        : this._rejectionHandlerAt(index);\n\n    var carriedStackTrace =\n        this._isCarryingStackTrace() ? this._getCarriedStackTrace() : undefined;\n    var value = this._settledValue;\n    var receiver = this._receiverAt(index);\n\n\n    this._clearCallbackDataAtIndex(index);\n\n    if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof PromiseArray) {\n        if (!receiver._isResolved()) {\n            if (this._isFulfilled()) {\n                receiver._promiseFulfilled(value, promise);\n            }\n            else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (this._isFulfilled()) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value, carriedStackTrace);\n        }\n    }\n\n    if (index >= 4 && (index & 31) === 4)\n        async.invokeLater(this._setLength, this, 0);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    if (index === 0) {\n        if (!this._isCarryingStackTrace()) {\n            this._fulfillmentHandler0 = undefined;\n        }\n        this._rejectionHandler0 =\n        this._progressHandler0 =\n        this._receiver0 =\n        this._promise0 = undefined;\n    } else {\n        var base = index * 5 - 5;\n        this[base + 3] =\n        this[base + 4] =\n        this[base + 0] =\n        this[base + 1] =\n        this[base + 2] = undefined;\n    }\n};\n\nPromise.prototype._isSettlePromisesQueued = function () {\n    return (this._bitField &\n            -1073741824) === -1073741824;\n};\n\nPromise.prototype._setSettlePromisesQueued = function () {\n    this._bitField = this._bitField | -1073741824;\n};\n\nPromise.prototype._unsetSettlePromisesQueued = function () {\n    this._bitField = this._bitField & (~-1073741824);\n};\n\nPromise.prototype._queueSettlePromises = function() {\n    if (!this._isSettlePromisesQueued()) {\n        async.settlePromises(this);\n        this._setSettlePromisesQueued();\n    }\n};\n\nPromise.prototype._fulfillUnchecked = function (value) {\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._rejectUnchecked(err, undefined);\n    }\n    this._setFulfilled();\n    this._settledValue = value;\n    this._cleanValues();\n\n    if (this._length() > 0) {\n        this._queueSettlePromises();\n    }\n};\n\nPromise.prototype._rejectUncheckedCheckError = function (reason) {\n    var trace = util.ensureErrorObject(reason);\n    this._rejectUnchecked(reason, trace === reason ? undefined : trace);\n};\n\nPromise.prototype._rejectUnchecked = function (reason, trace) {\n    if (reason === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._rejectUnchecked(err);\n    }\n    this._setRejected();\n    this._settledValue = reason;\n    this._cleanValues();\n\n    if (this._isFinal()) {\n        async.throwLater(function(e) {\n            if (\"stack\" in e) {\n                async.invokeFirst(\n                    CapturedTrace.unhandledRejection, undefined, e);\n            }\n            throw e;\n        }, trace === undefined ? reason : trace);\n        return;\n    }\n\n    if (trace !== undefined && trace !== reason) {\n        this._setCarriedStackTrace(trace);\n    }\n\n    if (this._length() > 0) {\n        this._queueSettlePromises();\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    this._unsetSettlePromisesQueued();\n    var len = this._length();\n    for (var i = 0; i < len; i++) {\n        this._settlePromiseAt(i);\n    }\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    CapturedTrace.fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._getCarriedStackTrace() || this._settledValue;\n        this._setUnhandledRejectionIsNotified();\n        CapturedTrace.fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nvar contextStack = [];\nfunction Context() {\n    this._trace = new CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (!debugging) return;\n    if (this._trace !== undefined) {\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (!debugging) return;\n    if (this._trace !== undefined) {\n        contextStack.pop();\n    }\n};\n\n /*jshint unused:false*/\nfunction createContext() {\n    if (debugging) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\n\nPromise.prototype._peekContext = peekContext;\nPromise.prototype._pushContext = Context.prototype._pushContext;\nPromise.prototype._popContext = Context.prototype._popContext;\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === errorObj) {\n        this._setRejected();\n        var reason = value.e;\n        this._settledValue = reason;\n        this._cleanValues();\n        this._attachExtraTrace(reason);\n        this._ensurePossibleRejectionHandled();\n    } else {\n        var maybePromise = tryConvertToPromise(value, this);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            this._follow(maybePromise);\n        } else {\n            this._setFulfilled();\n            this._settledValue = value;\n            this._cleanValues();\n        }\n    }\n};\n\n\n\nif (!CapturedTrace.isSupported()) {\n    Promise.longStackTraces = function(){};\n    debugging = false;\n}\n\nPromise._makeSelfResolutionError = makeSelfResolutionError;\nrequire(\"./finally.js\")(Promise, NEXT_FILTER, tryConvertToPromise);\nrequire(\"./direct_resolve.js\")(Promise);\nrequire(\"./synchronous_inspection.js\")(Promise);\nrequire(\"./join.js\")(Promise, PromiseArray, tryConvertToPromise, INTERNAL);\nPromise.RangeError = RangeError;\nPromise.CancellationError = CancellationError;\nPromise.TimeoutError = TimeoutError;\nPromise.TypeError = TypeError;\nPromise.OperationalError = OperationalError;\nPromise.RejectionError = OperationalError;\nPromise.AggregateError = errors.AggregateError;\n\nutil.toFastProperties(Promise);\nutil.toFastProperties(Promise.prototype);\nPromise.Promise = Promise;\nCapturedTrace.setBounds(async.firstLineError, util.lastLineError);\nrequire('./nodeify.js')(Promise);\nrequire('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext);\nrequire('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise);\nrequire('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL);\nrequire('./cancel.js')(Promise, INTERNAL);\nrequire('./promisify.js')(Promise, INTERNAL);\nrequire('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\nrequire('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\nrequire('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL);\nrequire('./settle.js')(Promise, PromiseArray);\nrequire('./call_get.js')(Promise);\nrequire('./some.js')(Promise, PromiseArray, apiRejection);\nrequire('./progress.js')(Promise, PromiseArray);\nrequire('./any.js')(Promise);\nrequire('./each.js')(Promise, INTERNAL);\nrequire('./timers.js')(Promise, INTERNAL, tryConvertToPromise);\nrequire('./filter.js')(Promise, INTERNAL);\n\nPromise.prototype = Promise.prototype;\nreturn Promise;\n\n};\n\n}).call(this,require('_process'))\n},{\"./any.js\":33,\"./async.js\":34,\"./call_get.js\":36,\"./cancel.js\":37,\"./captured_trace.js\":38,\"./catch_filter.js\":39,\"./direct_resolve.js\":40,\"./each.js\":41,\"./errors.js\":42,\"./filter.js\":44,\"./finally.js\":45,\"./generators.js\":46,\"./join.js\":47,\"./map.js\":48,\"./nodeify.js\":49,\"./progress.js\":50,\"./promise_array.js\":52,\"./promise_resolver.js\":53,\"./promisify.js\":54,\"./props.js\":55,\"./race.js\":57,\"./reduce.js\":58,\"./settle.js\":60,\"./some.js\":61,\"./synchronous_inspection.js\":62,\"./thenables.js\":63,\"./timers.js\":64,\"./using.js\":65,\"./util.js\":66,\"_process\":25}],52:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection) {\nvar util = require(\"./util.js\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -1: return undefined;\n    case -2: return [];\n    case -3: return {};\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    var parent;\n    if (values instanceof Promise) {\n        parent = values;\n        promise._propagateFrom(parent, 1 | 4);\n    }\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values._setBoundTo(this._promise._boundTo);\n        values = values._target();\n        this._values = values;\n        if (values._isFulfilled()) {\n            values = values._value();\n            if (!isArray(values)) {\n                var err = new Promise.TypeError(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");\n                this.__hardReject__(err);\n                return;\n            }\n        } else if (values._isPending()) {\n            values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n            return;\n        } else {\n            this._reject(values._reason());\n            return;\n        }\n    } else if (!isArray(values)) {\n        this._promise._follow(apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\"));\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var promise = this._promise;\n    for (var i = 0; i < len; ++i) {\n        var isResolved = this._isResolved();\n        var maybePromise = tryConvertToPromise(values[i], promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            if (isResolved) {\n                maybePromise._unsetRejectionIsUnhandled();\n            } else if (maybePromise._isPending()) {\n                maybePromise._proxyPromiseArray(this, i);\n            } else if (maybePromise._isFulfilled()) {\n                this._promiseFulfilled(maybePromise._value(), i);\n            } else {\n                this._promiseRejected(maybePromise._reason(), i);\n            }\n        } else if (!isResolved) {\n            this._promiseFulfilled(maybePromise, i);\n        }\n    }\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype.__hardReject__ =\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false, true);\n};\n\nPromiseArray.prototype._promiseProgressed = function (progressValue, index) {\n    this._promise._progress({\n        index: index,\n        value: progressValue\n    });\n};\n\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n    }\n};\n\nPromiseArray.prototype._promiseRejected = function (reason, index) {\n    this._totalResolved++;\n    this._reject(reason);\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util.js\":66}],53:[function(require,module,exports){\n\"use strict\";\nvar util = require(\"./util.js\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = require(\"./errors.js\");\nvar TimeoutError = errors.TimeoutError;\nvar OperationalError = errors.OperationalError;\nvar haveGetters = util.haveGetters;\nvar es5 = require(\"./es5.js\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise) {\n    return function(err, value) {\n        if (promise === null) return;\n\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (arguments.length > 2) {\n            var $_len = arguments.length;var args = new Array($_len - 1); for(var $_i = 1; $_i < $_len; ++$_i) {args[$_i - 1] = arguments[$_i];}\n            promise._fulfill(args);\n        } else {\n            promise._fulfill(value);\n        }\n\n        promise = null;\n    };\n}\n\n\nvar PromiseResolver;\nif (!haveGetters) {\n    PromiseResolver = function (promise) {\n        this.promise = promise;\n        this.asCallback = nodebackForPromise(promise);\n        this.callback = this.asCallback;\n    };\n}\nelse {\n    PromiseResolver = function (promise) {\n        this.promise = promise;\n    };\n}\nif (haveGetters) {\n    var prop = {\n        get: function() {\n            return nodebackForPromise(this.promise);\n        }\n    };\n    es5.defineProperty(PromiseResolver.prototype, \"asCallback\", prop);\n    es5.defineProperty(PromiseResolver.prototype, \"callback\", prop);\n}\n\nPromiseResolver._nodebackForPromise = nodebackForPromise;\n\nPromiseResolver.prototype.toString = function () {\n    return \"[object PromiseResolver]\";\n};\n\nPromiseResolver.prototype.resolve =\nPromiseResolver.prototype.fulfill = function (value) {\n    if (!(this instanceof PromiseResolver)) {\n        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");\n    }\n    this.promise._resolveCallback(value);\n};\n\nPromiseResolver.prototype.reject = function (reason) {\n    if (!(this instanceof PromiseResolver)) {\n        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");\n    }\n    this.promise._rejectCallback(reason);\n};\n\nPromiseResolver.prototype.progress = function (value) {\n    if (!(this instanceof PromiseResolver)) {\n        throw new TypeError(\"Illegal invocation, resolver resolve/reject must be called within a resolver context. Consider using the promise constructor instead.\\u000a\\u000a    See http://goo.gl/sdkXL9\\u000a\");\n    }\n    this.promise._progress(value);\n};\n\nPromiseResolver.prototype.cancel = function () {\n    this.promise.cancel();\n};\n\nPromiseResolver.prototype.timeout = function () {\n    this.reject(new TimeoutError(\"timeout\"));\n};\n\nPromiseResolver.prototype.isResolved = function () {\n    return this.promise.isResolved();\n};\n\nPromiseResolver.prototype.toJSON = function () {\n    return this.promise.toJSON();\n};\n\nmodule.exports = PromiseResolver;\n\n},{\"./errors.js\":42,\"./es5.js\":43,\"./util.js\":66}],54:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = require(\"./util.js\");\nvar nodebackForPromise = require(\"./promise_resolver.js\")\n    ._nodebackForPromise;\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = require(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultFilter = function(name, func) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        !util.isClass(func);\n};\nvar defaultPromisified = {__isPromisified__: true};\n\n\nfunction escapeIdentRegex(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/iWrZbw\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nfunction switchCaseArgumentOrder(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 5);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        if (i === likelyArgumentCount) continue;\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 5; ++i) {\n        ret.push(i);\n    }\n    return ret;\n}\n\nfunction argumentSequence(argumentCount) {\n    return util.filledRange(argumentCount, \"arguments[\", \"]\");\n}\n\nfunction parameterDeclaration(parameterCount) {\n    return util.filledRange(parameterCount, \"_arg\", \"\");\n}\n\nfunction parameterCount(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n}\n\nfunction generatePropertyAccess(key) {\n    if (util.isIdentifier(key)) {\n        return \".\" + key;\n    }\n    else return \"['\" + key.replace(/(['\\\\])/g, \"\\\\$1\") + \"']\";\n}\n\nfunction makeNodePromisifiedEval(callback, receiver, originalName, fn, suffix) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var callbackName =\n        (typeof originalName === \"string\" && util.isIdentifier(originalName)\n            ? originalName + suffix\n            : \"promisified\");\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (typeof callback === \"string\") {\n            ret = \"                                                          \\n\\\n                this.method({{args}}, fn);                                   \\n\\\n                break;                                                       \\n\\\n            \".replace(\".method\", generatePropertyAccess(callback));\n        } else if (receiver === THIS) {\n            ret =  \"                                                         \\n\\\n                callback.call(this, {{args}}, fn);                           \\n\\\n                break;                                                       \\n\\\n            \";\n        } else if (receiver !== undefined) {\n            ret =  \"                                                         \\n\\\n                callback.call(receiver, {{args}}, fn);                       \\n\\\n                break;                                                       \\n\\\n            \";\n        } else {\n            ret =  \"                                                         \\n\\\n                callback({{args}}, fn);                                      \\n\\\n                break;                                                       \\n\\\n            \";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for(var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n        var codeForCall;\n        if (typeof callback === \"string\") {\n            codeForCall = \"                                                  \\n\\\n                this.property.apply(this, args);                             \\n\\\n            \"\n                .replace(\".property\", generatePropertyAccess(callback));\n        } else if (receiver === THIS) {\n            codeForCall = \"                                                  \\n\\\n                callback.apply(this, args);                                  \\n\\\n            \";\n        } else {\n            codeForCall = \"                                                  \\n\\\n                callback.apply(receiver, args);                              \\n\\\n            \";\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = fn;                                                    \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", codeForCall);\n        return ret;\n    }\n\n    return new Function(\"Promise\",\n                        \"callback\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"INTERNAL\",\"                                         \\n\\\n        var ret = function (Parameters) {                        \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            promise._setIsSpreadable();                                      \\n\\\n            var fn = nodebackForPromise(promise);                            \\n\\\n            try {                                                            \\n\\\n                switch(len) {                                                \\n\\\n                    [CodeForSwitchCase]                                      \\n\\\n                }                                                            \\n\\\n            } catch (e) {                                                    \\n\\\n                var wrapped = maybeWrapAsError(e);                           \\n\\\n                promise._attachExtraTrace(wrapped);                          \\n\\\n                promise._reject(wrapped);                                    \\n\\\n            }                                                                \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        ret.__isPromisified__ = true;                                        \\n\\\n        return ret;                                                          \\n\\\n        \"\n        .replace(\"FunctionName\", callbackName)\n        .replace(\"Parameters\", parameterDeclaration(newParameterCount))\n        .replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase()))(\n            Promise,\n            callback,\n            receiver,\n            withAppended,\n            maybeWrapAsError,\n            nodebackForPromise,\n            INTERNAL\n        );\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver) {\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        if (typeof callback === \"string\") {\n            callback = _receiver[callback];\n        }\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        promise._setIsSpreadable();\n        var fn = nodebackForPromise(promise);\n        try {\n            callback.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            var wrapped = maybeWrapAsError(e);\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        }\n        return promise;\n    }\n    promisified.__isPromisified__ = true;\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        obj[promisifiedKey] = promisifier === makeNodePromisified\n                ? makeNodePromisified(key, THIS, key, fn, suffix)\n                : promisifier(fn, function() {\n                    return makeNodePromisified(key, THIS, key, fn, suffix);\n                });\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver) {\n    return makeNodePromisified(callback, receiver, undefined, callback);\n}\n\nPromise.promisify = function (fn, receiver) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    return promisify(fn, arguments.length < 2 ? THIS : receiver);\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/9ITlV0\\u000a\");\n    }\n    options = Object(options);\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/8FZo5V\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target, {includeHidden: true});\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier);\n            promisifyAll(value, suffix, filter, promisifier);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier);\n};\n};\n\n\n},{\"./errors\":42,\"./promise_resolver.js\":53,\"./util.js\":66}],55:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = require(\"./util.js\");\nvar isObject = util.isObject;\nvar es5 = require(\"./es5.js\");\n\nfunction PropertiesPromiseArray(obj) {\n    var keys = es5.keys(obj);\n    var len = keys.length;\n    var values = new Array(len * 2);\n    for (var i = 0; i < len; ++i) {\n        var key = keys[i];\n        values[i] = obj[key];\n        values[i + len] = key;\n    }\n    this.constructor$(values);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {\n    this._init$(undefined, -3) ;\n};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val = {};\n        var keyOffset = this.length();\n        for (var i = 0, len = this.length(); i < len; ++i) {\n            val[this._values[i + keyOffset]] = this._values[i];\n        }\n        this._resolve(val);\n    }\n};\n\nPropertiesPromiseArray.prototype._promiseProgressed = function (value, index) {\n    this._promise._progress({\n        key: this._values[index + this.length()],\n        value: value\n    });\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/OsFKC8\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 4);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5.js\":43,\"./util.js\":66}],56:[function(require,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype._unshiftOne = function(value) {\n    var capacity = this._capacity;\n    this._checkCapacity(this.length() + 1);\n    var front = this._front;\n    var i = (((( front - 1 ) &\n                    ( capacity - 1) ) ^ capacity ) - capacity );\n    this[i] = value;\n    this._front = i;\n    this._length = this.length() + 1;\n};\n\nQueue.prototype.unshift = function(fn, receiver, arg) {\n    this._unshiftOne(arg);\n    this._unshiftOne(receiver);\n    this._unshiftOne(fn);\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    if (front + length > oldCapacity) {\n        var moveItemsCount = (front + length) & (oldCapacity - 1);\n        arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n    }\n};\n\nmodule.exports = Queue;\n\n},{}],57:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar isArray = require(\"./util.js\").isArray;\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else if (!isArray(promises)) {\n        return apiRejection(\"expecting an array, a promise or a thenable\\u000a\\u000a    See http://goo.gl/s8MMhc\\u000a\");\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 4 | 1);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util.js\":66}],58:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL) {\nvar util = require(\"./util.js\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nfunction ReductionPromiseArray(promises, fn, accum, _each) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    this._preservedValues = _each === INTERNAL ? [] : null;\n    this._zerothIsAccum = (accum === undefined);\n    this._gotAccum = false;\n    this._reducingIndex = (this._zerothIsAccum ? 1 : 0);\n    this._valuesPhase = undefined;\n    var maybePromise = tryConvertToPromise(accum, this._promise);\n    var rejected = false;\n    var isPromise = maybePromise instanceof Promise;\n    if (isPromise) {\n        maybePromise = maybePromise._target();\n        if (maybePromise._isPending()) {\n            maybePromise._proxyPromiseArray(this, -1);\n        } else if (maybePromise._isFulfilled()) {\n            accum = maybePromise._value();\n            this._gotAccum = true;\n        } else {\n            this._reject(maybePromise._reason());\n            rejected = true;\n        }\n    }\n    if (!(isPromise || this._zerothIsAccum)) this._gotAccum = true;\n    this._callback = fn;\n    this._accum = accum;\n    if (!rejected) this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._init = function () {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function () {\n    if (this._gotAccum || this._zerothIsAccum) {\n        this._resolve(this._preservedValues !== null\n                        ? [] : this._accum);\n    }\n};\n\nReductionPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    values[index] = value;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var isEach = preservedValues !== null;\n    var gotAccum = this._gotAccum;\n    var valuesPhase = this._valuesPhase;\n    var valuesPhaseIndex;\n    if (!valuesPhase) {\n        valuesPhase = this._valuesPhase = Array(length);\n        for (valuesPhaseIndex=0; valuesPhaseIndex<length; ++valuesPhaseIndex) {\n            valuesPhase[valuesPhaseIndex] = 0;\n        }\n    }\n    valuesPhaseIndex = valuesPhase[index];\n\n    if (index === 0 && this._zerothIsAccum) {\n        if (!gotAccum) {\n            this._accum = value;\n            this._gotAccum = gotAccum = true;\n        }\n        valuesPhase[index] = ((valuesPhaseIndex === 0)\n            ? 1 : 2);\n    } else if (index === -1) {\n        if (!gotAccum) {\n            this._accum = value;\n            this._gotAccum = gotAccum = true;\n        }\n    } else {\n        if (valuesPhaseIndex === 0) {\n            valuesPhase[index] = 1;\n        }\n        else {\n            valuesPhase[index] = 2;\n            if (gotAccum) {\n                this._accum = value;\n            }\n        }\n    }\n    if (!gotAccum) return;\n\n    var callback = this._callback;\n    var receiver = this._promise._boundTo;\n    var ret;\n\n    for (var i = this._reducingIndex; i < length; ++i) {\n        valuesPhaseIndex = valuesPhase[i];\n        if (valuesPhaseIndex === 2) {\n            this._reducingIndex = i + 1;\n            continue;\n        }\n        if (valuesPhaseIndex !== 1) return;\n        value = values[i];\n        if (value instanceof Promise) {\n            value = value._target();\n            if (value._isFulfilled()) {\n                value = value._value();\n            } else if (value._isPending()) {\n                return;\n            } else {\n                return this._reject(value._reason());\n            }\n        }\n\n        this._promise._pushContext();\n        if (isEach) {\n            preservedValues.push(value);\n            ret = tryCatch(callback).call(receiver, value, i, length);\n        }\n        else {\n            ret = tryCatch(callback)\n                .call(receiver, this._accum, value, i, length);\n        }\n        this._promise._popContext();\n\n        if (ret === errorObj) return this._reject(ret.e);\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            if (maybePromise._isPending()) {\n                valuesPhase[i] = 4;\n                return maybePromise._proxyPromiseArray(this, i);\n            } else if (maybePromise._isFulfilled()) {\n                ret = maybePromise._value();\n            } else {\n                return this._reject(maybePromise._reason());\n            }\n        }\n\n        this._reducingIndex = i + 1;\n        this._accum = ret;\n    }\n\n    if (this._reducingIndex < length) return;\n    this._resolve(isEach ? preservedValues : this._accum);\n};\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n};\n\n},{\"./util.js\":66}],59:[function(require,module,exports){\n(function (process){\n\"use strict\";\nvar schedule;\nif (typeof process === \"object\" && typeof process.version === \"string\") {\n    schedule = parseInt(process.version.split(\".\")[1], 10) > 10\n        ? setImmediate : process.nextTick;\n}\nelse if (typeof MutationObserver !== \"undefined\") {\n    schedule = function(fn) {\n        var div = document.createElement(\"div\");\n        var observer = new MutationObserver(fn);\n        observer.observe(div, {attributes: true});\n        return function() { div.classList.toggle(\"foo\"); };\n    };\n    schedule.isStatic = true;\n}\nelse if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n}\nelse {\n    schedule = function() {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/m3OTXk\\u000a\");\n    };\n}\nmodule.exports = schedule;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],60:[function(require,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = require(\"./util.js\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n    this._promise._setIsSpreadable();\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n    }\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 268435456;\n    ret._settledValue = value;\n    this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 134217728;\n    ret._settledValue = reason;\n    this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return new SettledPromiseArray(this).promise();\n};\n};\n\n},{\"./util.js\":66}],61:[function(require,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = require(\"./util.js\");\nvar RangeError = require(\"./errors.js\").RangeError;\nvar AggregateError = require(\"./errors.js\").AggregateError;\nvar isArray = util.isArray;\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    this._promise._setIsSpreadable();\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    if (this._isResolved()) return;\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n    }\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            e.push(this._values[i]);\n        }\n        this._reject(e);\n    }\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/1wAmHx\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    if (promise.isRejected()) {\n        return promise;\n    }\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors.js\":42,\"./util.js\":66}],62:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValue = promise._settledValue;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValue = undefined;\n    }\n}\n\nPromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");\n    }\n    return this._settledValue;\n};\n\nPromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");\n    }\n    return this._settledValue;\n};\n\nPromiseInspection.prototype.isFulfilled =\nPromise.prototype._isFulfilled = function () {\n    return (this._bitField & 268435456) > 0;\n};\n\nPromiseInspection.prototype.isRejected =\nPromise.prototype._isRejected = function () {\n    return (this._bitField & 134217728) > 0;\n};\n\nPromiseInspection.prototype.isPending =\nPromise.prototype._isPending = function () {\n    return (this._bitField & 402653184) === 0;\n};\n\nPromiseInspection.prototype.isResolved =\nPromise.prototype._isResolved = function () {\n    return (this._bitField & 402653184) > 0;\n};\n\nPromise.prototype.isPending = function() {\n    return this._target()._isPending();\n};\n\nPromise.prototype.isRejected = function() {\n    return this._target()._isRejected();\n};\n\nPromise.prototype.isFulfilled = function() {\n    return this._target()._isFulfilled();\n};\n\nPromise.prototype.isResolved = function() {\n    return this._target()._isResolved();\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue;\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue;\n};\n\nPromise.prototype.value = function() {\n    var target = this._target();\n    if (!target.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/hc1DLj\\u000a\");\n    }\n    return target._settledValue;\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    if (!target.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/hPuiwB\\u000a\");\n    }\n    return target._settledValue;\n};\n\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],63:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util.js\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) {\n            return obj;\n        }\n        else if (isAnyBluebirdPromise(obj)) {\n            var ret = new Promise(INTERNAL);\n            obj._then(\n                ret._fulfillUnchecked,\n                ret._rejectUncheckedCheckError,\n                ret._progressUnchecked,\n                ret,\n                null\n            );\n            return ret;\n        }\n        var then = util.tryCatch(getThen)(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction getThen(obj) {\n    return obj.then;\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    return hasProp.call(obj, \"_promise0\");\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x,\n                                        resolveFromThenable,\n                                        rejectFromThenable,\n                                        progressFromThenable);\n    synchronous = false;\n    if (result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n    }\n\n    function resolveFromThenable(value) {\n        if (x === value) {\n            return promise._rejectCallback(\n                Promise._makeSelfResolutionError(), false, true);\n        }\n        promise._resolveCallback(value);\n    }\n\n    function rejectFromThenable(reason) {\n        promise._rejectCallback(reason, synchronous, true);\n    }\n\n    function progressFromThenable(value) {\n        if (typeof promise._progress === \"function\") {\n            promise._progress(value);\n        }\n    }\n    return promise;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util.js\":66}],64:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise) {\nvar util = require(\"./util.js\");\nvar TimeoutError = Promise.TimeoutError;\n\nvar afterTimeout = function (promise, message) {\n    if (!promise.isPending()) return;\n    if (typeof message !== \"string\") {\n        message = \"operation timed out\";\n    }\n    var err = new TimeoutError(message);\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._cancel(err);\n};\n\nvar afterDelay = function (value, promise) {\n    promise._fulfill(value);\n};\n\nvar delay = Promise.delay = function (value, ms) {\n    if (ms === undefined) {\n        ms = value;\n        value = undefined;\n    }\n    ms = +ms;\n    var maybePromise = tryConvertToPromise(value);\n    var promise = new Promise(INTERNAL);\n\n    if (maybePromise instanceof Promise) {\n        promise._propagateFrom(maybePromise, 4 | 1);\n        promise._follow(maybePromise._target());\n        return promise.then(function(value) {\n            return Promise.delay(value, ms);\n        });\n    } else {\n        setTimeout(function delayTimeout() {\n            afterDelay(value, promise);\n        }, ms);\n    }\n    return promise;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(this, ms);\n};\n\nfunction successClear(value) {\n    var handle = this;\n    if (handle instanceof Number) handle = +handle;\n    clearTimeout(handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    var handle = this;\n    if (handle instanceof Number) handle = +handle;\n    clearTimeout(handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    var target = this._target();\n    ms = +ms;\n    var ret = new Promise(INTERNAL).cancellable();\n    ret._propagateFrom(this, 4 | 1);\n    ret._follow(target);\n    var handle = setTimeout(function timeoutTimeout() {\n        afterTimeout(ret, message);\n    }, ms);\n    return ret._then(successClear, failureClear, undefined, handle, undefined);\n};\n\n};\n\n},{\"./util.js\":66}],65:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext) {\n    var TypeError = require(\"./errors.js\").TypeError;\n    var inherits = require(\"./util.js\").inherits;\n    var PromiseInspection = Promise.PromiseInspection;\n\n    function inspectionMapper(inspections) {\n        var len = inspections.length;\n        for (var i = 0; i < len; ++i) {\n            var inspection = inspections[i];\n            if (inspection.isRejected()) {\n                return Promise.reject(inspection.error());\n            }\n            inspections[i] = inspection._settledValue;\n        }\n        return inspections;\n    }\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = Promise.defer();\n        function iterator() {\n            if (i >= len) return ret.resolve();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret.promise;\n    }\n\n    function disposerSuccess(value) {\n        var inspection = new PromiseInspection();\n        inspection._settledValue = value;\n        inspection._bitField = 268435456;\n        return dispose(this, inspection).thenReturn(value);\n    }\n\n    function disposerFail(reason) {\n        var inspection = new PromiseInspection();\n        inspection._settledValue = reason;\n        inspection._bitField = 134217728;\n        return dispose(this, inspection).thenThrow(reason);\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return null;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== null\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise) {\n        this.constructor$(fn, promise);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") return apiRejection(\"fn must be a function\\u000a\\u000a    See http://goo.gl/916lJJ\\u000a\");\n        len--;\n        var resources = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = arguments[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var promise = Promise.settle(resources)\n            .then(inspectionMapper)\n            .then(function(vals) {\n                promise._pushContext();\n                var ret;\n                try {\n                    ret = fn.apply(undefined, vals);\n                } finally {\n                    promise._popContext();\n                }\n                return ret;\n            })\n            ._then(\n                disposerSuccess, disposerFail, undefined, resources, undefined);\n        resources.promise = promise;\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 262144;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 262144) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~262144);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors.js\":42,\"./util.js\":66}],66:[function(require,module,exports){\n\"use strict\";\nvar es5 = require(\"./es5.js\");\nvar canEvaluate = typeof navigator == \"undefined\";\nvar haveGetters = (function(){\n    try {\n        var o = {};\n        es5.defineProperty(o, \"f\", {\n            get: function () {\n                return 3;\n            }\n        });\n        return o.f === 3;\n    }\n    catch (e) {\n        return false;\n    }\n\n})();\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\nfunction asString(val) {\n    return typeof val === \"string\" ? val : (\"\" + val);\n}\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return !isPrimitive(value);\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(asString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\n\nvar wrapsPrimitiveReceiver = (function() {\n    return this !== \"string\";\n}).call(\"string\");\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    if (es5.isES5) {\n        return function(obj, opts) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            var getKeys = Object(opts).includeHidden\n                ? Object.getOwnPropertyNames\n                : Object.keys;\n            while (obj != null) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        return function(obj) {\n            var ret = [];\n            /*jshint forin:false */\n            for (var key in obj) {\n                ret.push(key);\n            }\n            return ret;\n        };\n    }\n\n})();\n\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.keys(fn.prototype);\n            return keys.length > 0 &&\n                   !(keys.length === 1 && keys[0] === \"constructor\");\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027*/\n    function f() {}\n    f.prototype = obj;\n    return f;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return obj instanceof Error && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    haveGetters: haveGetters,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    asString: asString,\n    maybeWrapAsError: maybeWrapAsError,\n    wrapsPrimitiveReceiver: wrapsPrimitiveReceiver,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection\n};\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5.js\":43}],67:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'compact': require('./arrays/compact'),\n  'difference': require('./arrays/difference'),\n  'drop': require('./arrays/rest'),\n  'findIndex': require('./arrays/findIndex'),\n  'findLastIndex': require('./arrays/findLastIndex'),\n  'first': require('./arrays/first'),\n  'flatten': require('./arrays/flatten'),\n  'head': require('./arrays/first'),\n  'indexOf': require('./arrays/indexOf'),\n  'initial': require('./arrays/initial'),\n  'intersection': require('./arrays/intersection'),\n  'last': require('./arrays/last'),\n  'lastIndexOf': require('./arrays/lastIndexOf'),\n  'object': require('./arrays/zipObject'),\n  'pull': require('./arrays/pull'),\n  'range': require('./arrays/range'),\n  'remove': require('./arrays/remove'),\n  'rest': require('./arrays/rest'),\n  'sortedIndex': require('./arrays/sortedIndex'),\n  'tail': require('./arrays/rest'),\n  'take': require('./arrays/first'),\n  'union': require('./arrays/union'),\n  'uniq': require('./arrays/uniq'),\n  'unique': require('./arrays/uniq'),\n  'unzip': require('./arrays/zip'),\n  'without': require('./arrays/without'),\n  'xor': require('./arrays/xor'),\n  'zip': require('./arrays/zip'),\n  'zipObject': require('./arrays/zipObject')\n};\n\n},{\"./arrays/compact\":68,\"./arrays/difference\":69,\"./arrays/findIndex\":70,\"./arrays/findLastIndex\":71,\"./arrays/first\":72,\"./arrays/flatten\":73,\"./arrays/indexOf\":74,\"./arrays/initial\":75,\"./arrays/intersection\":76,\"./arrays/last\":77,\"./arrays/lastIndexOf\":78,\"./arrays/pull\":79,\"./arrays/range\":80,\"./arrays/remove\":81,\"./arrays/rest\":82,\"./arrays/sortedIndex\":83,\"./arrays/union\":84,\"./arrays/uniq\":85,\"./arrays/without\":86,\"./arrays/xor\":87,\"./arrays/zip\":88,\"./arrays/zipObject\":89}],68:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to compact.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n\n},{}],69:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseFlatten = require('../internals/baseFlatten');\n\n/**\n * Creates an array excluding all values of the provided arrays using strict\n * equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to process.\n * @param {...Array} [values] The arrays of values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n * // => [1, 3, 4]\n */\nfunction difference(array) {\n  return baseDifference(array, baseFlatten(arguments, true, true, 1));\n}\n\nmodule.exports = difference;\n\n},{\"../internals/baseDifference\":147,\"../internals/baseFlatten\":148}],70:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element that passes the callback check, instead of the element itself.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': false },\n *   { 'name': 'fred',    'age': 40, 'blocked': true },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n * ];\n *\n * _.findIndex(characters, function(chr) {\n *   return chr.age < 20;\n * });\n * // => 2\n *\n * // using \"_.where\" callback shorthand\n * _.findIndex(characters, { 'age': 36 });\n * // => 0\n *\n * // using \"_.pluck\" callback shorthand\n * _.findIndex(characters, 'blocked');\n * // => 1\n */\nfunction findIndex(array, callback, thisArg) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  callback = createCallback(callback, thisArg, 3);\n  while (++index < length) {\n    if (callback(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = findIndex;\n\n},{\"../functions/createCallback\":129}],71:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': true },\n *   { 'name': 'fred',    'age': 40, 'blocked': false },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n * ];\n *\n * _.findLastIndex(characters, function(chr) {\n *   return chr.age > 30;\n * });\n * // => 1\n *\n * // using \"_.where\" callback shorthand\n * _.findLastIndex(characters, { 'age': 36 });\n * // => 0\n *\n * // using \"_.pluck\" callback shorthand\n * _.findLastIndex(characters, 'blocked');\n * // => 2\n */\nfunction findLastIndex(array, callback, thisArg) {\n  var length = array ? array.length : 0;\n  callback = createCallback(callback, thisArg, 3);\n  while (length--) {\n    if (callback(array[length], length, array)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = findLastIndex;\n\n},{\"../functions/createCallback\":129}],72:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the first element or first `n` elements of an array. If a callback\n * is provided elements at the beginning of the array are returned as long\n * as the callback returns truey. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias head, take\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback] The function called\n *  per element or the number of elements to return. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the first element(s) of `array`.\n * @example\n *\n * _.first([1, 2, 3]);\n * // => 1\n *\n * _.first([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.first([1, 2, 3], function(num) {\n *   return num < 3;\n * });\n * // => [1, 2]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.first(characters, 'blocked');\n * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n *\n * // using \"_.where\" callback shorthand\n * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n * // => ['barney', 'fred']\n */\nfunction first(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = -1;\n    callback = createCallback(callback, thisArg, 3);\n    while (++index < length && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = callback;\n    if (n == null || thisArg) {\n      return array ? array[0] : undefined;\n    }\n  }\n  return slice(array, 0, nativeMin(nativeMax(0, n), length));\n}\n\nmodule.exports = first;\n\n},{\"../functions/createCallback\":129,\"../internals/slice\":182}],73:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    map = require('../collections/map');\n\n/**\n * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n * is truey, the array will only be flattened a single level. If a callback\n * is provided each element of the array is passed through the callback before\n * flattening. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to flatten.\n * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new flattened array.\n * @example\n *\n * _.flatten([1, [2], [3, [[4]]]]);\n * // => [1, 2, 3, 4];\n *\n * _.flatten([1, [2], [3, [[4]]]], true);\n * // => [1, 2, 3, [[4]]];\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.flatten(characters, 'pets');\n * // => ['hoppy', 'baby puss', 'dino']\n */\nfunction flatten(array, isShallow, callback, thisArg) {\n  // juggle arguments\n  if (typeof isShallow != 'boolean' && isShallow != null) {\n    thisArg = callback;\n    callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n    isShallow = false;\n  }\n  if (callback != null) {\n    array = map(array, callback, thisArg);\n  }\n  return baseFlatten(array, isShallow);\n}\n\nmodule.exports = flatten;\n\n},{\"../collections/map\":109,\"../internals/baseFlatten\":148}],74:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    sortedIndex = require('./sortedIndex');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found using\n * strict equality for comparisons, i.e. `===`. If the array is already sorted\n * providing `true` for `fromIndex` will run a faster binary search.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n *  to perform a binary search on a sorted array.\n * @returns {number} Returns the index of the matched value or `-1`.\n * @example\n *\n * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n * // => 1\n *\n * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n * // => 4\n *\n * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n * // => 2\n */\nfunction indexOf(array, value, fromIndex) {\n  if (typeof fromIndex == 'number') {\n    var length = array ? array.length : 0;\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n  } else if (fromIndex) {\n    var index = sortedIndex(array, value);\n    return array[index] === value ? index : -1;\n  }\n  return baseIndexOf(array, value, fromIndex);\n}\n\nmodule.exports = indexOf;\n\n},{\"../internals/baseIndexOf\":149,\"./sortedIndex\":83}],75:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets all but the last element or last `n` elements of an array. If a\n * callback is provided elements at the end of the array are excluded from\n * the result as long as the callback returns truey. The callback is bound\n * to `thisArg` and invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback=1] The function called\n *  per element or the number of elements to exclude. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n *\n * _.initial([1, 2, 3], 2);\n * // => [1]\n *\n * _.initial([1, 2, 3], function(num) {\n *   return num > 1;\n * });\n * // => [1]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.initial(characters, 'blocked');\n * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n *\n * // using \"_.where\" callback shorthand\n * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n * // => ['barney', 'fred']\n */\nfunction initial(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = length;\n    callback = createCallback(callback, thisArg, 3);\n    while (index-- && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = (callback == null || thisArg) ? 1 : callback || n;\n  }\n  return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n}\n\nmodule.exports = initial;\n\n},{\"../functions/createCallback\":129,\"../internals/slice\":182}],76:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    cacheIndexOf = require('../internals/cacheIndexOf'),\n    createCache = require('../internals/createCache'),\n    getArray = require('../internals/getArray'),\n    isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray'),\n    largeArraySize = require('../internals/largeArraySize'),\n    releaseArray = require('../internals/releaseArray'),\n    releaseObject = require('../internals/releaseObject');\n\n/**\n * Creates an array of unique values present in all provided arrays using\n * strict equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of shared values.\n * @example\n *\n * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n * // => [1, 2]\n */\nfunction intersection() {\n  var args = [],\n      argsIndex = -1,\n      argsLength = arguments.length,\n      caches = getArray(),\n      indexOf = baseIndexOf,\n      trustIndexOf = indexOf === baseIndexOf,\n      seen = getArray();\n\n  while (++argsIndex < argsLength) {\n    var value = arguments[argsIndex];\n    if (isArray(value) || isArguments(value)) {\n      args.push(value);\n      caches.push(trustIndexOf && value.length >= largeArraySize &&\n        createCache(argsIndex ? args[argsIndex] : seen));\n    }\n  }\n  var array = args[0],\n      index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  outer:\n  while (++index < length) {\n    var cache = caches[0];\n    value = array[index];\n\n    if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n      argsIndex = argsLength;\n      (cache || seen).push(value);\n      while (--argsIndex) {\n        cache = caches[argsIndex];\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n  }\n  while (argsLength--) {\n    cache = caches[argsLength];\n    if (cache) {\n      releaseObject(cache);\n    }\n  }\n  releaseArray(caches);\n  releaseArray(seen);\n  return result;\n}\n\nmodule.exports = intersection;\n\n},{\"../internals/baseIndexOf\":149,\"../internals/cacheIndexOf\":154,\"../internals/createCache\":159,\"../internals/getArray\":163,\"../internals/largeArraySize\":169,\"../internals/releaseArray\":177,\"../internals/releaseObject\":178,\"../objects/isArguments\":199,\"../objects/isArray\":200}],77:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Gets the last element or last `n` elements of an array. If a callback is\n * provided elements at the end of the array are returned as long as the\n * callback returns truey. The callback is bound to `thisArg` and invoked\n * with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback] The function called\n *  per element or the number of elements to return. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the last element(s) of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n *\n * _.last([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.last([1, 2, 3], function(num) {\n *   return num > 1;\n * });\n * // => [2, 3]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.pluck(_.last(characters, 'blocked'), 'name');\n * // => ['fred', 'pebbles']\n *\n * // using \"_.where\" callback shorthand\n * _.last(characters, { 'employer': 'na' });\n * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n */\nfunction last(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = length;\n    callback = createCallback(callback, thisArg, 3);\n    while (index-- && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = callback;\n    if (n == null || thisArg) {\n      return array ? array[length - 1] : undefined;\n    }\n  }\n  return slice(array, nativeMax(0, length - n));\n}\n\nmodule.exports = last;\n\n},{\"../functions/createCallback\":129,\"../internals/slice\":182}],78:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the index at which the last occurrence of `value` is found using strict\n * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n * as the offset from the end of the collection.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value or `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n * // => 4\n *\n * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var index = array ? array.length : 0;\n  if (typeof fromIndex == 'number') {\n    index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = lastIndexOf;\n\n},{}],79:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar splice = arrayRef.splice;\n\n/**\n * Removes all provided values from the given array using strict equality for\n * comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to modify.\n * @param {...*} [value] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n * _.pull(array, 2, 3);\n * console.log(array);\n * // => [1, 1]\n */\nfunction pull(array) {\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = args.length,\n      length = array ? array.length : 0;\n\n  while (++argsIndex < argsLength) {\n    var index = -1,\n        value = args[argsIndex];\n    while (++index < length) {\n      if (array[index] === value) {\n        splice.call(array, index--, 1);\n        length--;\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = pull;\n\n},{}],80:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Native method shortcuts */\nvar ceil = Math.ceil;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to but not including `end`. If `start` is less than `stop` a\n * zero-length range is created unless a negative `step` is specified.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns a new range array.\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nfunction range(start, end, step) {\n  start = +start || 0;\n  step = typeof step == 'number' ? step : (+step || 1);\n\n  if (end == null) {\n    end = start;\n    start = 0;\n  }\n  // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n  // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n  var index = -1,\n      length = nativeMax(0, ceil((end - start) / (step || 1))),\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = range;\n\n},{}],81:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar splice = arrayRef.splice;\n\n/**\n * Removes all elements from an array that the callback returns truey for\n * and returns an array of removed elements. The callback is bound to `thisArg`\n * and invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to modify.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4, 5, 6];\n * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n *\n * console.log(array);\n * // => [1, 3, 5]\n *\n * console.log(evens);\n * // => [2, 4, 6]\n */\nfunction remove(array, callback, thisArg) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  callback = createCallback(callback, thisArg, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (callback(value, index, array)) {\n      result.push(value);\n      splice.call(array, index--, 1);\n      length--;\n    }\n  }\n  return result;\n}\n\nmodule.exports = remove;\n\n},{\"../functions/createCallback\":129}],82:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * The opposite of `_.initial` this method gets all but the first element or\n * first `n` elements of an array. If a callback function is provided elements\n * at the beginning of the array are excluded from the result as long as the\n * callback returns truey. The callback is bound to `thisArg` and invoked\n * with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias drop, tail\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback=1] The function called\n *  per element or the number of elements to exclude. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a slice of `array`.\n * @example\n *\n * _.rest([1, 2, 3]);\n * // => [2, 3]\n *\n * _.rest([1, 2, 3], 2);\n * // => [3]\n *\n * _.rest([1, 2, 3], function(num) {\n *   return num < 3;\n * });\n * // => [3]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.pluck(_.rest(characters, 'blocked'), 'name');\n * // => ['fred', 'pebbles']\n *\n * // using \"_.where\" callback shorthand\n * _.rest(characters, { 'employer': 'slate' });\n * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n */\nfunction rest(array, callback, thisArg) {\n  if (typeof callback != 'number' && callback != null) {\n    var n = 0,\n        index = -1,\n        length = array ? array.length : 0;\n\n    callback = createCallback(callback, thisArg, 3);\n    while (++index < length && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n  }\n  return slice(array, n);\n}\n\nmodule.exports = rest;\n\n},{\"../functions/createCallback\":129,\"../internals/slice\":182}],83:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    identity = require('../utilities/identity');\n\n/**\n * Uses a binary search to determine the smallest index at which a value\n * should be inserted into a given sorted array in order to maintain the sort\n * order of the array. If a callback is provided it will be executed for\n * `value` and each element of `array` to compute their sort ranking. The\n * callback is bound to `thisArg` and invoked with one argument; (value).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([20, 30, 50], 40);\n * // => 2\n *\n * // using \"_.pluck\" callback shorthand\n * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n * // => 2\n *\n * var dict = {\n *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n * };\n *\n * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n *   return dict.wordToNumber[word];\n * });\n * // => 2\n *\n * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n *   return this.wordToNumber[word];\n * }, dict);\n * // => 2\n */\nfunction sortedIndex(array, value, callback, thisArg) {\n  var low = 0,\n      high = array ? array.length : low;\n\n  // explicitly reference `identity` for better inlining in Firefox\n  callback = callback ? createCallback(callback, thisArg, 1) : identity;\n  value = callback(value);\n\n  while (low < high) {\n    var mid = (low + high) >>> 1;\n    (callback(array[mid]) < value)\n      ? low = mid + 1\n      : high = mid;\n  }\n  return low;\n}\n\nmodule.exports = sortedIndex;\n\n},{\"../functions/createCallback\":129,\"../utilities/identity\":228}],84:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    baseUniq = require('../internals/baseUniq');\n\n/**\n * Creates an array of unique values, in order, of the provided arrays using\n * strict equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of combined values.\n * @example\n *\n * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n * // => [1, 2, 3, 5, 4]\n */\nfunction union() {\n  return baseUniq(baseFlatten(arguments, true, true));\n}\n\nmodule.exports = union;\n\n},{\"../internals/baseFlatten\":148,\"../internals/baseUniq\":153}],85:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseUniq = require('../internals/baseUniq'),\n    createCallback = require('../functions/createCallback');\n\n/**\n * Creates a duplicate-value-free version of an array using strict equality\n * for comparisons, i.e. `===`. If the array is sorted, providing\n * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n * each element of `array` is passed through the callback before uniqueness\n * is computed. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias unique\n * @category Arrays\n * @param {Array} array The array to process.\n * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a duplicate-value-free array.\n * @example\n *\n * _.uniq([1, 2, 1, 3, 1]);\n * // => [1, 2, 3]\n *\n * _.uniq([1, 1, 2, 2, 3], true);\n * // => [1, 2, 3]\n *\n * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n * // => ['A', 'b', 'C']\n *\n * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n * // => [1, 2.5, 3]\n *\n * // using \"_.pluck\" callback shorthand\n * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniq(array, isSorted, callback, thisArg) {\n  // juggle arguments\n  if (typeof isSorted != 'boolean' && isSorted != null) {\n    thisArg = callback;\n    callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n    isSorted = false;\n  }\n  if (callback != null) {\n    callback = createCallback(callback, thisArg, 3);\n  }\n  return baseUniq(array, isSorted, callback);\n}\n\nmodule.exports = uniq;\n\n},{\"../functions/createCallback\":129,\"../internals/baseUniq\":153}],86:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    slice = require('../internals/slice');\n\n/**\n * Creates an array excluding all provided values using strict equality for\n * comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to filter.\n * @param {...*} [value] The values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n * // => [2, 3, 4]\n */\nfunction without(array) {\n  return baseDifference(array, slice(arguments, 1));\n}\n\nmodule.exports = without;\n\n},{\"../internals/baseDifference\":147,\"../internals/slice\":182}],87:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseUniq = require('../internals/baseUniq'),\n    isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray');\n\n/**\n * Creates an array that is the symmetric difference of the provided arrays.\n * See http://en.wikipedia.org/wiki/Symmetric_difference.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of values.\n * @example\n *\n * _.xor([1, 2, 3], [5, 2, 1, 4]);\n * // => [3, 5, 4]\n *\n * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n * // => [1, 4, 5]\n */\nfunction xor() {\n  var index = -1,\n      length = arguments.length;\n\n  while (++index < length) {\n    var array = arguments[index];\n    if (isArray(array) || isArguments(array)) {\n      var result = result\n        ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n        : array;\n    }\n  }\n  return result || [];\n}\n\nmodule.exports = xor;\n\n},{\"../internals/baseDifference\":147,\"../internals/baseUniq\":153,\"../objects/isArguments\":199,\"../objects/isArray\":200}],88:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar max = require('../collections/max'),\n    pluck = require('../collections/pluck');\n\n/**\n * Creates an array of grouped elements, the first of which contains the first\n * elements of the given arrays, the second of which contains the second\n * elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @alias unzip\n * @category Arrays\n * @param {...Array} [array] Arrays to process.\n * @returns {Array} Returns a new array of grouped elements.\n * @example\n *\n * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n */\nfunction zip() {\n  var array = arguments.length > 1 ? arguments : arguments[0],\n      index = -1,\n      length = array ? max(pluck(array, 'length')) : 0,\n      result = Array(length < 0 ? 0 : length);\n\n  while (++index < length) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n\nmodule.exports = zip;\n\n},{\"../collections/max\":110,\"../collections/pluck\":112}],89:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isArray = require('../objects/isArray');\n\n/**\n * Creates an object composed from arrays of `keys` and `values`. Provide\n * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n * or two arrays, one of `keys` and one of corresponding `values`.\n *\n * @static\n * @memberOf _\n * @alias object\n * @category Arrays\n * @param {Array} keys The array of keys.\n * @param {Array} [values=[]] The array of values.\n * @returns {Object} Returns an object composed of the given keys and\n *  corresponding values.\n * @example\n *\n * _.zipObject(['fred', 'barney'], [30, 40]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction zipObject(keys, values) {\n  var index = -1,\n      length = keys ? keys.length : 0,\n      result = {};\n\n  if (!values && length && !isArray(keys[0])) {\n    values = [];\n  }\n  while (++index < length) {\n    var key = keys[index];\n    if (values) {\n      result[key] = values[index];\n    } else if (key) {\n      result[key[0]] = key[1];\n    }\n  }\n  return result;\n}\n\nmodule.exports = zipObject;\n\n},{\"../objects/isArray\":200}],90:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'chain': require('./chaining/chain'),\n  'tap': require('./chaining/tap'),\n  'value': require('./chaining/wrapperValueOf'),\n  'wrapperChain': require('./chaining/wrapperChain'),\n  'wrapperToString': require('./chaining/wrapperToString'),\n  'wrapperValueOf': require('./chaining/wrapperValueOf')\n};\n\n},{\"./chaining/chain\":91,\"./chaining/tap\":92,\"./chaining/wrapperChain\":93,\"./chaining/wrapperToString\":94,\"./chaining/wrapperValueOf\":95}],91:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar lodashWrapper = require('../internals/lodashWrapper');\n\n/**\n * Creates a `lodash` object that wraps the given value with explicit\n * method chaining enabled.\n *\n * @static\n * @memberOf _\n * @category Chaining\n * @param {*} value The value to wrap.\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36 },\n *   { 'name': 'fred',    'age': 40 },\n *   { 'name': 'pebbles', 'age': 1 }\n * ];\n *\n * var youngest = _.chain(characters)\n *     .sortBy('age')\n *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n *     .first()\n *     .value();\n * // => 'pebbles is 1'\n */\nfunction chain(value) {\n  value = new lodashWrapper(value);\n  value.__chain__ = true;\n  return value;\n}\n\nmodule.exports = chain;\n\n},{\"../internals/lodashWrapper\":170}],92:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Invokes `interceptor` with the `value` as the first argument and then\n * returns `value`. The purpose of this method is to \"tap into\" a method\n * chain in order to perform operations on intermediate results within\n * the chain.\n *\n * @static\n * @memberOf _\n * @category Chaining\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3, 4])\n *  .tap(function(array) { array.pop(); })\n *  .reverse()\n *  .value();\n * // => [3, 2, 1]\n */\nfunction tap(value, interceptor) {\n  interceptor(value);\n  return value;\n}\n\nmodule.exports = tap;\n\n},{}],93:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Enables explicit method chaining on the wrapper object.\n *\n * @name chain\n * @memberOf _\n * @category Chaining\n * @returns {*} Returns the wrapper object.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // without explicit chaining\n * _(characters).first();\n * // => { 'name': 'barney', 'age': 36 }\n *\n * // with explicit chaining\n * _(characters).chain()\n *   .first()\n *   .pick('age')\n *   .value();\n * // => { 'age': 36 }\n */\nfunction wrapperChain() {\n  this.__chain__ = true;\n  return this;\n}\n\nmodule.exports = wrapperChain;\n\n},{}],94:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Produces the `toString` result of the wrapped value.\n *\n * @name toString\n * @memberOf _\n * @category Chaining\n * @returns {string} Returns the string result.\n * @example\n *\n * _([1, 2, 3]).toString();\n * // => '1,2,3'\n */\nfunction wrapperToString() {\n  return String(this.__wrapped__);\n}\n\nmodule.exports = wrapperToString;\n\n},{}],95:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    support = require('../support');\n\n/**\n * Extracts the wrapped value.\n *\n * @name valueOf\n * @memberOf _\n * @alias value\n * @category Chaining\n * @returns {*} Returns the wrapped value.\n * @example\n *\n * _([1, 2, 3]).valueOf();\n * // => [1, 2, 3]\n */\nfunction wrapperValueOf() {\n  return this.__wrapped__;\n}\n\nmodule.exports = wrapperValueOf;\n\n},{\"../collections/forEach\":104,\"../support\":224}],96:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'all': require('./collections/every'),\n  'any': require('./collections/some'),\n  'at': require('./collections/at'),\n  'collect': require('./collections/map'),\n  'contains': require('./collections/contains'),\n  'countBy': require('./collections/countBy'),\n  'detect': require('./collections/find'),\n  'each': require('./collections/forEach'),\n  'eachRight': require('./collections/forEachRight'),\n  'every': require('./collections/every'),\n  'filter': require('./collections/filter'),\n  'find': require('./collections/find'),\n  'findLast': require('./collections/findLast'),\n  'findWhere': require('./collections/find'),\n  'foldl': require('./collections/reduce'),\n  'foldr': require('./collections/reduceRight'),\n  'forEach': require('./collections/forEach'),\n  'forEachRight': require('./collections/forEachRight'),\n  'groupBy': require('./collections/groupBy'),\n  'include': require('./collections/contains'),\n  'indexBy': require('./collections/indexBy'),\n  'inject': require('./collections/reduce'),\n  'invoke': require('./collections/invoke'),\n  'map': require('./collections/map'),\n  'max': require('./collections/max'),\n  'min': require('./collections/min'),\n  'pluck': require('./collections/pluck'),\n  'reduce': require('./collections/reduce'),\n  'reduceRight': require('./collections/reduceRight'),\n  'reject': require('./collections/reject'),\n  'sample': require('./collections/sample'),\n  'select': require('./collections/filter'),\n  'shuffle': require('./collections/shuffle'),\n  'size': require('./collections/size'),\n  'some': require('./collections/some'),\n  'sortBy': require('./collections/sortBy'),\n  'toArray': require('./collections/toArray'),\n  'where': require('./collections/where')\n};\n\n},{\"./collections/at\":97,\"./collections/contains\":98,\"./collections/countBy\":99,\"./collections/every\":100,\"./collections/filter\":101,\"./collections/find\":102,\"./collections/findLast\":103,\"./collections/forEach\":104,\"./collections/forEachRight\":105,\"./collections/groupBy\":106,\"./collections/indexBy\":107,\"./collections/invoke\":108,\"./collections/map\":109,\"./collections/max\":110,\"./collections/min\":111,\"./collections/pluck\":112,\"./collections/reduce\":113,\"./collections/reduceRight\":114,\"./collections/reject\":115,\"./collections/sample\":116,\"./collections/shuffle\":117,\"./collections/size\":118,\"./collections/some\":119,\"./collections/sortBy\":120,\"./collections/toArray\":121,\"./collections/where\":122}],97:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    isString = require('../objects/isString');\n\n/**\n * Creates an array of elements from the specified indexes, or keys, of the\n * `collection`. Indexes may be specified as individual arguments or as arrays\n * of indexes.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n *   to retrieve, specified as individual indexes or arrays of indexes.\n * @returns {Array} Returns a new array of elements corresponding to the\n *  provided indexes.\n * @example\n *\n * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n * // => ['a', 'c', 'e']\n *\n * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n * // => ['fred', 'pebbles']\n */\nfunction at(collection) {\n  var args = arguments,\n      index = -1,\n      props = baseFlatten(args, true, false, 1),\n      length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n      result = Array(length);\n\n  while(++index < length) {\n    result[index] = collection[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = at;\n\n},{\"../internals/baseFlatten\":148,\"../objects/isString\":214}],98:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Checks if a given value is present in a collection using strict equality\n * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n * offset from the end of the collection.\n *\n * @static\n * @memberOf _\n * @alias include\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {*} target The value to check for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n * @example\n *\n * _.contains([1, 2, 3], 1);\n * // => true\n *\n * _.contains([1, 2, 3], 1, 2);\n * // => false\n *\n * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n * // => true\n *\n * _.contains('pebbles', 'eb');\n * // => true\n */\nfunction contains(collection, target, fromIndex) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = collection ? collection.length : 0,\n      result = false;\n\n  fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n  if (isArray(collection)) {\n    result = indexOf(collection, target, fromIndex) > -1;\n  } else if (typeof length == 'number') {\n    result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n  } else {\n    forOwn(collection, function(value) {\n      if (++index >= fromIndex) {\n        return !(result = value === target);\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = contains;\n\n},{\"../internals/baseIndexOf\":149,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isString\":214}],99:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` through the callback. The corresponding value\n * of each key is the number of times the key was returned by the callback.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n * // => { '4': 1, '6': 2 }\n *\n * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n * // => { '4': 1, '6': 2 }\n *\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */\nvar countBy = createAggregator(function(result, value, key) {\n  (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n});\n\nmodule.exports = countBy;\n\n},{\"../internals/createAggregator\":158}],100:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Checks if the given callback returns truey value for **all** elements of\n * a collection. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias all\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if all elements passed the callback check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes']);\n * // => false\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.every(characters, 'age');\n * // => true\n *\n * // using \"_.where\" callback shorthand\n * _.every(characters, { 'age': 36 });\n * // => false\n */\nfunction every(collection, callback, thisArg) {\n  var result = true;\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if (!(result = !!callback(collection[index], index, collection))) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      return (result = !!callback(value, index, collection));\n    });\n  }\n  return result;\n}\n\nmodule.exports = every;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194}],101:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, returning an array of all elements\n * the callback returns truey for. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of elements that passed the callback check.\n * @example\n *\n * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n * // => [2, 4, 6]\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.filter(characters, 'blocked');\n * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n *\n * // using \"_.where\" callback shorthand\n * _.filter(characters, { 'age': 36 });\n * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n */\nfunction filter(collection, callback, thisArg) {\n  var result = [];\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      var value = collection[index];\n      if (callback(value, index, collection)) {\n        result.push(value);\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result.push(value);\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = filter;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194}],102:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, returning the first element that\n * the callback returns truey for. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect, findWhere\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the found element, else `undefined`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': false },\n *   { 'name': 'fred',    'age': 40, 'blocked': true },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n * ];\n *\n * _.find(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n *\n * // using \"_.where\" callback shorthand\n * _.find(characters, { 'age': 1 });\n * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n *\n * // using \"_.pluck\" callback shorthand\n * _.find(characters, 'blocked');\n * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n */\nfunction find(collection, callback, thisArg) {\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      var value = collection[index];\n      if (callback(value, index, collection)) {\n        return value;\n      }\n    }\n  } else {\n    var result;\n    forOwn(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result = value;\n        return false;\n      }\n    });\n    return result;\n  }\n}\n\nmodule.exports = find;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194}],103:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forEachRight = require('./forEachRight');\n\n/**\n * This method is like `_.find` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the found element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(num) {\n *   return num % 2 == 1;\n * });\n * // => 3\n */\nfunction findLast(collection, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forEachRight(collection, function(value, index, collection) {\n    if (callback(value, index, collection)) {\n      result = value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findLast;\n\n},{\"../functions/createCallback\":129,\"./forEachRight\":105}],104:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, executing the callback for each\n * element. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection). Callbacks may exit iteration early by\n * explicitly returning `false`.\n *\n * Note: As with other \"Collections\" methods, objects with a `length` property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n * // => logs each number and returns '1,2,3'\n *\n * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n * // => logs each number and returns the object (property order is not guaranteed across environments)\n */\nfunction forEach(collection, callback, thisArg) {\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if (callback(collection[index], index, collection) === false) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, callback);\n  }\n  return collection;\n}\n\nmodule.exports = forEach;\n\n},{\"../internals/baseCreateCallback\":145,\"../objects/forOwn\":194}],105:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString'),\n    keys = require('../objects/keys');\n\n/**\n * This method is like `_.forEach` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @alias eachRight\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n * // => logs each number from right to left and returns '3,2,1'\n */\nfunction forEachRight(collection, callback, thisArg) {\n  var length = collection ? collection.length : 0;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    while (length--) {\n      if (callback(collection[length], length, collection) === false) {\n        break;\n      }\n    }\n  } else {\n    var props = keys(collection);\n    length = props.length;\n    forOwn(collection, function(value, key, collection) {\n      key = props ? props[--length] : --length;\n      return callback(collection[key], key, collection);\n    });\n  }\n  return collection;\n}\n\nmodule.exports = forEachRight;\n\n},{\"../internals/baseCreateCallback\":145,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isString\":214,\"../objects/keys\":216}],106:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of a collection through the callback. The corresponding value\n * of each key is an array of the elements responsible for generating the key.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * // using \"_.pluck\" callback shorthand\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n});\n\nmodule.exports = groupBy;\n\n},{\"../internals/createAggregator\":158}],107:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of the collection through the given callback. The corresponding\n * value of each key is the last element responsible for generating the key.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var keys = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.indexBy(keys, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n *\n * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n */\nvar indexBy = createAggregator(function(result, value, key) {\n  result[key] = value;\n});\n\nmodule.exports = indexBy;\n\n},{\"../internals/createAggregator\":158}],108:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('./forEach'),\n    slice = require('../internals/slice');\n\n/**\n * Invokes the method named by `methodName` on each element in the `collection`\n * returning an array of the results of each invoked method. Additional arguments\n * will be provided to each invoked method. If `methodName` is a function it\n * will be invoked for, and `this` bound to, each element in the `collection`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|string} methodName The name of the method to invoke or\n *  the function invoked per iteration.\n * @param {...*} [arg] Arguments to invoke the method with.\n * @returns {Array} Returns a new array of the results of each invoked method.\n * @example\n *\n * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n * // => [[1, 5, 7], [1, 2, 3]]\n *\n * _.invoke([123, 456], String.prototype.split, '');\n * // => [['1', '2', '3'], ['4', '5', '6']]\n */\nfunction invoke(collection, methodName) {\n  var args = slice(arguments, 2),\n      index = -1,\n      isFunc = typeof methodName == 'function',\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  forEach(collection, function(value) {\n    result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n  });\n  return result;\n}\n\nmodule.exports = invoke;\n\n},{\"../internals/slice\":182,\"./forEach\":104}],109:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Creates an array of values by running each element in the collection\n * through the callback. The callback is bound to `thisArg` and invoked with\n * three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias collect\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of the results of each `callback` execution.\n * @example\n *\n * _.map([1, 2, 3], function(num) { return num * 3; });\n * // => [3, 6, 9]\n *\n * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n * // => [3, 6, 9] (property order is not guaranteed across environments)\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.map(characters, 'name');\n * // => ['barney', 'fred']\n */\nfunction map(collection, callback, thisArg) {\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  callback = createCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = callback(collection[index], index, collection);\n    }\n  } else {\n    result = [];\n    forOwn(collection, function(value, key, collection) {\n      result[++index] = callback(value, key, collection);\n    });\n  }\n  return result;\n}\n\nmodule.exports = map;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194}],110:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar charAtCallback = require('../internals/charAtCallback'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/**\n * Retrieves the maximum value of a collection. If the collection is empty or\n * falsey `-Infinity` is returned. If a callback is provided it will be executed\n * for each value in the collection to generate the criterion by which the value\n * is ranked. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.max(characters, function(chr) { return chr.age; });\n * // => { 'name': 'fred', 'age': 40 };\n *\n * // using \"_.pluck\" callback shorthand\n * _.max(characters, 'age');\n * // => { 'name': 'fred', 'age': 40 };\n */\nfunction max(collection, callback, thisArg) {\n  var computed = -Infinity,\n      result = computed;\n\n  // allows working with functions like `_.map` without using\n  // their `index` argument as a callback\n  if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n    callback = null;\n  }\n  if (callback == null && isArray(collection)) {\n    var index = -1,\n        length = collection.length;\n\n    while (++index < length) {\n      var value = collection[index];\n      if (value > result) {\n        result = value;\n      }\n    }\n  } else {\n    callback = (callback == null && isString(collection))\n      ? charAtCallback\n      : createCallback(callback, thisArg, 3);\n\n    forEach(collection, function(value, index, collection) {\n      var current = callback(value, index, collection);\n      if (current > computed) {\n        computed = current;\n        result = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = max;\n\n},{\"../functions/createCallback\":129,\"../internals/charAtCallback\":156,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isString\":214,\"./forEach\":104}],111:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar charAtCallback = require('../internals/charAtCallback'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/**\n * Retrieves the minimum value of a collection. If the collection is empty or\n * falsey `Infinity` is returned. If a callback is provided it will be executed\n * for each value in the collection to generate the criterion by which the value\n * is ranked. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.min(characters, function(chr) { return chr.age; });\n * // => { 'name': 'barney', 'age': 36 };\n *\n * // using \"_.pluck\" callback shorthand\n * _.min(characters, 'age');\n * // => { 'name': 'barney', 'age': 36 };\n */\nfunction min(collection, callback, thisArg) {\n  var computed = Infinity,\n      result = computed;\n\n  // allows working with functions like `_.map` without using\n  // their `index` argument as a callback\n  if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n    callback = null;\n  }\n  if (callback == null && isArray(collection)) {\n    var index = -1,\n        length = collection.length;\n\n    while (++index < length) {\n      var value = collection[index];\n      if (value < result) {\n        result = value;\n      }\n    }\n  } else {\n    callback = (callback == null && isString(collection))\n      ? charAtCallback\n      : createCallback(callback, thisArg, 3);\n\n    forEach(collection, function(value, index, collection) {\n      var current = callback(value, index, collection);\n      if (current < computed) {\n        computed = current;\n        result = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = min;\n\n},{\"../functions/createCallback\":129,\"../internals/charAtCallback\":156,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isString\":214,\"./forEach\":104}],112:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar map = require('./map');\n\n/**\n * Retrieves the value of a specified property from all elements in the collection.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {string} property The name of the property to pluck.\n * @returns {Array} Returns a new array of property values.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.pluck(characters, 'name');\n * // => ['barney', 'fred']\n */\nvar pluck = map;\n\nmodule.exports = pluck;\n\n},{\"./map\":109}],113:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Reduces a collection to a value which is the accumulated result of running\n * each element in the collection through the callback, where each successive\n * callback execution consumes the return value of the previous execution. If\n * `accumulator` is not provided the first element of the collection will be\n * used as the initial `accumulator` value. The callback is bound to `thisArg`\n * and invoked with four arguments; (accumulator, value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @alias foldl, inject\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] Initial value of the accumulator.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var sum = _.reduce([1, 2, 3], function(sum, num) {\n *   return sum + num;\n * });\n * // => 6\n *\n * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n *   result[key] = num * 3;\n *   return result;\n * }, {});\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n */\nfunction reduce(collection, callback, accumulator, thisArg) {\n  if (!collection) return accumulator;\n  var noaccum = arguments.length < 3;\n  callback = createCallback(callback, thisArg, 4);\n\n  var index = -1,\n      length = collection.length;\n\n  if (typeof length == 'number') {\n    if (noaccum) {\n      accumulator = collection[++index];\n    }\n    while (++index < length) {\n      accumulator = callback(accumulator, collection[index], index, collection);\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      accumulator = noaccum\n        ? (noaccum = false, value)\n        : callback(accumulator, value, index, collection)\n    });\n  }\n  return accumulator;\n}\n\nmodule.exports = reduce;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194}],114:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forEachRight = require('./forEachRight');\n\n/**\n * This method is like `_.reduce` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @alias foldr\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] Initial value of the accumulator.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var list = [[0, 1], [2, 3], [4, 5]];\n * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nfunction reduceRight(collection, callback, accumulator, thisArg) {\n  var noaccum = arguments.length < 3;\n  callback = createCallback(callback, thisArg, 4);\n  forEachRight(collection, function(value, index, collection) {\n    accumulator = noaccum\n      ? (noaccum = false, value)\n      : callback(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = reduceRight;\n\n},{\"../functions/createCallback\":129,\"./forEachRight\":105}],115:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    filter = require('./filter');\n\n/**\n * The opposite of `_.filter` this method returns the elements of a\n * collection that the callback does **not** return truey for.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of elements that failed the callback check.\n * @example\n *\n * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n * // => [1, 3, 5]\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.reject(characters, 'blocked');\n * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n *\n * // using \"_.where\" callback shorthand\n * _.reject(characters, { 'age': 36 });\n * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n */\nfunction reject(collection, callback, thisArg) {\n  callback = createCallback(callback, thisArg, 3);\n  return filter(collection, function(value, index, collection) {\n    return !callback(value, index, collection);\n  });\n}\n\nmodule.exports = reject;\n\n},{\"../functions/createCallback\":129,\"./filter\":101}],116:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom'),\n    isString = require('../objects/isString'),\n    shuffle = require('./shuffle'),\n    values = require('../objects/values');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Retrieves a random element or `n` random elements from a collection.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to sample.\n * @param {number} [n] The number of elements to sample.\n * @param- {Object} [guard] Allows working with functions like `_.map`\n *  without using their `index` arguments as `n`.\n * @returns {Array} Returns the random sample(s) of `collection`.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n *\n * _.sample([1, 2, 3, 4], 2);\n * // => [3, 1]\n */\nfunction sample(collection, n, guard) {\n  if (collection && typeof collection.length != 'number') {\n    collection = values(collection);\n  }\n  if (n == null || guard) {\n    return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n  }\n  var result = shuffle(collection);\n  result.length = nativeMin(nativeMax(0, n), result.length);\n  return result;\n}\n\nmodule.exports = sample;\n\n},{\"../internals/baseRandom\":152,\"../objects/isString\":214,\"../objects/values\":223,\"./shuffle\":117}],117:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom'),\n    forEach = require('./forEach');\n\n/**\n * Creates an array of shuffled values, using a version of the Fisher-Yates\n * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to shuffle.\n * @returns {Array} Returns a new shuffled collection.\n * @example\n *\n * _.shuffle([1, 2, 3, 4, 5, 6]);\n * // => [4, 1, 6, 3, 5, 2]\n */\nfunction shuffle(collection) {\n  var index = -1,\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  forEach(collection, function(value) {\n    var rand = baseRandom(0, ++index);\n    result[index] = result[rand];\n    result[rand] = value;\n  });\n  return result;\n}\n\nmodule.exports = shuffle;\n\n},{\"../internals/baseRandom\":152,\"./forEach\":104}],118:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('../objects/keys');\n\n/**\n * Gets the size of the `collection` by returning `collection.length` for arrays\n * and array-like objects or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns `collection.length` or number of own enumerable properties.\n * @example\n *\n * _.size([1, 2]);\n * // => 2\n *\n * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n * // => 3\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? collection.length : 0;\n  return typeof length == 'number' ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n\n},{\"../objects/keys\":216}],119:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray');\n\n/**\n * Checks if the callback returns a truey value for **any** element of a\n * collection. The function returns as soon as it finds a passing value and\n * does not iterate over the entire collection. The callback is bound to\n * `thisArg` and invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias any\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if any element passed the callback check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.some(characters, 'blocked');\n * // => true\n *\n * // using \"_.where\" callback shorthand\n * _.some(characters, { 'age': 1 });\n * // => false\n */\nfunction some(collection, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if ((result = callback(collection[index], index, collection))) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      return !(result = callback(value, index, collection));\n    });\n  }\n  return !!result;\n}\n\nmodule.exports = some;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194,\"../objects/isArray\":200}],120:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar compareAscending = require('../internals/compareAscending'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    getArray = require('../internals/getArray'),\n    getObject = require('../internals/getObject'),\n    isArray = require('../objects/isArray'),\n    map = require('./map'),\n    releaseArray = require('../internals/releaseArray'),\n    releaseObject = require('../internals/releaseObject');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection through the callback. This method\n * performs a stable sort, that is, it will preserve the original sort order\n * of equal elements. The callback is bound to `thisArg` and invoked with\n * three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an array of property names is provided for `callback` the collection\n * will be sorted by each property value.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Array|Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of sorted elements.\n * @example\n *\n * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n * // => [3, 1, 2]\n *\n * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n * // => [3, 1, 2]\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36 },\n *   { 'name': 'fred',    'age': 40 },\n *   { 'name': 'barney',  'age': 26 },\n *   { 'name': 'fred',    'age': 30 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.map(_.sortBy(characters, 'age'), _.values);\n * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n *\n * // sorting by multiple properties\n * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n */\nfunction sortBy(collection, callback, thisArg) {\n  var index = -1,\n      isArr = isArray(callback),\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  if (!isArr) {\n    callback = createCallback(callback, thisArg, 3);\n  }\n  forEach(collection, function(value, key, collection) {\n    var object = result[++index] = getObject();\n    if (isArr) {\n      object.criteria = map(callback, function(key) { return value[key]; });\n    } else {\n      (object.criteria = getArray())[0] = callback(value, key, collection);\n    }\n    object.index = index;\n    object.value = value;\n  });\n\n  length = result.length;\n  result.sort(compareAscending);\n  while (length--) {\n    var object = result[length];\n    result[length] = object.value;\n    if (!isArr) {\n      releaseArray(object.criteria);\n    }\n    releaseObject(object);\n  }\n  return result;\n}\n\nmodule.exports = sortBy;\n\n},{\"../functions/createCallback\":129,\"../internals/compareAscending\":157,\"../internals/getArray\":163,\"../internals/getObject\":164,\"../internals/releaseArray\":177,\"../internals/releaseObject\":178,\"../objects/isArray\":200,\"./forEach\":104,\"./map\":109}],121:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isString = require('../objects/isString'),\n    slice = require('../internals/slice'),\n    values = require('../objects/values');\n\n/**\n * Converts the `collection` to an array.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to convert.\n * @returns {Array} Returns the new converted array.\n * @example\n *\n * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n * // => [2, 3, 4]\n */\nfunction toArray(collection) {\n  if (collection && typeof collection.length == 'number') {\n    return slice(collection);\n  }\n  return values(collection);\n}\n\nmodule.exports = toArray;\n\n},{\"../internals/slice\":182,\"../objects/isString\":214,\"../objects/values\":223}],122:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar filter = require('./filter');\n\n/**\n * Performs a deep comparison of each element in a `collection` to the given\n * `properties` object, returning an array of all elements that have equivalent\n * property values.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Object} props The object of property values to filter by.\n * @returns {Array} Returns a new array of elements that have the given properties.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * _.where(characters, { 'age': 36 });\n * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n *\n * _.where(characters, { 'pets': ['dino'] });\n * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n */\nvar where = filter;\n\nmodule.exports = where;\n\n},{\"./filter\":101}],123:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'after': require('./functions/after'),\n  'bind': require('./functions/bind'),\n  'bindAll': require('./functions/bindAll'),\n  'bindKey': require('./functions/bindKey'),\n  'compose': require('./functions/compose'),\n  'createCallback': require('./functions/createCallback'),\n  'curry': require('./functions/curry'),\n  'debounce': require('./functions/debounce'),\n  'defer': require('./functions/defer'),\n  'delay': require('./functions/delay'),\n  'memoize': require('./functions/memoize'),\n  'once': require('./functions/once'),\n  'partial': require('./functions/partial'),\n  'partialRight': require('./functions/partialRight'),\n  'throttle': require('./functions/throttle'),\n  'wrap': require('./functions/wrap')\n};\n\n},{\"./functions/after\":124,\"./functions/bind\":125,\"./functions/bindAll\":126,\"./functions/bindKey\":127,\"./functions/compose\":128,\"./functions/createCallback\":129,\"./functions/curry\":130,\"./functions/debounce\":131,\"./functions/defer\":132,\"./functions/delay\":133,\"./functions/memoize\":134,\"./functions/once\":135,\"./functions/partial\":136,\"./functions/partialRight\":137,\"./functions/throttle\":138,\"./functions/wrap\":139}],124:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that executes `func`, with  the `this` binding and\n * arguments of the created function, only after being called `n` times.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {number} n The number of times the function must be called before\n *  `func` is executed.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var saves = ['profile', 'settings'];\n *\n * var done = _.after(saves.length, function() {\n *   console.log('Done saving!');\n * });\n *\n * _.forEach(saves, function(type) {\n *   asyncSave({ 'type': type, 'complete': done });\n * });\n * // => logs 'Done saving!', after all saves have completed\n */\nfunction after(n, func) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  return function() {\n    if (--n < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = after;\n\n},{\"../objects/isFunction\":207}],125:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes `func` with the `this`\n * binding of `thisArg` and prepends any additional `bind` arguments to those\n * provided to the bound function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to bind.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var func = function(greeting) {\n *   return greeting + ' ' + this.name;\n * };\n *\n * func = _.bind(func, { 'name': 'fred' }, 'hi');\n * func();\n * // => 'hi fred'\n */\nfunction bind(func, thisArg) {\n  return arguments.length > 2\n    ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n    : createWrapper(func, 1, null, null, thisArg);\n}\n\nmodule.exports = bind;\n\n},{\"../internals/createWrapper\":160,\"../internals/slice\":182}],126:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    createWrapper = require('../internals/createWrapper'),\n    functions = require('../objects/functions');\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method. Method names may be specified as individual arguments or as arrays\n * of method names. If no method names are provided all the function properties\n * of `object` will be bound.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...string} [methodName] The object method names to\n *  bind, specified as individual method names or arrays of method names.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'onClick': function() { console.log('clicked ' + this.label); }\n * };\n *\n * _.bindAll(view);\n * jQuery('#docs').on('click', view.onClick);\n * // => logs 'clicked docs', when the button is clicked\n */\nfunction bindAll(object) {\n  var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n      index = -1,\n      length = funcs.length;\n\n  while (++index < length) {\n    var key = funcs[index];\n    object[key] = createWrapper(object[key], 1, null, null, object);\n  }\n  return object;\n}\n\nmodule.exports = bindAll;\n\n},{\"../internals/baseFlatten\":148,\"../internals/createWrapper\":160,\"../objects/functions\":196}],127:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes the method at `object[key]`\n * and prepends any additional `bindKey` arguments to those provided to the bound\n * function. This method differs from `_.bind` by allowing bound functions to\n * reference methods that will be redefined or don't yet exist.\n * See http://michaux.ca/articles/lazy-function-definition-pattern.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Object} object The object the method belongs to.\n * @param {string} key The key of the method.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var object = {\n *   'name': 'fred',\n *   'greet': function(greeting) {\n *     return greeting + ' ' + this.name;\n *   }\n * };\n *\n * var func = _.bindKey(object, 'greet', 'hi');\n * func();\n * // => 'hi fred'\n *\n * object.greet = function(greeting) {\n *   return greeting + 'ya ' + this.name + '!';\n * };\n *\n * func();\n * // => 'hiya fred!'\n */\nfunction bindKey(object, key) {\n  return arguments.length > 2\n    ? createWrapper(key, 19, slice(arguments, 2), null, object)\n    : createWrapper(key, 3, null, null, object);\n}\n\nmodule.exports = bindKey;\n\n},{\"../internals/createWrapper\":160,\"../internals/slice\":182}],128:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that is the composition of the provided functions,\n * where each function consumes the return value of the function that follows.\n * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n * Each function is executed with the `this` binding of the composed function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {...Function} [func] Functions to compose.\n * @returns {Function} Returns the new composed function.\n * @example\n *\n * var realNameMap = {\n *   'pebbles': 'penelope'\n * };\n *\n * var format = function(name) {\n *   name = realNameMap[name.toLowerCase()] || name;\n *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n * };\n *\n * var greet = function(formatted) {\n *   return 'Hiya ' + formatted + '!';\n * };\n *\n * var welcome = _.compose(greet, format);\n * welcome('pebbles');\n * // => 'Hiya Penelope!'\n */\nfunction compose() {\n  var funcs = arguments,\n      length = funcs.length;\n\n  while (length--) {\n    if (!isFunction(funcs[length])) {\n      throw new TypeError;\n    }\n  }\n  return function() {\n    var args = arguments,\n        length = funcs.length;\n\n    while (length--) {\n      args = [funcs[length].apply(this, args)];\n    }\n    return args[0];\n  };\n}\n\nmodule.exports = compose;\n\n},{\"../objects/isFunction\":207}],129:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseIsEqual = require('../internals/baseIsEqual'),\n    isObject = require('../objects/isObject'),\n    keys = require('../objects/keys'),\n    property = require('../utilities/property');\n\n/**\n * Produces a callback bound to an optional `thisArg`. If `func` is a property\n * name the created callback will return the property value for a given element.\n * If `func` is an object the created callback will return `true` for elements\n * that contain the equivalent object properties, otherwise it will return `false`.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} [func=identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of the created callback.\n * @param {number} [argCount] The number of arguments the callback accepts.\n * @returns {Function} Returns a callback function.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // wrap to create custom callback shorthands\n * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n *   return !match ? func(callback, thisArg) : function(object) {\n *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n *   };\n * });\n *\n * _.filter(characters, 'age__gt38');\n * // => [{ 'name': 'fred', 'age': 40 }]\n */\nfunction createCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (func == null || type == 'function') {\n    return baseCreateCallback(func, thisArg, argCount);\n  }\n  // handle \"_.pluck\" style callback shorthands\n  if (type != 'object') {\n    return property(func);\n  }\n  var props = keys(func),\n      key = props[0],\n      a = func[key];\n\n  // handle \"_.where\" style callback shorthands\n  if (props.length == 1 && a === a && !isObject(a)) {\n    // fast path the common case of providing an object with a single\n    // property containing a primitive value\n    return function(object) {\n      var b = object[key];\n      return a === b && (a !== 0 || (1 / a == 1 / b));\n    };\n  }\n  return function(object) {\n    var length = props.length,\n        result = false;\n\n    while (length--) {\n      if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n        break;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = createCallback;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/baseIsEqual\":150,\"../objects/isObject\":211,\"../objects/keys\":216,\"../utilities/property\":234}],130:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper');\n\n/**\n * Creates a function which accepts one or more arguments of `func` that when\n * invoked either executes `func` returning its result, if all `func` arguments\n * have been provided, or returns a function that accepts one or more of the\n * remaining `func` arguments, and so on. The arity of `func` can be specified\n * if `func.length` is not sufficient.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var curried = _.curry(function(a, b, c) {\n *   console.log(a + b + c);\n * });\n *\n * curried(1)(2)(3);\n * // => 6\n *\n * curried(1, 2)(3);\n * // => 6\n *\n * curried(1, 2, 3);\n * // => 6\n */\nfunction curry(func, arity) {\n  arity = typeof arity == 'number' ? arity : (+arity || func.length);\n  return createWrapper(func, 4, null, null, null, arity);\n}\n\nmodule.exports = curry;\n\n},{\"../internals/createWrapper\":160}],131:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject'),\n    now = require('../utilities/now');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that will delay the execution of `func` until after\n * `wait` milliseconds have elapsed since the last time it was invoked.\n * Provide an options object to indicate that `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n * to the debounced function will return the result of the last `func` call.\n *\n * Note: If `leading` and `trailing` options are `true` `func` will be called\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to debounce.\n * @param {number} wait The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * var lazyLayout = _.debounce(calculateLayout, 150);\n * jQuery(window).on('resize', lazyLayout);\n *\n * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * });\n *\n * // ensure `batchLog` is executed once after 1 second of debounced calls\n * var source = new EventSource('/stream');\n * source.addEventListener('message', _.debounce(batchLog, 250, {\n *   'maxWait': 1000\n * }, false);\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      maxWait = false,\n      trailing = true;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  wait = nativeMax(0, wait) || 0;\n  if (options === true) {\n    var leading = true;\n    trailing = false;\n  } else if (isObject(options)) {\n    leading = options.leading;\n    maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  var delayed = function() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0) {\n      if (maxTimeoutId) {\n        clearTimeout(maxTimeoutId);\n      }\n      var isCalled = trailingCall;\n      maxTimeoutId = timeoutId = trailingCall = undefined;\n      if (isCalled) {\n        lastCalled = now();\n        result = func.apply(thisArg, args);\n        if (!timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n      }\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  };\n\n  var maxDelayed = function() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (trailing || (maxWait !== wait)) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = null;\n      }\n    }\n  };\n\n  return function() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = null;\n    }\n    return result;\n  };\n}\n\nmodule.exports = debounce;\n\n},{\"../objects/isFunction\":207,\"../objects/isObject\":211,\"../utilities/now\":232}],132:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    slice = require('../internals/slice');\n\n/**\n * Defers executing the `func` function until the current call stack has cleared.\n * Additional arguments will be provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to defer.\n * @param {...*} [arg] Arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) { console.log(text); }, 'deferred');\n * // logs 'deferred' after one or more milliseconds\n */\nfunction defer(func) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var args = slice(arguments, 1);\n  return setTimeout(function() { func.apply(undefined, args); }, 1);\n}\n\nmodule.exports = defer;\n\n},{\"../internals/slice\":182,\"../objects/isFunction\":207}],133:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    slice = require('../internals/slice');\n\n/**\n * Executes the `func` function after `wait` milliseconds. Additional arguments\n * will be provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay execution.\n * @param {...*} [arg] Arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) { console.log(text); }, 1000, 'later');\n * // => logs 'later' after one second\n */\nfunction delay(func, wait) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var args = slice(arguments, 2);\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = delay;\n\n},{\"../internals/slice\":182,\"../objects/isFunction\":207}],134:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    keyPrefix = require('../internals/keyPrefix');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided it will be used to determine the cache key for storing the result\n * based on the arguments provided to the memoized function. By default, the\n * first argument provided to the memoized function is used as the cache key.\n * The `func` is executed with the `this` binding of the memoized function.\n * The result cache is exposed as the `cache` property on the memoized function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] A function used to resolve the cache key.\n * @returns {Function} Returns the new memoizing function.\n * @example\n *\n * var fibonacci = _.memoize(function(n) {\n *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n * });\n *\n * fibonacci(9)\n * // => 34\n *\n * var data = {\n *   'fred': { 'name': 'fred', 'age': 40 },\n *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n * };\n *\n * // modifying the result cache\n * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n * get('pebbles');\n * // => { 'name': 'pebbles', 'age': 1 }\n *\n * get.cache.pebbles.name = 'penelope';\n * get('pebbles');\n * // => { 'name': 'penelope', 'age': 1 }\n */\nfunction memoize(func, resolver) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var memoized = function() {\n    var cache = memoized.cache,\n        key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n    return hasOwnProperty.call(cache, key)\n      ? cache[key]\n      : (cache[key] = func.apply(this, arguments));\n  }\n  memoized.cache = {};\n  return memoized;\n}\n\nmodule.exports = memoize;\n\n},{\"../internals/keyPrefix\":168,\"../objects/isFunction\":207}],135:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that is restricted to execute `func` once. Repeat calls to\n * the function will return the value of the first call. The `func` is executed\n * with the `this` binding of the created function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // `initialize` executes `createApplication` once\n */\nfunction once(func) {\n  var ran,\n      result;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  return function() {\n    if (ran) {\n      return result;\n    }\n    ran = true;\n    result = func.apply(this, arguments);\n\n    // clear the `func` variable so the function may be garbage collected\n    func = null;\n    return result;\n  };\n}\n\nmodule.exports = once;\n\n},{\"../objects/isFunction\":207}],136:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes `func` with any additional\n * `partial` arguments prepended to those provided to the new function. This\n * method is similar to `_.bind` except it does **not** alter the `this` binding.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * var greet = function(greeting, name) { return greeting + ' ' + name; };\n * var hi = _.partial(greet, 'hi');\n * hi('fred');\n * // => 'hi fred'\n */\nfunction partial(func) {\n  return createWrapper(func, 16, slice(arguments, 1));\n}\n\nmodule.exports = partial;\n\n},{\"../internals/createWrapper\":160,\"../internals/slice\":182}],137:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * This method is like `_.partial` except that `partial` arguments are\n * appended to those provided to the new function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n *\n * var options = {\n *   'variable': 'data',\n *   'imports': { 'jq': $ }\n * };\n *\n * defaultsDeep(options, _.templateSettings);\n *\n * options.variable\n * // => 'data'\n *\n * options.imports\n * // => { '_': _, 'jq': $ }\n */\nfunction partialRight(func) {\n  return createWrapper(func, 32, null, slice(arguments, 1));\n}\n\nmodule.exports = partialRight;\n\n},{\"../internals/createWrapper\":160,\"../internals/slice\":182}],138:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar debounce = require('./debounce'),\n    isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject');\n\n/** Used as an internal `_.debounce` options object */\nvar debounceOptions = {\n  'leading': false,\n  'maxWait': 0,\n  'trailing': false\n};\n\n/**\n * Creates a function that, when executed, will only call the `func` function\n * at most once per every `wait` milliseconds. Provide an options object to\n * indicate that `func` should be invoked on the leading and/or trailing edge\n * of the `wait` timeout. Subsequent calls to the throttled function will\n * return the result of the last `func` call.\n *\n * Note: If `leading` and `trailing` options are `true` `func` will be called\n * on the trailing edge of the timeout only if the the throttled function is\n * invoked more than once during the `wait` timeout.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to throttle.\n * @param {number} wait The number of milliseconds to throttle executions to.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // avoid excessively updating the position while scrolling\n * var throttled = _.throttle(updatePosition, 100);\n * jQuery(window).on('scroll', throttled);\n *\n * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n *   'trailing': false\n * }));\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  if (options === false) {\n    leading = false;\n  } else if (isObject(options)) {\n    leading = 'leading' in options ? options.leading : leading;\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  debounceOptions.leading = leading;\n  debounceOptions.maxWait = wait;\n  debounceOptions.trailing = trailing;\n\n  return debounce(func, wait, debounceOptions);\n}\n\nmodule.exports = throttle;\n\n},{\"../objects/isFunction\":207,\"../objects/isObject\":211,\"./debounce\":131}],139:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper');\n\n/**\n * Creates a function that provides `value` to the wrapper function as its\n * first argument. Additional arguments provided to the function are appended\n * to those provided to the wrapper function. The wrapper is executed with\n * the `this` binding of the created function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {*} value The value to wrap.\n * @param {Function} wrapper The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('Fred, Wilma, & Pebbles');\n * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  return createWrapper(wrapper, 16, [value]);\n}\n\nmodule.exports = wrap;\n\n},{\"../internals/createWrapper\":160}],140:[function(require,module,exports){\n/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrays = require('./arrays'),\n    chaining = require('./chaining'),\n    collections = require('./collections'),\n    functions = require('./functions'),\n    objects = require('./objects'),\n    utilities = require('./utilities'),\n    forEach = require('./collections/forEach'),\n    forOwn = require('./objects/forOwn'),\n    isArray = require('./objects/isArray'),\n    lodashWrapper = require('./internals/lodashWrapper'),\n    mixin = require('./utilities/mixin'),\n    support = require('./support'),\n    templateSettings = require('./utilities/templateSettings');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps the given value to enable intuitive\n * method chaining.\n *\n * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n * and `unshift`\n *\n * Chaining is supported in custom builds as long as the `value` method is\n * implicitly or explicitly included in the build.\n *\n * The chainable wrapper functions are:\n * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n * and `zip`\n *\n * The non-chainable wrapper functions are:\n * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n * `template`, `unescape`, `uniqueId`, and `value`\n *\n * The wrapper functions `first` and `last` return wrapped values when `n` is\n * provided, otherwise they return unwrapped values.\n *\n * Explicit chaining can be enabled by using the `_.chain` method.\n *\n * @name _\n * @constructor\n * @category Chaining\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns a `lodash` instance.\n * @example\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // returns an unwrapped value\n * wrapped.reduce(function(sum, num) {\n *   return sum + num;\n * });\n * // => 6\n *\n * // returns a wrapped value\n * var squares = wrapped.map(function(num) {\n *   return num * num;\n * });\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n  return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n   ? value\n   : new lodashWrapper(value);\n}\n// ensure `new lodashWrapper` is an instance of `lodash`\nlodashWrapper.prototype = lodash.prototype;\n\n// wrap `_.mixin` so it works when provided only one argument\nmixin = (function(fn) {\n  var functions = objects.functions;\n  return function(object, source, options) {\n    if (!source || (!options && !functions(source).length)) {\n      if (options == null) {\n        options = source;\n      }\n      source = object;\n      object = lodash;\n    }\n    return fn(object, source, options);\n  };\n}(mixin));\n\n// add functions that return wrapped values when chaining\nlodash.after = functions.after;\nlodash.assign = objects.assign;\nlodash.at = collections.at;\nlodash.bind = functions.bind;\nlodash.bindAll = functions.bindAll;\nlodash.bindKey = functions.bindKey;\nlodash.chain = chaining.chain;\nlodash.compact = arrays.compact;\nlodash.compose = functions.compose;\nlodash.constant = utilities.constant;\nlodash.countBy = collections.countBy;\nlodash.create = objects.create;\nlodash.createCallback = functions.createCallback;\nlodash.curry = functions.curry;\nlodash.debounce = functions.debounce;\nlodash.defaults = objects.defaults;\nlodash.defer = functions.defer;\nlodash.delay = functions.delay;\nlodash.difference = arrays.difference;\nlodash.filter = collections.filter;\nlodash.flatten = arrays.flatten;\nlodash.forEach = forEach;\nlodash.forEachRight = collections.forEachRight;\nlodash.forIn = objects.forIn;\nlodash.forInRight = objects.forInRight;\nlodash.forOwn = forOwn;\nlodash.forOwnRight = objects.forOwnRight;\nlodash.functions = objects.functions;\nlodash.groupBy = collections.groupBy;\nlodash.indexBy = collections.indexBy;\nlodash.initial = arrays.initial;\nlodash.intersection = arrays.intersection;\nlodash.invert = objects.invert;\nlodash.invoke = collections.invoke;\nlodash.keys = objects.keys;\nlodash.map = collections.map;\nlodash.mapValues = objects.mapValues;\nlodash.max = collections.max;\nlodash.memoize = functions.memoize;\nlodash.merge = objects.merge;\nlodash.min = collections.min;\nlodash.omit = objects.omit;\nlodash.once = functions.once;\nlodash.pairs = objects.pairs;\nlodash.partial = functions.partial;\nlodash.partialRight = functions.partialRight;\nlodash.pick = objects.pick;\nlodash.pluck = collections.pluck;\nlodash.property = utilities.property;\nlodash.pull = arrays.pull;\nlodash.range = arrays.range;\nlodash.reject = collections.reject;\nlodash.remove = arrays.remove;\nlodash.rest = arrays.rest;\nlodash.shuffle = collections.shuffle;\nlodash.sortBy = collections.sortBy;\nlodash.tap = chaining.tap;\nlodash.throttle = functions.throttle;\nlodash.times = utilities.times;\nlodash.toArray = collections.toArray;\nlodash.transform = objects.transform;\nlodash.union = arrays.union;\nlodash.uniq = arrays.uniq;\nlodash.values = objects.values;\nlodash.where = collections.where;\nlodash.without = arrays.without;\nlodash.wrap = functions.wrap;\nlodash.xor = arrays.xor;\nlodash.zip = arrays.zip;\nlodash.zipObject = arrays.zipObject;\n\n// add aliases\nlodash.collect = collections.map;\nlodash.drop = arrays.rest;\nlodash.each = forEach;\nlodash.eachRight = collections.forEachRight;\nlodash.extend = objects.assign;\nlodash.methods = objects.functions;\nlodash.object = arrays.zipObject;\nlodash.select = collections.filter;\nlodash.tail = arrays.rest;\nlodash.unique = arrays.uniq;\nlodash.unzip = arrays.zip;\n\n// add functions to `lodash.prototype`\nmixin(lodash);\n\n// add functions that return unwrapped values when chaining\nlodash.clone = objects.clone;\nlodash.cloneDeep = objects.cloneDeep;\nlodash.contains = collections.contains;\nlodash.escape = utilities.escape;\nlodash.every = collections.every;\nlodash.find = collections.find;\nlodash.findIndex = arrays.findIndex;\nlodash.findKey = objects.findKey;\nlodash.findLast = collections.findLast;\nlodash.findLastIndex = arrays.findLastIndex;\nlodash.findLastKey = objects.findLastKey;\nlodash.has = objects.has;\nlodash.identity = utilities.identity;\nlodash.indexOf = arrays.indexOf;\nlodash.isArguments = objects.isArguments;\nlodash.isArray = isArray;\nlodash.isBoolean = objects.isBoolean;\nlodash.isDate = objects.isDate;\nlodash.isElement = objects.isElement;\nlodash.isEmpty = objects.isEmpty;\nlodash.isEqual = objects.isEqual;\nlodash.isFinite = objects.isFinite;\nlodash.isFunction = objects.isFunction;\nlodash.isNaN = objects.isNaN;\nlodash.isNull = objects.isNull;\nlodash.isNumber = objects.isNumber;\nlodash.isObject = objects.isObject;\nlodash.isPlainObject = objects.isPlainObject;\nlodash.isRegExp = objects.isRegExp;\nlodash.isString = objects.isString;\nlodash.isUndefined = objects.isUndefined;\nlodash.lastIndexOf = arrays.lastIndexOf;\nlodash.mixin = mixin;\nlodash.noConflict = utilities.noConflict;\nlodash.noop = utilities.noop;\nlodash.now = utilities.now;\nlodash.parseInt = utilities.parseInt;\nlodash.random = utilities.random;\nlodash.reduce = collections.reduce;\nlodash.reduceRight = collections.reduceRight;\nlodash.result = utilities.result;\nlodash.size = collections.size;\nlodash.some = collections.some;\nlodash.sortedIndex = arrays.sortedIndex;\nlodash.template = utilities.template;\nlodash.unescape = utilities.unescape;\nlodash.uniqueId = utilities.uniqueId;\n\n// add aliases\nlodash.all = collections.every;\nlodash.any = collections.some;\nlodash.detect = collections.find;\nlodash.findWhere = collections.find;\nlodash.foldl = collections.reduce;\nlodash.foldr = collections.reduceRight;\nlodash.include = collections.contains;\nlodash.inject = collections.reduce;\n\nmixin(function() {\n  var source = {}\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      source[methodName] = func;\n    }\n  });\n  return source;\n}(), false);\n\n// add functions capable of returning wrapped and unwrapped values when chaining\nlodash.first = arrays.first;\nlodash.last = arrays.last;\nlodash.sample = collections.sample;\n\n// add aliases\nlodash.take = arrays.first;\nlodash.head = arrays.first;\n\nforOwn(lodash, function(func, methodName) {\n  var callbackable = methodName !== 'sample';\n  if (!lodash.prototype[methodName]) {\n    lodash.prototype[methodName]= function(n, guard) {\n      var chainAll = this.__chain__,\n          result = func(this.__wrapped__, n, guard);\n\n      return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n        ? result\n        : new lodashWrapper(result, chainAll);\n    };\n  }\n});\n\n/**\n * The semantic version number.\n *\n * @static\n * @memberOf _\n * @type string\n */\nlodash.VERSION = '2.4.1';\n\n// add \"Chaining\" functions to the wrapper\nlodash.prototype.chain = chaining.wrapperChain;\nlodash.prototype.toString = chaining.wrapperToString;\nlodash.prototype.value = chaining.wrapperValueOf;\nlodash.prototype.valueOf = chaining.wrapperValueOf;\n\n// add `Array` functions that return unwrapped values\nforEach(['join', 'pop', 'shift'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    var chainAll = this.__chain__,\n        result = func.apply(this.__wrapped__, arguments);\n\n    return chainAll\n      ? new lodashWrapper(result, chainAll)\n      : result;\n  };\n});\n\n// add `Array` functions that return the existing wrapped value\nforEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    func.apply(this.__wrapped__, arguments);\n    return this;\n  };\n});\n\n// add `Array` functions that return new wrapped values\nforEach(['concat', 'slice', 'splice'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n  };\n});\n\nlodash.support = support;\n(lodash.templateSettings = utilities.templateSettings).imports._ = lodash;\nmodule.exports = lodash;\n\n},{\"./arrays\":67,\"./chaining\":90,\"./collections\":96,\"./collections/forEach\":104,\"./functions\":123,\"./internals/lodashWrapper\":170,\"./objects\":184,\"./objects/forOwn\":194,\"./objects/isArray\":200,\"./support\":224,\"./utilities\":225,\"./utilities/mixin\":229,\"./utilities/templateSettings\":238}],141:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to pool arrays and objects used internally */\nvar arrayPool = [];\n\nmodule.exports = arrayPool;\n\n},{}],142:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('./baseCreate'),\n    isObject = require('../objects/isObject'),\n    setBindData = require('./setBindData'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * The base implementation of `_.bind` that creates the bound function and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new bound function.\n */\nfunction baseBind(bindData) {\n  var func = bindData[0],\n      partialArgs = bindData[2],\n      thisArg = bindData[4];\n\n  function bound() {\n    // `Function#bind` spec\n    // http://es5.github.io/#x15.3.4.5\n    if (partialArgs) {\n      // avoid `arguments` object deoptimizations by using `slice` instead\n      // of `Array.prototype.slice.call` and not assigning `arguments` to a\n      // variable as a ternary expression\n      var args = slice(partialArgs);\n      push.apply(args, arguments);\n    }\n    // mimic the constructor's `return` behavior\n    // http://es5.github.io/#x13.2.2\n    if (this instanceof bound) {\n      // ensure `new bound` is an instance of `func`\n      var thisBinding = baseCreate(func.prototype),\n          result = func.apply(thisBinding, args || arguments);\n      return isObject(result) ? result : thisBinding;\n    }\n    return func.apply(thisArg, args || arguments);\n  }\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseBind;\n\n},{\"../objects/isObject\":211,\"./baseCreate\":144,\"./setBindData\":179,\"./slice\":182}],143:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar assign = require('../objects/assign'),\n    forEach = require('../collections/forEach'),\n    forOwn = require('../objects/forOwn'),\n    getArray = require('./getArray'),\n    isArray = require('../objects/isArray'),\n    isObject = require('../objects/isObject'),\n    releaseArray = require('./releaseArray'),\n    slice = require('./slice');\n\n/** Used to match regexp flags from their coerced string values */\nvar reFlags = /\\w*$/;\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    funcClass = '[object Function]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n/** Used to identify object classifications that `_.clone` supports */\nvar cloneableClasses = {};\ncloneableClasses[funcClass] = false;\ncloneableClasses[argsClass] = cloneableClasses[arrayClass] =\ncloneableClasses[boolClass] = cloneableClasses[dateClass] =\ncloneableClasses[numberClass] = cloneableClasses[objectClass] =\ncloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to lookup a built-in constructor by [[Class]] */\nvar ctorByClass = {};\nctorByClass[arrayClass] = Array;\nctorByClass[boolClass] = Boolean;\nctorByClass[dateClass] = Date;\nctorByClass[funcClass] = Function;\nctorByClass[objectClass] = Object;\nctorByClass[numberClass] = Number;\nctorByClass[regexpClass] = RegExp;\nctorByClass[stringClass] = String;\n\n/**\n * The base implementation of `_.clone` without argument juggling or support\n * for `thisArg` binding.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep=false] Specify a deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, callback, stackA, stackB) {\n  if (callback) {\n    var result = callback(value);\n    if (typeof result != 'undefined') {\n      return result;\n    }\n  }\n  // inspect [[Class]]\n  var isObj = isObject(value);\n  if (isObj) {\n    var className = toString.call(value);\n    if (!cloneableClasses[className]) {\n      return value;\n    }\n    var ctor = ctorByClass[className];\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return new ctor(+value);\n\n      case numberClass:\n      case stringClass:\n        return new ctor(value);\n\n      case regexpClass:\n        result = ctor(value.source, reFlags.exec(value));\n        result.lastIndex = value.lastIndex;\n        return result;\n    }\n  } else {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isDeep) {\n    // check for circular references and return corresponding clone\n    var initedStack = !stackA;\n    stackA || (stackA = getArray());\n    stackB || (stackB = getArray());\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    result = isArr ? ctor(value.length) : {};\n  }\n  else {\n    result = isArr ? slice(value) : assign({}, value);\n  }\n  // add array properties assigned by `RegExp#exec`\n  if (isArr) {\n    if (hasOwnProperty.call(value, 'index')) {\n      result.index = value.index;\n    }\n    if (hasOwnProperty.call(value, 'input')) {\n      result.input = value.input;\n    }\n  }\n  // exit for shallow clone\n  if (!isDeep) {\n    return result;\n  }\n  // add the source value to the stack of traversed objects\n  // and associate it with its clone\n  stackA.push(value);\n  stackB.push(result);\n\n  // recursively populate clone (susceptible to call stack limits)\n  (isArr ? forEach : forOwn)(value, function(objValue, key) {\n    result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n  });\n\n  if (initedStack) {\n    releaseArray(stackA);\n    releaseArray(stackB);\n  }\n  return result;\n}\n\nmodule.exports = baseClone;\n\n},{\"../collections/forEach\":104,\"../objects/assign\":185,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isObject\":211,\"./getArray\":163,\"./releaseArray\":177,\"./slice\":182}],144:[function(require,module,exports){\n(function (global){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./isNative'),\n    isObject = require('../objects/isObject'),\n    noop = require('../utilities/noop');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(prototype, properties) {\n  return isObject(prototype) ? nativeCreate(prototype) : {};\n}\n// fallback for browsers without `Object.create`\nif (!nativeCreate) {\n  baseCreate = (function() {\n    function Object() {}\n    return function(prototype) {\n      if (isObject(prototype)) {\n        Object.prototype = prototype;\n        var result = new Object;\n        Object.prototype = null;\n      }\n      return result || global.Object();\n    };\n  }());\n}\n\nmodule.exports = baseCreate;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../objects/isObject\":211,\"../utilities/noop\":231,\"./isNative\":167}],145:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar bind = require('../functions/bind'),\n    identity = require('../utilities/identity'),\n    setBindData = require('./setBindData'),\n    support = require('../support');\n\n/** Used to detected named functions */\nvar reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n/** Used to detect functions containing a `this` reference */\nvar reThis = /\\bthis\\b/;\n\n/** Native method shortcuts */\nvar fnToString = Function.prototype.toString;\n\n/**\n * The base implementation of `_.createCallback` without support for creating\n * \"_.pluck\" or \"_.where\" style callbacks.\n *\n * @private\n * @param {*} [func=identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of the created callback.\n * @param {number} [argCount] The number of arguments the callback accepts.\n * @returns {Function} Returns a callback function.\n */\nfunction baseCreateCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  // exit early for no `thisArg` or already bound by `Function#bind`\n  if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n    return func;\n  }\n  var bindData = func.__bindData__;\n  if (typeof bindData == 'undefined') {\n    if (support.funcNames) {\n      bindData = !func.name;\n    }\n    bindData = bindData || !support.funcDecomp;\n    if (!bindData) {\n      var source = fnToString.call(func);\n      if (!support.funcNames) {\n        bindData = !reFuncName.test(source);\n      }\n      if (!bindData) {\n        // checks if `func` references the `this` keyword and stores the result\n        bindData = reThis.test(source);\n        setBindData(func, bindData);\n      }\n    }\n  }\n  // exit early if there are no `this` references or `func` is bound\n  if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 2: return function(a, b) {\n      return func.call(thisArg, a, b);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n  }\n  return bind(func, thisArg);\n}\n\nmodule.exports = baseCreateCallback;\n\n},{\"../functions/bind\":125,\"../support\":224,\"../utilities/identity\":228,\"./setBindData\":179}],146:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('./baseCreate'),\n    isObject = require('../objects/isObject'),\n    setBindData = require('./setBindData'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * The base implementation of `createWrapper` that creates the wrapper and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new function.\n */\nfunction baseCreateWrapper(bindData) {\n  var func = bindData[0],\n      bitmask = bindData[1],\n      partialArgs = bindData[2],\n      partialRightArgs = bindData[3],\n      thisArg = bindData[4],\n      arity = bindData[5];\n\n  var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      key = func;\n\n  function bound() {\n    var thisBinding = isBind ? thisArg : this;\n    if (partialArgs) {\n      var args = slice(partialArgs);\n      push.apply(args, arguments);\n    }\n    if (partialRightArgs || isCurry) {\n      args || (args = slice(arguments));\n      if (partialRightArgs) {\n        push.apply(args, partialRightArgs);\n      }\n      if (isCurry && args.length < arity) {\n        bitmask |= 16 & ~32;\n        return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n      }\n    }\n    args || (args = arguments);\n    if (isBindKey) {\n      func = thisBinding[key];\n    }\n    if (this instanceof bound) {\n      thisBinding = baseCreate(func.prototype);\n      var result = func.apply(thisBinding, args);\n      return isObject(result) ? result : thisBinding;\n    }\n    return func.apply(thisBinding, args);\n  }\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseCreateWrapper;\n\n},{\"../objects/isObject\":211,\"./baseCreate\":144,\"./setBindData\":179,\"./slice\":182}],147:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    cacheIndexOf = require('./cacheIndexOf'),\n    createCache = require('./createCache'),\n    largeArraySize = require('./largeArraySize'),\n    releaseObject = require('./releaseObject');\n\n/**\n * The base implementation of `_.difference` that accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to process.\n * @param {Array} [values] The array of values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array ? array.length : 0,\n      isLarge = length >= largeArraySize,\n      result = [];\n\n  if (isLarge) {\n    var cache = createCache(values);\n    if (cache) {\n      indexOf = cacheIndexOf;\n      values = cache;\n    } else {\n      isLarge = false;\n    }\n  }\n  while (++index < length) {\n    var value = array[index];\n    if (indexOf(values, value) < 0) {\n      result.push(value);\n    }\n  }\n  if (isLarge) {\n    releaseObject(values);\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n\n},{\"./baseIndexOf\":149,\"./cacheIndexOf\":154,\"./createCache\":159,\"./largeArraySize\":169,\"./releaseObject\":178}],148:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray');\n\n/**\n * The base implementation of `_.flatten` without support for callback\n * shorthands or `thisArg` binding.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n * @param {number} [fromIndex=0] The index to start from.\n * @returns {Array} Returns a new flattened array.\n */\nfunction baseFlatten(array, isShallow, isStrict, fromIndex) {\n  var index = (fromIndex || 0) - 1,\n      length = array ? array.length : 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (value && typeof value == 'object' && typeof value.length == 'number'\n        && (isArray(value) || isArguments(value))) {\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (!isShallow) {\n        value = baseFlatten(value, isShallow, isStrict);\n      }\n      var valIndex = -1,\n          valLength = value.length,\n          resIndex = result.length;\n\n      result.length += valLength;\n      while (++valIndex < valLength) {\n        result[resIndex++] = value[valIndex];\n      }\n    } else if (!isStrict) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n},{\"../objects/isArguments\":199,\"../objects/isArray\":200}],149:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches\n * or `fromIndex` constraints.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value or `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  var index = (fromIndex || 0) - 1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n\n},{}],150:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('../objects/forIn'),\n    getArray = require('./getArray'),\n    isFunction = require('../objects/isFunction'),\n    objectTypes = require('./objectTypes'),\n    releaseArray = require('./releaseArray');\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n * that allows partial \"_.where\" style comparisons.\n *\n * @private\n * @param {*} a The value to compare.\n * @param {*} b The other value to compare.\n * @param {Function} [callback] The function to customize comparing values.\n * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n  // used to indicate that when comparing objects, `a` has at least the properties of `b`\n  if (callback) {\n    var result = callback(a, b);\n    if (typeof result != 'undefined') {\n      return !!result;\n    }\n  }\n  // exit early for identical values\n  if (a === b) {\n    // treat `+0` vs. `-0` as not equal\n    return a !== 0 || (1 / a == 1 / b);\n  }\n  var type = typeof a,\n      otherType = typeof b;\n\n  // exit early for unlike primitive values\n  if (a === a &&\n      !(a && objectTypes[type]) &&\n      !(b && objectTypes[otherType])) {\n    return false;\n  }\n  // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n  // http://es5.github.io/#x15.3.4.4\n  if (a == null || b == null) {\n    return a === b;\n  }\n  // compare [[Class]] names\n  var className = toString.call(a),\n      otherClass = toString.call(b);\n\n  if (className == argsClass) {\n    className = objectClass;\n  }\n  if (otherClass == argsClass) {\n    otherClass = objectClass;\n  }\n  if (className != otherClass) {\n    return false;\n  }\n  switch (className) {\n    case boolClass:\n    case dateClass:\n      // coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n      return +a == +b;\n\n    case numberClass:\n      // treat `NaN` vs. `NaN` as equal\n      return (a != +a)\n        ? b != +b\n        // but treat `+0` vs. `-0` as not equal\n        : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n    case regexpClass:\n    case stringClass:\n      // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n      // treat string primitives and their corresponding object instances as equal\n      return a == String(b);\n  }\n  var isArr = className == arrayClass;\n  if (!isArr) {\n    // unwrap any `lodash` wrapped values\n    var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n        bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n    if (aWrapped || bWrapped) {\n      return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n    }\n    // exit for functions and DOM nodes\n    if (className != objectClass) {\n      return false;\n    }\n    // in older versions of Opera, `arguments` objects have `Array` constructors\n    var ctorA = a.constructor,\n        ctorB = b.constructor;\n\n    // non `Object` object instances with different constructors are not equal\n    if (ctorA != ctorB &&\n          !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n          ('constructor' in a && 'constructor' in b)\n        ) {\n      return false;\n    }\n  }\n  // assume cyclic structures are equal\n  // the algorithm for detecting cyclic structures is adapted from ES 5.1\n  // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n  var initedStack = !stackA;\n  stackA || (stackA = getArray());\n  stackB || (stackB = getArray());\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == a) {\n      return stackB[length] == b;\n    }\n  }\n  var size = 0;\n  result = true;\n\n  // add `a` and `b` to the stack of traversed objects\n  stackA.push(a);\n  stackB.push(b);\n\n  // recursively compare objects and arrays (susceptible to call stack limits)\n  if (isArr) {\n    // compare lengths to determine if a deep comparison is necessary\n    length = a.length;\n    size = b.length;\n    result = size == length;\n\n    if (result || isWhere) {\n      // deep compare the contents, ignoring non-numeric properties\n      while (size--) {\n        var index = length,\n            value = b[size];\n\n        if (isWhere) {\n          while (index--) {\n            if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n          break;\n        }\n      }\n    }\n  }\n  else {\n    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n    // which, in this case, is more costly\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n      }\n    });\n\n    if (result && !isWhere) {\n      // ensure both objects have the same number of properties\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          // `size` will be `-1` if `a` has more properties than `b`\n          return (result = --size > -1);\n        }\n      });\n    }\n  }\n  stackA.pop();\n  stackB.pop();\n\n  if (initedStack) {\n    releaseArray(stackA);\n    releaseArray(stackB);\n  }\n  return result;\n}\n\nmodule.exports = baseIsEqual;\n\n},{\"../objects/forIn\":192,\"../objects/isFunction\":207,\"./getArray\":163,\"./objectTypes\":173,\"./releaseArray\":177}],151:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isPlainObject = require('../objects/isPlainObject');\n\n/**\n * The base implementation of `_.merge` without argument juggling or support\n * for `thisArg` binding.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [callback] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n */\nfunction baseMerge(object, source, callback, stackA, stackB) {\n  (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n    var found,\n        isArr,\n        result = source,\n        value = object[key];\n\n    if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n      // avoid merging previously merged cyclic sources\n      var stackLength = stackA.length;\n      while (stackLength--) {\n        if ((found = stackA[stackLength] == source)) {\n          value = stackB[stackLength];\n          break;\n        }\n      }\n      if (!found) {\n        var isShallow;\n        if (callback) {\n          result = callback(value, source);\n          if ((isShallow = typeof result != 'undefined')) {\n            value = result;\n          }\n        }\n        if (!isShallow) {\n          value = isArr\n            ? (isArray(value) ? value : [])\n            : (isPlainObject(value) ? value : {});\n        }\n        // add `source` and associated `value` to the stack of traversed objects\n        stackA.push(source);\n        stackB.push(value);\n\n        // recursively merge objects and arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          baseMerge(value, source, callback, stackA, stackB);\n        }\n      }\n    }\n    else {\n      if (callback) {\n        result = callback(value, source);\n        if (typeof result == 'undefined') {\n          result = source;\n        }\n      }\n      if (typeof result != 'undefined') {\n        value = result;\n      }\n    }\n    object[key] = value;\n  });\n}\n\nmodule.exports = baseMerge;\n\n},{\"../collections/forEach\":104,\"../objects/forOwn\":194,\"../objects/isArray\":200,\"../objects/isPlainObject\":212}],152:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Native method shortcuts */\nvar floor = Math.floor;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without argument juggling or support\n * for returning floating-point numbers.\n *\n * @private\n * @param {number} min The minimum possible value.\n * @param {number} max The maximum possible value.\n * @returns {number} Returns a random number.\n */\nfunction baseRandom(min, max) {\n  return min + floor(nativeRandom() * (max - min + 1));\n}\n\nmodule.exports = baseRandom;\n\n},{}],153:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    cacheIndexOf = require('./cacheIndexOf'),\n    createCache = require('./createCache'),\n    getArray = require('./getArray'),\n    largeArraySize = require('./largeArraySize'),\n    releaseArray = require('./releaseArray'),\n    releaseObject = require('./releaseObject');\n\n/**\n * The base implementation of `_.uniq` without support for callback shorthands\n * or `thisArg` binding.\n *\n * @private\n * @param {Array} array The array to process.\n * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n * @param {Function} [callback] The function called per iteration.\n * @returns {Array} Returns a duplicate-value-free array.\n */\nfunction baseUniq(array, isSorted, callback) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array ? array.length : 0,\n      result = [];\n\n  var isLarge = !isSorted && length >= largeArraySize,\n      seen = (callback || isLarge) ? getArray() : result;\n\n  if (isLarge) {\n    var cache = createCache(seen);\n    indexOf = cacheIndexOf;\n    seen = cache;\n  }\n  while (++index < length) {\n    var value = array[index],\n        computed = callback ? callback(value, index, array) : value;\n\n    if (isSorted\n          ? !index || seen[seen.length - 1] !== computed\n          : indexOf(seen, computed) < 0\n        ) {\n      if (callback || isLarge) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  if (isLarge) {\n    releaseArray(seen.array);\n    releaseObject(seen);\n  } else if (callback) {\n    releaseArray(seen);\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n\n},{\"./baseIndexOf\":149,\"./cacheIndexOf\":154,\"./createCache\":159,\"./getArray\":163,\"./largeArraySize\":169,\"./releaseArray\":177,\"./releaseObject\":178}],154:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    keyPrefix = require('./keyPrefix');\n\n/**\n * An implementation of `_.contains` for cache objects that mimics the return\n * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n *\n * @private\n * @param {Object} cache The cache object to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns `0` if `value` is found, else `-1`.\n */\nfunction cacheIndexOf(cache, value) {\n  var type = typeof value;\n  cache = cache.cache;\n\n  if (type == 'boolean' || value == null) {\n    return cache[value] ? 0 : -1;\n  }\n  if (type != 'number' && type != 'string') {\n    type = 'object';\n  }\n  var key = type == 'number' ? value : keyPrefix + value;\n  cache = (cache = cache[type]) && cache[key];\n\n  return type == 'object'\n    ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n    : (cache ? 0 : -1);\n}\n\nmodule.exports = cacheIndexOf;\n\n},{\"./baseIndexOf\":149,\"./keyPrefix\":168}],155:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keyPrefix = require('./keyPrefix');\n\n/**\n * Adds a given value to the corresponding cache object.\n *\n * @private\n * @param {*} value The value to add to the cache.\n */\nfunction cachePush(value) {\n  var cache = this.cache,\n      type = typeof value;\n\n  if (type == 'boolean' || value == null) {\n    cache[value] = true;\n  } else {\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value,\n        typeCache = cache[type] || (cache[type] = {});\n\n    if (type == 'object') {\n      (typeCache[key] || (typeCache[key] = [])).push(value);\n    } else {\n      typeCache[key] = true;\n    }\n  }\n}\n\nmodule.exports = cachePush;\n\n},{\"./keyPrefix\":168}],156:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used by `_.max` and `_.min` as the default callback when a given\n * collection is a string value.\n *\n * @private\n * @param {string} value The character to inspect.\n * @returns {number} Returns the code unit of given character.\n */\nfunction charAtCallback(value) {\n  return value.charCodeAt(0);\n}\n\nmodule.exports = charAtCallback;\n\n},{}],157:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n * them in ascending order.\n *\n * @private\n * @param {Object} a The object to compare to `b`.\n * @param {Object} b The object to compare to `a`.\n * @returns {number} Returns the sort order indicator of `1` or `-1`.\n */\nfunction compareAscending(a, b) {\n  var ac = a.criteria,\n      bc = b.criteria,\n      index = -1,\n      length = ac.length;\n\n  while (++index < length) {\n    var value = ac[index],\n        other = bc[index];\n\n    if (value !== other) {\n      if (value > other || typeof value == 'undefined') {\n        return 1;\n      }\n      if (value < other || typeof other == 'undefined') {\n        return -1;\n      }\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to return the same value for\n  // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See http://code.google.com/p/v8/issues/detail?id=90\n  return a.index - b.index;\n}\n\nmodule.exports = compareAscending;\n\n},{}],158:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray');\n\n/**\n * Creates a function that aggregates a collection, creating an object composed\n * of keys generated from the results of running each element of the collection\n * through a callback. The given `setter` function sets the keys and values\n * of the composed object.\n *\n * @private\n * @param {Function} setter The setter function.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter) {\n  return function(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, callback(value, index, collection), collection);\n      }\n    } else {\n      forOwn(collection, function(value, key, collection) {\n        setter(result, value, callback(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n\n},{\"../functions/createCallback\":129,\"../objects/forOwn\":194,\"../objects/isArray\":200}],159:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar cachePush = require('./cachePush'),\n    getObject = require('./getObject'),\n    releaseObject = require('./releaseObject');\n\n/**\n * Creates a cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [array=[]] The array to search.\n * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n */\nfunction createCache(array) {\n  var index = -1,\n      length = array.length,\n      first = array[0],\n      mid = array[(length / 2) | 0],\n      last = array[length - 1];\n\n  if (first && typeof first == 'object' &&\n      mid && typeof mid == 'object' && last && typeof last == 'object') {\n    return false;\n  }\n  var cache = getObject();\n  cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n  var result = getObject();\n  result.array = array;\n  result.cache = cache;\n  result.push = cachePush;\n\n  while (++index < length) {\n    result.push(array[index]);\n  }\n  return result;\n}\n\nmodule.exports = createCache;\n\n},{\"./cachePush\":155,\"./getObject\":164,\"./releaseObject\":178}],160:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseBind = require('./baseBind'),\n    baseCreateWrapper = require('./baseCreateWrapper'),\n    isFunction = require('../objects/isFunction'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push,\n    unshift = arrayRef.unshift;\n\n/**\n * Creates a function that, when called, either curries or invokes `func`\n * with an optional `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of method flags to compose.\n *  The bitmask may be composed of the following flags:\n *  1 - `_.bind`\n *  2 - `_.bindKey`\n *  4 - `_.curry`\n *  8 - `_.curry` (bound)\n *  16 - `_.partial`\n *  32 - `_.partialRight`\n * @param {Array} [partialArgs] An array of arguments to prepend to those\n *  provided to the new function.\n * @param {Array} [partialRightArgs] An array of arguments to append to those\n *  provided to the new function.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new function.\n */\nfunction createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n  var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      isPartial = bitmask & 16,\n      isPartialRight = bitmask & 32;\n\n  if (!isBindKey && !isFunction(func)) {\n    throw new TypeError;\n  }\n  if (isPartial && !partialArgs.length) {\n    bitmask &= ~16;\n    isPartial = partialArgs = false;\n  }\n  if (isPartialRight && !partialRightArgs.length) {\n    bitmask &= ~32;\n    isPartialRight = partialRightArgs = false;\n  }\n  var bindData = func && func.__bindData__;\n  if (bindData && bindData !== true) {\n    // clone `bindData`\n    bindData = slice(bindData);\n    if (bindData[2]) {\n      bindData[2] = slice(bindData[2]);\n    }\n    if (bindData[3]) {\n      bindData[3] = slice(bindData[3]);\n    }\n    // set `thisBinding` is not previously bound\n    if (isBind && !(bindData[1] & 1)) {\n      bindData[4] = thisArg;\n    }\n    // set if previously bound but not currently (subsequent curried functions)\n    if (!isBind && bindData[1] & 1) {\n      bitmask |= 8;\n    }\n    // set curried arity if not yet set\n    if (isCurry && !(bindData[1] & 4)) {\n      bindData[5] = arity;\n    }\n    // append partial left arguments\n    if (isPartial) {\n      push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n    }\n    // append partial right arguments\n    if (isPartialRight) {\n      unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n    }\n    // merge flags\n    bindData[1] |= bitmask;\n    return createWrapper.apply(null, bindData);\n  }\n  // fast path for `_.bind`\n  var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n  return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n}\n\nmodule.exports = createWrapper;\n\n},{\"../objects/isFunction\":207,\"./baseBind\":142,\"./baseCreateWrapper\":146,\"./slice\":182}],161:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes');\n\n/**\n * Used by `escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} match The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeHtmlChar(match) {\n  return htmlEscapes[match];\n}\n\nmodule.exports = escapeHtmlChar;\n\n},{\"./htmlEscapes\":165}],162:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to escape characters for inclusion in compiled string literals */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\t': 't',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `template` to escape characters for inclusion in compiled\n * string literals.\n *\n * @private\n * @param {string} match The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeStringChar(match) {\n  return '\\\\' + stringEscapes[match];\n}\n\nmodule.exports = escapeStringChar;\n\n},{}],163:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrayPool = require('./arrayPool');\n\n/**\n * Gets an array from the array pool or creates a new one if the pool is empty.\n *\n * @private\n * @returns {Array} The array from the pool.\n */\nfunction getArray() {\n  return arrayPool.pop() || [];\n}\n\nmodule.exports = getArray;\n\n},{\"./arrayPool\":141}],164:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectPool = require('./objectPool');\n\n/**\n * Gets an object from the object pool or creates a new one if the pool is empty.\n *\n * @private\n * @returns {Object} The object from the pool.\n */\nfunction getObject() {\n  return objectPool.pop() || {\n    'array': null,\n    'cache': null,\n    'criteria': null,\n    'false': false,\n    'index': 0,\n    'null': false,\n    'number': null,\n    'object': null,\n    'push': null,\n    'string': null,\n    'true': false,\n    'undefined': false,\n    'value': null\n  };\n}\n\nmodule.exports = getObject;\n\n},{\"./objectPool\":172}],165:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used to convert characters to HTML entities:\n *\n * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n * don't require escaping in HTML and have no special meaning unless they're part\n * of a tag or an unquoted attribute value.\n * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nmodule.exports = htmlEscapes;\n\n},{}],166:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes'),\n    invert = require('../objects/invert');\n\n/** Used to convert HTML entities to characters */\nvar htmlUnescapes = invert(htmlEscapes);\n\nmodule.exports = htmlUnescapes;\n\n},{\"../objects/invert\":198,\"./htmlEscapes\":165}],167:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Used to detect if a method is native */\nvar reNative = RegExp('^' +\n  String(toString)\n    .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n */\nfunction isNative(value) {\n  return typeof value == 'function' && reNative.test(value);\n}\n\nmodule.exports = isNative;\n\n},{}],168:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\nvar keyPrefix = +new Date + '';\n\nmodule.exports = keyPrefix;\n\n},{}],169:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used as the size when optimizations are enabled for large arrays */\nvar largeArraySize = 75;\n\nmodule.exports = largeArraySize;\n\n},{}],170:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * A fast path for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap in a `lodash` instance.\n * @param {boolean} chainAll A flag to enable chaining for all methods\n * @returns {Object} Returns a `lodash` instance.\n */\nfunction lodashWrapper(value, chainAll) {\n  this.__chain__ = !!chainAll;\n  this.__wrapped__ = value;\n}\n\nmodule.exports = lodashWrapper;\n\n},{}],171:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used as the max size of the `arrayPool` and `objectPool` */\nvar maxPoolSize = 40;\n\nmodule.exports = maxPoolSize;\n\n},{}],172:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to pool arrays and objects used internally */\nvar objectPool = [];\n\nmodule.exports = objectPool;\n\n},{}],173:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to determine if values are of the language type Object */\nvar objectTypes = {\n  'boolean': false,\n  'function': true,\n  'object': true,\n  'number': false,\n  'string': false,\n  'undefined': false\n};\n\nmodule.exports = objectTypes;\n\n},{}],174:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlUnescapes = require('./htmlUnescapes'),\n    keys = require('../objects/keys');\n\n/** Used to match HTML entities and HTML characters */\nvar reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g');\n\nmodule.exports = reEscapedHtml;\n\n},{\"../objects/keys\":216,\"./htmlUnescapes\":166}],175:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to match \"interpolate\" template delimiters */\nvar reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\nmodule.exports = reInterpolate;\n\n},{}],176:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes'),\n    keys = require('../objects/keys');\n\n/** Used to match HTML entities and HTML characters */\nvar reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\nmodule.exports = reUnescapedHtml;\n\n},{\"../objects/keys\":216,\"./htmlEscapes\":165}],177:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrayPool = require('./arrayPool'),\n    maxPoolSize = require('./maxPoolSize');\n\n/**\n * Releases the given array back to the array pool.\n *\n * @private\n * @param {Array} [array] The array to release.\n */\nfunction releaseArray(array) {\n  array.length = 0;\n  if (arrayPool.length < maxPoolSize) {\n    arrayPool.push(array);\n  }\n}\n\nmodule.exports = releaseArray;\n\n},{\"./arrayPool\":141,\"./maxPoolSize\":171}],178:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar maxPoolSize = require('./maxPoolSize'),\n    objectPool = require('./objectPool');\n\n/**\n * Releases the given object back to the object pool.\n *\n * @private\n * @param {Object} [object] The object to release.\n */\nfunction releaseObject(object) {\n  var cache = object.cache;\n  if (cache) {\n    releaseObject(cache);\n  }\n  object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n  if (objectPool.length < maxPoolSize) {\n    objectPool.push(object);\n  }\n}\n\nmodule.exports = releaseObject;\n\n},{\"./maxPoolSize\":171,\"./objectPool\":172}],179:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./isNative'),\n    noop = require('../utilities/noop');\n\n/** Used as the property descriptor for `__bindData__` */\nvar descriptor = {\n  'configurable': false,\n  'enumerable': false,\n  'value': null,\n  'writable': false\n};\n\n/** Used to set meta data on functions */\nvar defineProperty = (function() {\n  // IE 8 only accepts DOM elements\n  try {\n    var o = {},\n        func = isNative(func = Object.defineProperty) && func,\n        result = func(o, o, o) && func;\n  } catch(e) { }\n  return result;\n}());\n\n/**\n * Sets `this` binding data on a given function.\n *\n * @private\n * @param {Function} func The function to set data on.\n * @param {Array} value The data array to set.\n */\nvar setBindData = !defineProperty ? noop : function(func, value) {\n  descriptor.value = value;\n  defineProperty(func, '__bindData__', descriptor);\n};\n\nmodule.exports = setBindData;\n\n},{\"../utilities/noop\":231,\"./isNative\":167}],180:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('../objects/forIn'),\n    isFunction = require('../objects/isFunction');\n\n/** `Object#toString` result shortcuts */\nvar objectClass = '[object Object]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `isPlainObject` which checks if a given value\n * is an object created by the `Object` constructor, assuming objects created\n * by the `Object` constructor have no inherited enumerable properties and that\n * there are no `Object.prototype` extensions.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n */\nfunction shimIsPlainObject(value) {\n  var ctor,\n      result;\n\n  // avoid non Object objects, `arguments` objects, and DOM elements\n  if (!(value && toString.call(value) == objectClass) ||\n      (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n    return false;\n  }\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  forIn(value, function(value, key) {\n    result = key;\n  });\n  return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = shimIsPlainObject;\n\n},{\"../objects/forIn\":192,\"../objects/isFunction\":207}],181:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectTypes = require('./objectTypes');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which produces an array of the\n * given object's own enumerable property names.\n *\n * @private\n * @type Function\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names.\n */\nvar shimKeys = function(object) {\n  var index, iterable = object, result = [];\n  if (!iterable) return result;\n  if (!(objectTypes[typeof object])) return result;\n    for (index in iterable) {\n      if (hasOwnProperty.call(iterable, index)) {\n        result.push(index);\n      }\n    }\n  return result\n};\n\nmodule.exports = shimKeys;\n\n},{\"./objectTypes\":173}],182:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Slices the `collection` from the `start` index up to, but not including,\n * the `end` index.\n *\n * Note: This function is used instead of `Array#slice` to support node lists\n * in IE < 9 and to ensure dense arrays are returned.\n *\n * @private\n * @param {Array|Object|string} collection The collection to slice.\n * @param {number} start The start index.\n * @param {number} end The end index.\n * @returns {Array} Returns the new array.\n */\nfunction slice(array, start, end) {\n  start || (start = 0);\n  if (typeof end == 'undefined') {\n    end = array ? array.length : 0;\n  }\n  var index = -1,\n      length = end - start || 0,\n      result = Array(length < 0 ? 0 : length);\n\n  while (++index < length) {\n    result[index] = array[start + index];\n  }\n  return result;\n}\n\nmodule.exports = slice;\n\n},{}],183:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlUnescapes = require('./htmlUnescapes');\n\n/**\n * Used by `unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} match The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nfunction unescapeHtmlChar(match) {\n  return htmlUnescapes[match];\n}\n\nmodule.exports = unescapeHtmlChar;\n\n},{\"./htmlUnescapes\":166}],184:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'assign': require('./objects/assign'),\n  'clone': require('./objects/clone'),\n  'cloneDeep': require('./objects/cloneDeep'),\n  'create': require('./objects/create'),\n  'defaults': require('./objects/defaults'),\n  'extend': require('./objects/assign'),\n  'findKey': require('./objects/findKey'),\n  'findLastKey': require('./objects/findLastKey'),\n  'forIn': require('./objects/forIn'),\n  'forInRight': require('./objects/forInRight'),\n  'forOwn': require('./objects/forOwn'),\n  'forOwnRight': require('./objects/forOwnRight'),\n  'functions': require('./objects/functions'),\n  'has': require('./objects/has'),\n  'invert': require('./objects/invert'),\n  'isArguments': require('./objects/isArguments'),\n  'isArray': require('./objects/isArray'),\n  'isBoolean': require('./objects/isBoolean'),\n  'isDate': require('./objects/isDate'),\n  'isElement': require('./objects/isElement'),\n  'isEmpty': require('./objects/isEmpty'),\n  'isEqual': require('./objects/isEqual'),\n  'isFinite': require('./objects/isFinite'),\n  'isFunction': require('./objects/isFunction'),\n  'isNaN': require('./objects/isNaN'),\n  'isNull': require('./objects/isNull'),\n  'isNumber': require('./objects/isNumber'),\n  'isObject': require('./objects/isObject'),\n  'isPlainObject': require('./objects/isPlainObject'),\n  'isRegExp': require('./objects/isRegExp'),\n  'isString': require('./objects/isString'),\n  'isUndefined': require('./objects/isUndefined'),\n  'keys': require('./objects/keys'),\n  'mapValues': require('./objects/mapValues'),\n  'merge': require('./objects/merge'),\n  'methods': require('./objects/functions'),\n  'omit': require('./objects/omit'),\n  'pairs': require('./objects/pairs'),\n  'pick': require('./objects/pick'),\n  'transform': require('./objects/transform'),\n  'values': require('./objects/values')\n};\n\n},{\"./objects/assign\":185,\"./objects/clone\":186,\"./objects/cloneDeep\":187,\"./objects/create\":188,\"./objects/defaults\":189,\"./objects/findKey\":190,\"./objects/findLastKey\":191,\"./objects/forIn\":192,\"./objects/forInRight\":193,\"./objects/forOwn\":194,\"./objects/forOwnRight\":195,\"./objects/functions\":196,\"./objects/has\":197,\"./objects/invert\":198,\"./objects/isArguments\":199,\"./objects/isArray\":200,\"./objects/isBoolean\":201,\"./objects/isDate\":202,\"./objects/isElement\":203,\"./objects/isEmpty\":204,\"./objects/isEqual\":205,\"./objects/isFinite\":206,\"./objects/isFunction\":207,\"./objects/isNaN\":208,\"./objects/isNull\":209,\"./objects/isNumber\":210,\"./objects/isObject\":211,\"./objects/isPlainObject\":212,\"./objects/isRegExp\":213,\"./objects/isString\":214,\"./objects/isUndefined\":215,\"./objects/keys\":216,\"./objects/mapValues\":217,\"./objects/merge\":218,\"./objects/omit\":219,\"./objects/pairs\":220,\"./objects/pick\":221,\"./objects/transform\":222,\"./objects/values\":223}],185:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources will overwrite property assignments of previous\n * sources. If a callback is provided it will be executed to produce the\n * assigned values. The callback is bound to `thisArg` and invoked with two\n * arguments; (objectValue, sourceValue).\n *\n * @static\n * @memberOf _\n * @type Function\n * @alias extend\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param {Function} [callback] The function to customize assigning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n * // => { 'name': 'fred', 'employer': 'slate' }\n *\n * var defaults = _.partialRight(_.assign, function(a, b) {\n *   return typeof a == 'undefined' ? b : a;\n * });\n *\n * var object = { 'name': 'barney' };\n * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n * // => { 'name': 'barney', 'employer': 'slate' }\n */\nvar assign = function(object, source, guard) {\n  var index, iterable = object, result = iterable;\n  if (!iterable) return result;\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = typeof guard == 'number' ? 2 : args.length;\n  if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n    var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n  } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n    callback = args[--argsLength];\n  }\n  while (++argsIndex < argsLength) {\n    iterable = args[argsIndex];\n    if (iterable && objectTypes[typeof iterable]) {\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n    }\n    }\n  }\n  return result\n};\n\nmodule.exports = assign;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/objectTypes\":173,\"./keys\":216}],186:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseClone = require('../internals/baseClone'),\n    baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n * be cloned, otherwise they will be assigned by reference. If a callback\n * is provided it will be executed to produce the cloned values. If the\n * callback returns `undefined` cloning will be handled by the method instead.\n * The callback is bound to `thisArg` and invoked with one argument; (value).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep=false] Specify a deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * var shallow = _.clone(characters);\n * shallow[0] === characters[0];\n * // => true\n *\n * var deep = _.clone(characters, true);\n * deep[0] === characters[0];\n * // => false\n *\n * _.mixin({\n *   'clone': _.partialRight(_.clone, function(value) {\n *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n *   })\n * });\n *\n * var clone = _.clone(document.body);\n * clone.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, callback, thisArg) {\n  // allows working with \"Collections\" methods without using their `index`\n  // and `collection` arguments for `isDeep` and `callback`\n  if (typeof isDeep != 'boolean' && isDeep != null) {\n    thisArg = callback;\n    callback = isDeep;\n    isDeep = false;\n  }\n  return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n}\n\nmodule.exports = clone;\n\n},{\"../internals/baseClone\":143,\"../internals/baseCreateCallback\":145}],187:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseClone = require('../internals/baseClone'),\n    baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Creates a deep clone of `value`. If a callback is provided it will be\n * executed to produce the cloned values. If the callback returns `undefined`\n * cloning will be handled by the method instead. The callback is bound to\n * `thisArg` and invoked with one argument; (value).\n *\n * Note: This method is loosely based on the structured clone algorithm. Functions\n * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the deep cloned value.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * var deep = _.cloneDeep(characters);\n * deep[0] === characters[0];\n * // => false\n *\n * var view = {\n *   'label': 'docs',\n *   'node': element\n * };\n *\n * var clone = _.cloneDeep(view, function(value) {\n *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n * });\n *\n * clone.node == view.node;\n * // => false\n */\nfunction cloneDeep(value, callback, thisArg) {\n  return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n}\n\nmodule.exports = cloneDeep;\n\n},{\"../internals/baseClone\":143,\"../internals/baseCreateCallback\":145}],188:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar assign = require('./assign'),\n    baseCreate = require('../internals/baseCreate');\n\n/**\n * Creates an object that inherits from the given `prototype` object. If a\n * `properties` object is provided its own enumerable properties are assigned\n * to the created object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */\nfunction create(prototype, properties) {\n  var result = baseCreate(prototype);\n  return properties ? assign(result, properties) : result;\n}\n\nmodule.exports = create;\n\n},{\"../internals/baseCreate\":144,\"./assign\":185}],189:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object for all destination properties that resolve to `undefined`. Once a\n * property is set, additional defaults of the same property will be ignored.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param- {Object} [guard] Allows working with `_.reduce` without using its\n *  `key` and `object` arguments as sources.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * var object = { 'name': 'barney' };\n * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n * // => { 'name': 'barney', 'employer': 'slate' }\n */\nvar defaults = function(object, source, guard) {\n  var index, iterable = object, result = iterable;\n  if (!iterable) return result;\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = typeof guard == 'number' ? 2 : args.length;\n  while (++argsIndex < argsLength) {\n    iterable = args[argsIndex];\n    if (iterable && objectTypes[typeof iterable]) {\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      if (typeof result[index] == 'undefined') result[index] = iterable[index];\n    }\n    }\n  }\n  return result\n};\n\nmodule.exports = defaults;\n\n},{\"../internals/objectTypes\":173,\"./keys\":216}],190:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('./forOwn');\n\n/**\n * This method is like `_.findIndex` except that it returns the key of the\n * first element that passes the callback check, instead of the element itself.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to search.\n * @param {Function|Object|string} [callback=identity] The function called per\n *  iteration. If a property name or object is provided it will be used to\n *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n * @example\n *\n * var characters = {\n *   'barney': {  'age': 36, 'blocked': false },\n *   'fred': {    'age': 40, 'blocked': true },\n *   'pebbles': { 'age': 1,  'blocked': false }\n * };\n *\n * _.findKey(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => 'barney' (property order is not guaranteed across environments)\n *\n * // using \"_.where\" callback shorthand\n * _.findKey(characters, { 'age': 1 });\n * // => 'pebbles'\n *\n * // using \"_.pluck\" callback shorthand\n * _.findKey(characters, 'blocked');\n * // => 'fred'\n */\nfunction findKey(object, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forOwn(object, function(value, key, object) {\n    if (callback(value, key, object)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findKey;\n\n},{\"../functions/createCallback\":129,\"./forOwn\":194}],191:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwnRight = require('./forOwnRight');\n\n/**\n * This method is like `_.findKey` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to search.\n * @param {Function|Object|string} [callback=identity] The function called per\n *  iteration. If a property name or object is provided it will be used to\n *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n * @example\n *\n * var characters = {\n *   'barney': {  'age': 36, 'blocked': true },\n *   'fred': {    'age': 40, 'blocked': false },\n *   'pebbles': { 'age': 1,  'blocked': true }\n * };\n *\n * _.findLastKey(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n *\n * // using \"_.where\" callback shorthand\n * _.findLastKey(characters, { 'age': 40 });\n * // => 'fred'\n *\n * // using \"_.pluck\" callback shorthand\n * _.findLastKey(characters, 'blocked');\n * // => 'pebbles'\n */\nfunction findLastKey(object, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forOwnRight(object, function(value, key, object) {\n    if (callback(value, key, object)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findLastKey;\n\n},{\"../functions/createCallback\":129,\"./forOwnRight\":195}],192:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Iterates over own and inherited enumerable properties of an object,\n * executing the callback for each property. The callback is bound to `thisArg`\n * and invoked with three arguments; (value, key, object). Callbacks may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * Shape.prototype.move = function(x, y) {\n *   this.x += x;\n *   this.y += y;\n * };\n *\n * _.forIn(new Shape, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n */\nvar forIn = function(collection, callback, thisArg) {\n  var index, iterable = collection, result = iterable;\n  if (!iterable) return result;\n  if (!objectTypes[typeof iterable]) return result;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    for (index in iterable) {\n      if (callback(iterable[index], index, collection) === false) return result;\n    }\n  return result\n};\n\nmodule.exports = forIn;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/objectTypes\":173}],193:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forIn = require('./forIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * Shape.prototype.move = function(x, y) {\n *   this.x += x;\n *   this.y += y;\n * };\n *\n * _.forInRight(new Shape, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n */\nfunction forInRight(object, callback, thisArg) {\n  var pairs = [];\n\n  forIn(object, function(value, key) {\n    pairs.push(key, value);\n  });\n\n  var length = pairs.length;\n  callback = baseCreateCallback(callback, thisArg, 3);\n  while (length--) {\n    if (callback(pairs[length--], pairs[length], object) === false) {\n      break;\n    }\n  }\n  return object;\n}\n\nmodule.exports = forInRight;\n\n},{\"../internals/baseCreateCallback\":145,\"./forIn\":192}],194:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Iterates over own enumerable properties of an object, executing the callback\n * for each property. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, key, object). Callbacks may exit iteration early by\n * explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n *   console.log(key);\n * });\n * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n */\nvar forOwn = function(collection, callback, thisArg) {\n  var index, iterable = collection, result = iterable;\n  if (!iterable) return result;\n  if (!objectTypes[typeof iterable]) return result;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      if (callback(iterable[index], index, collection) === false) return result;\n    }\n  return result\n};\n\nmodule.exports = forOwn;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/objectTypes\":173,\"./keys\":216}],195:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys');\n\n/**\n * This method is like `_.forOwn` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n *   console.log(key);\n * });\n * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n */\nfunction forOwnRight(object, callback, thisArg) {\n  var props = keys(object),\n      length = props.length;\n\n  callback = baseCreateCallback(callback, thisArg, 3);\n  while (length--) {\n    var key = props[length];\n    if (callback(object[key], key, object) === false) {\n      break;\n    }\n  }\n  return object;\n}\n\nmodule.exports = forOwnRight;\n\n},{\"../internals/baseCreateCallback\":145,\"./keys\":216}],196:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('./forIn'),\n    isFunction = require('./isFunction');\n\n/**\n * Creates a sorted array of property names of all enumerable properties,\n * own and inherited, of `object` that have function values.\n *\n * @static\n * @memberOf _\n * @alias methods\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names that have function values.\n * @example\n *\n * _.functions(_);\n * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n */\nfunction functions(object) {\n  var result = [];\n  forIn(object, function(value, key) {\n    if (isFunction(value)) {\n      result.push(key);\n    }\n  });\n  return result.sort();\n}\n\nmodule.exports = functions;\n\n},{\"./forIn\":192,\"./isFunction\":207}],197:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if the specified property name exists as a direct property of `object`,\n * instead of an inherited property.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @param {string} key The name of the property to check.\n * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n * @example\n *\n * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n * // => true\n */\nfunction has(object, key) {\n  return object ? hasOwnProperty.call(object, key) : false;\n}\n\nmodule.exports = has;\n\n},{}],198:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates an object composed of the inverted keys and values of the given object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the created inverted object.\n * @example\n *\n * _.invert({ 'first': 'fred', 'second': 'barney' });\n * // => { 'fred': 'first', 'barney': 'second' }\n */\nfunction invert(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    result[object[key]] = key;\n  }\n  return result;\n}\n\nmodule.exports = invert;\n\n},{\"./keys\":216}],199:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n * @example\n *\n * (function() { return _.isArguments(arguments); })(1, 2, 3);\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return value && typeof value == 'object' && typeof value.length == 'number' &&\n    toString.call(value) == argsClass || false;\n}\n\nmodule.exports = isArguments;\n\n},{}],200:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative');\n\n/** `Object#toString` result shortcuts */\nvar arrayClass = '[object Array]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n/**\n * Checks if `value` is an array.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n * @example\n *\n * (function() { return _.isArray(arguments); })();\n * // => false\n *\n * _.isArray([1, 2, 3]);\n * // => true\n */\nvar isArray = nativeIsArray || function(value) {\n  return value && typeof value == 'object' && typeof value.length == 'number' &&\n    toString.call(value) == arrayClass || false;\n};\n\nmodule.exports = isArray;\n\n},{\"../internals/isNative\":167}],201:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar boolClass = '[object Boolean]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a boolean value.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n * @example\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    value && typeof value == 'object' && toString.call(value) == boolClass || false;\n}\n\nmodule.exports = isBoolean;\n\n},{}],202:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar dateClass = '[object Date]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a date.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n */\nfunction isDate(value) {\n  return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n}\n\nmodule.exports = isDate;\n\n},{}],203:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is a DOM element.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n */\nfunction isElement(value) {\n  return value && value.nodeType === 1 || false;\n}\n\nmodule.exports = isElement;\n\n},{}],204:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forOwn = require('./forOwn'),\n    isFunction = require('./isFunction');\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    objectClass = '[object Object]',\n    stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n * length of `0` and objects with no own enumerable properties are considered\n * \"empty\".\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Array|Object|string} value The value to inspect.\n * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({});\n * // => true\n *\n * _.isEmpty('');\n * // => true\n */\nfunction isEmpty(value) {\n  var result = true;\n  if (!value) {\n    return result;\n  }\n  var className = toString.call(value),\n      length = value.length;\n\n  if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n      (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n    return !length;\n  }\n  forOwn(value, function() {\n    return (result = false);\n  });\n  return result;\n}\n\nmodule.exports = isEmpty;\n\n},{\"./forOwn\":194,\"./isFunction\":207}],205:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseIsEqual = require('../internals/baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent to each other. If a callback is provided it will be executed\n * to compare values. If the callback returns `undefined` comparisons will\n * be handled by the method instead. The callback is bound to `thisArg` and\n * invoked with two arguments; (a, b).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} a The value to compare.\n * @param {*} b The other value to compare.\n * @param {Function} [callback] The function to customize comparing values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'name': 'fred' };\n * var copy = { 'name': 'fred' };\n *\n * object == copy;\n * // => false\n *\n * _.isEqual(object, copy);\n * // => true\n *\n * var words = ['hello', 'goodbye'];\n * var otherWords = ['hi', 'goodbye'];\n *\n * _.isEqual(words, otherWords, function(a, b) {\n *   var reGreet = /^(?:hello|hi)$/i,\n *       aGreet = _.isString(a) && reGreet.test(a),\n *       bGreet = _.isString(b) && reGreet.test(b);\n *\n *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n * });\n * // => true\n */\nfunction isEqual(a, b, callback, thisArg) {\n  return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n}\n\nmodule.exports = isEqual;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/baseIsEqual\":150}],206:[function(require,module,exports){\n(function (global){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeIsFinite = global.isFinite,\n    nativeIsNaN = global.isNaN;\n\n/**\n * Checks if `value` is, or can be coerced to, a finite number.\n *\n * Note: This is not the same as native `isFinite` which will return true for\n * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n * @example\n *\n * _.isFinite(-101);\n * // => true\n *\n * _.isFinite('10');\n * // => true\n *\n * _.isFinite(true);\n * // => false\n *\n * _.isFinite('');\n * // => false\n *\n * _.isFinite(Infinity);\n * // => false\n */\nfunction isFinite(value) {\n  return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n}\n\nmodule.exports = isFinite;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],207:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is a function.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n */\nfunction isFunction(value) {\n  return typeof value == 'function';\n}\n\nmodule.exports = isFunction;\n\n},{}],208:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * Note: This is not the same as native `isNaN` which will return `true` for\n * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // `NaN` as a primitive is the only value that is not equal to itself\n  // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n\n},{\"./isNumber\":210}],209:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(undefined);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n\n},{}],210:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar numberClass = '[object Number]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a number.\n *\n * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(8.4 * 5);\n * // => true\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    value && typeof value == 'object' && toString.call(value) == numberClass || false;\n}\n\nmodule.exports = isNumber;\n\n},{}],211:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectTypes = require('../internals/objectTypes');\n\n/**\n * Checks if `value` is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // check if the value is the ECMAScript language type of Object\n  // http://es5.github.io/#x8\n  // and avoid a V8 bug\n  // http://code.google.com/p/v8/issues/detail?id=2291\n  return !!(value && objectTypes[typeof value]);\n}\n\nmodule.exports = isObject;\n\n},{\"../internals/objectTypes\":173}],212:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative'),\n    shimIsPlainObject = require('../internals/shimIsPlainObject');\n\n/** `Object#toString` result shortcuts */\nvar objectClass = '[object Object]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\n\n/**\n * Checks if `value` is an object created by the `Object` constructor.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * _.isPlainObject(new Shape);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n */\nvar isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n  if (!(value && toString.call(value) == objectClass)) {\n    return false;\n  }\n  var valueOf = value.valueOf,\n      objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n  return objProto\n    ? (value == objProto || getPrototypeOf(value) == objProto)\n    : shimIsPlainObject(value);\n};\n\nmodule.exports = isPlainObject;\n\n},{\"../internals/isNative\":167,\"../internals/shimIsPlainObject\":180}],213:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar regexpClass = '[object RegExp]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a regular expression.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n * @example\n *\n * _.isRegExp(/fred/);\n * // => true\n */\nfunction isRegExp(value) {\n  return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n}\n\nmodule.exports = isRegExp;\n\n},{}],214:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a string.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n * @example\n *\n * _.isString('fred');\n * // => true\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    value && typeof value == 'object' && toString.call(value) == stringClass || false;\n}\n\nmodule.exports = isString;\n\n},{}],215:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n */\nfunction isUndefined(value) {\n  return typeof value == 'undefined';\n}\n\nmodule.exports = isUndefined;\n\n},{}],216:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative'),\n    isObject = require('./isObject'),\n    shimKeys = require('../internals/shimKeys');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n/**\n * Creates an array composed of the own enumerable property names of an object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names.\n * @example\n *\n * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  if (!isObject(object)) {\n    return [];\n  }\n  return nativeKeys(object);\n};\n\nmodule.exports = keys;\n\n},{\"../internals/isNative\":167,\"../internals/shimKeys\":181,\"./isObject\":211}],217:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('./forOwn');\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through the callback.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n * @example\n *\n * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n *\n * var characters = {\n *   'fred': { 'name': 'fred', 'age': 40 },\n *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n * };\n *\n * // using \"_.pluck\" callback shorthand\n * _.mapValues(characters, 'age');\n * // => { 'fred': 40, 'pebbles': 1 }\n */\nfunction mapValues(object, callback, thisArg) {\n  var result = {};\n  callback = createCallback(callback, thisArg, 3);\n\n  forOwn(object, function(value, key, object) {\n    result[key] = callback(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n},{\"../functions/createCallback\":129,\"./forOwn\":194}],218:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseMerge = require('../internals/baseMerge'),\n    getArray = require('../internals/getArray'),\n    isObject = require('./isObject'),\n    releaseArray = require('../internals/releaseArray'),\n    slice = require('../internals/slice');\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * will overwrite property assignments of previous sources. If a callback is\n * provided it will be executed to produce the merged values of the destination\n * and source properties. If the callback returns `undefined` merging will\n * be handled by the method instead. The callback is bound to `thisArg` and\n * invoked with two arguments; (objectValue, sourceValue).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param {Function} [callback] The function to customize merging properties.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * var names = {\n *   'characters': [\n *     { 'name': 'barney' },\n *     { 'name': 'fred' }\n *   ]\n * };\n *\n * var ages = {\n *   'characters': [\n *     { 'age': 36 },\n *     { 'age': 40 }\n *   ]\n * };\n *\n * _.merge(names, ages);\n * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n *\n * var food = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var otherFood = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(food, otherFood, function(a, b) {\n *   return _.isArray(a) ? a.concat(b) : undefined;\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n */\nfunction merge(object) {\n  var args = arguments,\n      length = 2;\n\n  if (!isObject(object)) {\n    return object;\n  }\n  // allows working with `_.reduce` and `_.reduceRight` without using\n  // their `index` and `collection` arguments\n  if (typeof args[2] != 'number') {\n    length = args.length;\n  }\n  if (length > 3 && typeof args[length - 2] == 'function') {\n    var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n  } else if (length > 2 && typeof args[length - 1] == 'function') {\n    callback = args[--length];\n  }\n  var sources = slice(arguments, 1, length),\n      index = -1,\n      stackA = getArray(),\n      stackB = getArray();\n\n  while (++index < length) {\n    baseMerge(object, sources[index], callback, stackA, stackB);\n  }\n  releaseArray(stackA);\n  releaseArray(stackB);\n  return object;\n}\n\nmodule.exports = merge;\n\n},{\"../internals/baseCreateCallback\":145,\"../internals/baseMerge\":151,\"../internals/getArray\":163,\"../internals/releaseArray\":177,\"../internals/slice\":182,\"./isObject\":211}],219:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseFlatten = require('../internals/baseFlatten'),\n    createCallback = require('../functions/createCallback'),\n    forIn = require('./forIn');\n\n/**\n * Creates a shallow clone of `object` excluding the specified properties.\n * Property names may be specified as individual arguments or as arrays of\n * property names. If a callback is provided it will be executed for each\n * property of `object` omitting the properties the callback returns truey\n * for. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The source object.\n * @param {Function|...string|string[]} [callback] The properties to omit or the\n *  function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns an object without the omitted properties.\n * @example\n *\n * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n * // => { 'name': 'fred' }\n *\n * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n *   return typeof value == 'number';\n * });\n * // => { 'name': 'fred' }\n */\nfunction omit(object, callback, thisArg) {\n  var result = {};\n  if (typeof callback != 'function') {\n    var props = [];\n    forIn(object, function(value, key) {\n      props.push(key);\n    });\n    props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n      result[key] = object[key];\n    }\n  } else {\n    callback = createCallback(callback, thisArg, 3);\n    forIn(object, function(value, key, object) {\n      if (!callback(value, key, object)) {\n        result[key] = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = omit;\n\n},{\"../functions/createCallback\":129,\"../internals/baseDifference\":147,\"../internals/baseFlatten\":148,\"./forIn\":192}],220:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates a two dimensional array of an object's key-value pairs,\n * i.e. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n */\nfunction pairs(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n\n},{\"./keys\":216}],221:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    createCallback = require('../functions/createCallback'),\n    forIn = require('./forIn'),\n    isObject = require('./isObject');\n\n/**\n * Creates a shallow clone of `object` composed of the specified properties.\n * Property names may be specified as individual arguments or as arrays of\n * property names. If a callback is provided it will be executed for each\n * property of `object` picking the properties the callback returns truey\n * for. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The source object.\n * @param {Function|...string|string[]} [callback] The function called per\n *  iteration or property names to pick, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns an object composed of the picked properties.\n * @example\n *\n * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n * // => { 'name': 'fred' }\n *\n * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n *   return key.charAt(0) != '_';\n * });\n * // => { 'name': 'fred' }\n */\nfunction pick(object, callback, thisArg) {\n  var result = {};\n  if (typeof callback != 'function') {\n    var index = -1,\n        props = baseFlatten(arguments, true, false, 1),\n        length = isObject(object) ? props.length : 0;\n\n    while (++index < length) {\n      var key = props[index];\n      if (key in object) {\n        result[key] = object[key];\n      }\n    }\n  } else {\n    callback = createCallback(callback, thisArg, 3);\n    forIn(object, function(value, key, object) {\n      if (callback(value, key, object)) {\n        result[key] = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = pick;\n\n},{\"../functions/createCallback\":129,\"../internals/baseFlatten\":148,\"./forIn\":192,\"./isObject\":211}],222:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('../internals/baseCreate'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('../collections/forEach'),\n    forOwn = require('./forOwn'),\n    isArray = require('./isArray');\n\n/**\n * An alternative to `_.reduce` this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable properties through a callback, with each callback execution\n * potentially mutating the `accumulator` object. The callback is bound to\n * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n * Callbacks may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Array|Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n *   num *= num;\n *   if (num % 2) {\n *     return result.push(num) < 3;\n *   }\n * });\n * // => [1, 9, 25]\n *\n * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n *   result[key] = num * 3;\n * });\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n */\nfunction transform(object, callback, accumulator, thisArg) {\n  var isArr = isArray(object);\n  if (accumulator == null) {\n    if (isArr) {\n      accumulator = [];\n    } else {\n      var ctor = object && object.constructor,\n          proto = ctor && ctor.prototype;\n\n      accumulator = baseCreate(proto);\n    }\n  }\n  if (callback) {\n    callback = createCallback(callback, thisArg, 4);\n    (isArr ? forEach : forOwn)(object, function(value, index, object) {\n      return callback(accumulator, value, index, object);\n    });\n  }\n  return accumulator;\n}\n\nmodule.exports = transform;\n\n},{\"../collections/forEach\":104,\"../functions/createCallback\":129,\"../internals/baseCreate\":144,\"./forOwn\":194,\"./isArray\":200}],223:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates an array composed of the own enumerable property values of `object`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property values.\n * @example\n *\n * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n * // => [1, 2, 3] (property order is not guaranteed across environments)\n */\nfunction values(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = object[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = values;\n\n},{\"./keys\":216}],224:[function(require,module,exports){\n(function (global){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./internals/isNative');\n\n/** Used to detect functions containing a `this` reference */\nvar reThis = /\\bthis\\b/;\n\n/**\n * An object used to flag environments features.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n/**\n * Detect if functions can be decompiled by `Function#toString`\n * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n *\n * @memberOf _.support\n * @type boolean\n */\nsupport.funcDecomp = !isNative(global.WinRTError) && reThis.test(function() { return this; });\n\n/**\n * Detect if `Function#name` is supported (all but IE).\n *\n * @memberOf _.support\n * @type boolean\n */\nsupport.funcNames = typeof Function.name == 'string';\n\nmodule.exports = support;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./internals/isNative\":167}],225:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'constant': require('./utilities/constant'),\n  'createCallback': require('./functions/createCallback'),\n  'escape': require('./utilities/escape'),\n  'identity': require('./utilities/identity'),\n  'mixin': require('./utilities/mixin'),\n  'noConflict': require('./utilities/noConflict'),\n  'noop': require('./utilities/noop'),\n  'now': require('./utilities/now'),\n  'parseInt': require('./utilities/parseInt'),\n  'property': require('./utilities/property'),\n  'random': require('./utilities/random'),\n  'result': require('./utilities/result'),\n  'template': require('./utilities/template'),\n  'templateSettings': require('./utilities/templateSettings'),\n  'times': require('./utilities/times'),\n  'unescape': require('./utilities/unescape'),\n  'uniqueId': require('./utilities/uniqueId')\n};\n\n},{\"./functions/createCallback\":129,\"./utilities/constant\":226,\"./utilities/escape\":227,\"./utilities/identity\":228,\"./utilities/mixin\":229,\"./utilities/noConflict\":230,\"./utilities/noop\":231,\"./utilities/now\":232,\"./utilities/parseInt\":233,\"./utilities/property\":234,\"./utilities/random\":235,\"./utilities/result\":236,\"./utilities/template\":237,\"./utilities/templateSettings\":238,\"./utilities/times\":239,\"./utilities/unescape\":240,\"./utilities/uniqueId\":241}],226:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'name': 'fred' };\n * var getter = _.constant(object);\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n},{}],227:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar escapeHtmlChar = require('../internals/escapeHtmlChar'),\n    keys = require('../objects/keys'),\n    reUnescapedHtml = require('../internals/reUnescapedHtml');\n\n/**\n * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n * corresponding HTML entities.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} string The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('Fred, Wilma, & Pebbles');\n * // => 'Fred, Wilma, &amp; Pebbles'\n */\nfunction escape(string) {\n  return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n}\n\nmodule.exports = escape;\n\n},{\"../internals/escapeHtmlChar\":161,\"../internals/reUnescapedHtml\":176,\"../objects/keys\":216}],228:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'name': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n},{}],229:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    functions = require('../objects/functions'),\n    isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * Adds function properties of a source object to the destination object.\n * If `object` is a function methods will be added to its prototype as well.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {Function|Object} [object=lodash] object The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n * @example\n *\n * function capitalize(string) {\n *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n * }\n *\n * _.mixin({ 'capitalize': capitalize });\n * _.capitalize('fred');\n * // => 'Fred'\n *\n * _('fred').capitalize().value();\n * // => 'Fred'\n *\n * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n * _('fred').capitalize();\n * // => 'Fred'\n */\nfunction mixin(object, source, options) {\n  var chain = true,\n      methodNames = source && functions(source);\n\n  if (options === false) {\n    chain = false;\n  } else if (isObject(options) && 'chain' in options) {\n    chain = options.chain;\n  }\n  var ctor = object,\n      isFunc = isFunction(ctor);\n\n  forEach(methodNames, function(methodName) {\n    var func = object[methodName] = source[methodName];\n    if (isFunc) {\n      ctor.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            value = this.__wrapped__,\n            args = [value];\n\n        push.apply(args, arguments);\n        var result = func.apply(object, args);\n        if (chain || chainAll) {\n          if (value === result && isObject(result)) {\n            return this;\n          }\n          result = new ctor(result);\n          result.__chain__ = chainAll;\n        }\n        return result;\n      };\n    }\n  });\n}\n\nmodule.exports = mixin;\n\n},{\"../collections/forEach\":104,\"../objects/functions\":196,\"../objects/isFunction\":207,\"../objects/isObject\":211}],230:[function(require,module,exports){\n(function (global){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to restore the original `_` reference in `noConflict` */\nvar oldDash = global._;\n\n/**\n * Reverts the '_' variable to its previous value and returns a reference to\n * the `lodash` function.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @returns {Function} Returns the `lodash` function.\n * @example\n *\n * var lodash = _.noConflict();\n */\nfunction noConflict() {\n  global._ = oldDash;\n  return this;\n}\n\nmodule.exports = noConflict;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],231:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * A no-operation function.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @example\n *\n * var object = { 'name': 'fred' };\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // no operation performed\n}\n\nmodule.exports = noop;\n\n},{}],232:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative');\n\n/**\n * Gets the number of milliseconds that have elapsed since the Unix epoch\n * (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @example\n *\n * var stamp = _.now();\n * _.defer(function() { console.log(_.now() - stamp); });\n * // => logs the number of milliseconds it took for the deferred function to be called\n */\nvar now = isNative(now = Date.now) && now || function() {\n  return new Date().getTime();\n};\n\nmodule.exports = now;\n\n},{\"../internals/isNative\":167}],233:[function(require,module,exports){\n(function (global){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isString = require('../objects/isString');\n\n/** Used to detect and test whitespace */\nvar whitespace = (\n  // whitespace\n  ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n  // line terminators\n  '\\n\\r\\u2028\\u2029' +\n\n  // unicode category \"Zs\" space separators\n  '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n);\n\n/** Used to match leading whitespace and zeros to be removed */\nvar reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeParseInt = global.parseInt;\n\n/**\n * Converts the given value into an integer of the specified radix.\n * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n *\n * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n * implementations. See http://es5.github.io/#E.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} value The value to parse.\n * @param {number} [radix] The radix used to interpret the value to parse.\n * @returns {number} Returns the new integer value.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n */\nvar parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n  // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n  return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n};\n\nmodule.exports = parseInt;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../objects/isString\":214}],234:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates a \"_.pluck\" style function, which returns the `key` value of a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} key The name of the property to retrieve.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var characters = [\n *   { 'name': 'fred',   'age': 40 },\n *   { 'name': 'barney', 'age': 36 }\n * ];\n *\n * var getName = _.property('name');\n *\n * _.map(characters, getName);\n * // => ['barney', 'fred']\n *\n * _.sortBy(characters, getName);\n * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n */\nfunction property(key) {\n  return function(object) {\n    return object[key];\n  };\n}\n\nmodule.exports = property;\n\n},{}],235:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between `min` and `max` (inclusive). If only one\n * argument is provided a number between `0` and the given number will be\n * returned. If `floating` is truey or either `min` or `max` are floats a\n * floating-point number will be returned instead of an integer.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {number} [min=0] The minimum possible value.\n * @param {number} [max=1] The maximum possible value.\n * @param {boolean} [floating=false] Specify returning a floating-point number.\n * @returns {number} Returns a random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(min, max, floating) {\n  var noMin = min == null,\n      noMax = max == null;\n\n  if (floating == null) {\n    if (typeof min == 'boolean' && noMax) {\n      floating = min;\n      min = 1;\n    }\n    else if (!noMax && typeof max == 'boolean') {\n      floating = max;\n      noMax = true;\n    }\n  }\n  if (noMin && noMax) {\n    max = 1;\n  }\n  min = +min || 0;\n  if (noMax) {\n    max = min;\n    min = 0;\n  } else {\n    max = +max || 0;\n  }\n  if (floating || min % 1 || max % 1) {\n    var rand = nativeRandom();\n    return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n  }\n  return baseRandom(min, max);\n}\n\nmodule.exports = random;\n\n},{\"../internals/baseRandom\":152}],236:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Resolves the value of property `key` on `object`. If `key` is a function\n * it will be invoked with the `this` binding of `object` and its result returned,\n * else the property value is returned. If `object` is falsey then `undefined`\n * is returned.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {Object} object The object to inspect.\n * @param {string} key The name of the property to resolve.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = {\n *   'cheese': 'crumpets',\n *   'stuff': function() {\n *     return 'nonsense';\n *   }\n * };\n *\n * _.result(object, 'cheese');\n * // => 'crumpets'\n *\n * _.result(object, 'stuff');\n * // => 'nonsense'\n */\nfunction result(object, key) {\n  if (object) {\n    var value = object[key];\n    return isFunction(value) ? object[key]() : value;\n  }\n}\n\nmodule.exports = result;\n\n},{\"../objects/isFunction\":207}],237:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar defaults = require('../objects/defaults'),\n    escape = require('./escape'),\n    escapeStringChar = require('../internals/escapeStringChar'),\n    keys = require('../objects/keys'),\n    reInterpolate = require('../internals/reInterpolate'),\n    templateSettings = require('./templateSettings'),\n    values = require('../objects/values');\n\n/** Used to match empty string literals in compiled template source */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to match ES6 template delimiters\n * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals */\nvar reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n/**\n * A micro-templating method that handles arbitrary delimiters, preserves\n * whitespace, and correctly escapes quotes within interpolated code.\n *\n * Note: In the development build, `_.template` utilizes sourceURLs for easier\n * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n *\n * For more information on precompiling templates see:\n * http://lodash.com/custom-builds\n *\n * For more information on Chrome extension sandboxes see:\n * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} text The template text.\n * @param {Object} data The data object used to populate the text.\n * @param {Object} [options] The options object.\n * @param {RegExp} [options.escape] The \"escape\" delimiter.\n * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n * @param {Object} [options.imports] An object to import into the template as local variables.\n * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n * @param {string} [variable] The data object variable name.\n * @returns {Function|string} Returns a compiled function when no `data` object\n *  is given, else it returns the interpolated text.\n * @example\n *\n * // using the \"interpolate\" delimiter to create a compiled template\n * var compiled = _.template('hello <%= name %>');\n * compiled({ 'name': 'fred' });\n * // => 'hello fred'\n *\n * // using the \"escape\" delimiter to escape HTML in data property values\n * _.template('<b><%- value %></b>', { 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // using the \"evaluate\" delimiter to generate HTML\n * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n * _.template(list, { 'people': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n * _.template('hello ${ name }', { 'name': 'pebbles' });\n * // => 'hello pebbles'\n *\n * // using the internal `print` function in \"evaluate\" delimiters\n * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n * // => 'hello barney!'\n *\n * // using a custom template delimiters\n * _.templateSettings = {\n *   'interpolate': /{{([\\s\\S]+?)}}/g\n * };\n *\n * _.template('hello {{ name }}!', { 'name': 'mustache' });\n * // => 'hello mustache!'\n *\n * // using the `imports` option to import jQuery\n * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the `sourceURL` option to specify a custom sourceURL for the template\n * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n *\n * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n *   var __t, __p = '', __e = _.escape;\n *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n *   return __p;\n * }\n *\n * // using the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and a stack trace\n * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(text, data, options) {\n  // based on John Resig's `tmpl` implementation\n  // http://ejohn.org/blog/javascript-micro-templating/\n  // and Laura Doktorova's doT.js\n  // https://github.com/olado/doT\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n  text = String(text || '');\n\n  // avoid missing dependencies when `iteratorTemplate` is not defined\n  options = defaults({}, options, settings);\n\n  var imports = defaults({}, options.imports, settings.imports),\n      importsKeys = keys(imports),\n      importsValues = values(imports);\n\n  var isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // compile the regexp to match each delimiter\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // escape characters that cannot be included in string literals\n    source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // replace delimiters with snippets\n    if (escapeValue) {\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // the JS engine embedded in Adobe products requires returning the `match`\n    // string in order to produce the correct `offset` value\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // if `variable` is not specified, wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain\n  var variable = options.variable,\n      hasVariable = variable;\n\n  if (!hasVariable) {\n    variable = 'obj';\n    source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n  }\n  // cleanup code by stripping empty strings\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // frame code as the function body\n  source = 'function(' + variable + ') {\\n' +\n    (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n    \"var __t, __p = '', __e = _.escape\" +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  try {\n    var result = Function(importsKeys, 'return ' + source ).apply(undefined, importsValues);\n  } catch(e) {\n    e.source = source;\n    throw e;\n  }\n  if (data) {\n    return result(data);\n  }\n  // provide the compiled function's source by its `toString` method, in\n  // supported environments, or the `source` property as a convenience for\n  // inlining compiled templates during the build process\n  result.source = source;\n  return result;\n}\n\nmodule.exports = template;\n\n},{\"../internals/escapeStringChar\":162,\"../internals/reInterpolate\":175,\"../objects/defaults\":189,\"../objects/keys\":216,\"../objects/values\":223,\"./escape\":227,\"./templateSettings\":238}],238:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar escape = require('./escape'),\n    reInterpolate = require('../internals/reInterpolate');\n\n/**\n * By default, the template delimiters used by Lo-Dash are similar to those in\n * embedded Ruby (ERB). Change the following template settings to use alternative\n * delimiters.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar templateSettings = {\n\n  /**\n   * Used to detect `data` property values to be HTML-escaped.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'escape': /<%-([\\s\\S]+?)%>/g,\n\n  /**\n   * Used to detect code to be evaluated.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'evaluate': /<%([\\s\\S]+?)%>/g,\n\n  /**\n   * Used to detect `data` property values to inject.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'interpolate': reInterpolate,\n\n  /**\n   * Used to reference the data object in the template text.\n   *\n   * @memberOf _.templateSettings\n   * @type string\n   */\n  'variable': '',\n\n  /**\n   * Used to import variables into the compiled template.\n   *\n   * @memberOf _.templateSettings\n   * @type Object\n   */\n  'imports': {\n\n    /**\n     * A reference to the `lodash` function.\n     *\n     * @memberOf _.templateSettings.imports\n     * @type Function\n     */\n    '_': { 'escape': escape }\n  }\n};\n\nmodule.exports = templateSettings;\n\n},{\"../internals/reInterpolate\":175,\"./escape\":227}],239:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Executes the callback `n` times, returning an array of the results\n * of each callback execution. The callback is bound to `thisArg` and invoked\n * with one argument; (index).\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {number} n The number of times to execute the callback.\n * @param {Function} callback The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns an array of the results of each `callback` execution.\n * @example\n *\n * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n * // => [3, 6, 4]\n *\n * _.times(3, function(n) { mage.castSpell(n); });\n * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n *\n * _.times(3, function(n) { this.cast(n); }, mage);\n * // => also calls `mage.castSpell(n)` three times\n */\nfunction times(n, callback, thisArg) {\n  n = (n = +n) > -1 ? n : 0;\n  var index = -1,\n      result = Array(n);\n\n  callback = baseCreateCallback(callback, thisArg, 1);\n  while (++index < n) {\n    result[index] = callback(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n\n},{\"../internals/baseCreateCallback\":145}],240:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('../objects/keys'),\n    reEscapedHtml = require('../internals/reEscapedHtml'),\n    unescapeHtmlChar = require('../internals/unescapeHtmlChar');\n\n/**\n * The inverse of `_.escape` this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n * corresponding characters.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} string The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('Fred, Barney &amp; Pebbles');\n * // => 'Fred, Barney & Pebbles'\n */\nfunction unescape(string) {\n  return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n}\n\nmodule.exports = unescape;\n\n},{\"../internals/reEscapedHtml\":174,\"../internals/unescapeHtmlChar\":183,\"../objects/keys\":216}],241:[function(require,module,exports){\n/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to generate unique IDs */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} [prefix] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return String(prefix == null ? '' : prefix) + id;\n}\n\nmodule.exports = uniqueId;\n\n},{}],242:[function(require,module,exports){\n// In order to help people who were accidentally upgraded to this ES client,\n// throw an error when they try to instanciate the exported function.\n// previous \"elasticsearch\" module -> https://github.com/ncb000gt/node-es\nfunction es() {\n  throw new Error('Looks like you are expecting the previous \"elasticsearch\" module. ' +\n    'It is now the \"es\" module. To create a client with this module use ' +\n    '`new es.Client(params)`.');\n}\n\nes.Client = require('./lib/client');\nes.ConnectionPool = require('./lib/connection_pool');\nes.Transport = require('./lib/transport');\nes.errors = require('./lib/errors');\n\nmodule.exports = es;\n\n},{\"./lib/client\":247,\"./lib/connection_pool\":250,\"./lib/errors\":255,\"./lib/transport\":267}],243:[function(require,module,exports){\n/* jshint maxlen: false */\n\nvar ca = require('../client_action');\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [abortBenchmark](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.name - A benchmark name\n */\napi.abortBenchmark = ca({\n  url: {\n    fmt: '/_bench/abort/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [bulk](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Explicitely set the replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = function CatNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = function ClusterNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cluster.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {Boolean} params.filterMetadata - Don't return cluster state metadata (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    filterMetadata: {\n      type: 'boolean',\n      name: 'filter_metadata'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteByQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-delete-by-query.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the operation\n */\napi.deleteByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = function IndicesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [indices.analyze](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'string'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.filter - Clear filter caches\n * @param {Boolean} params.filterCache - Clear filter caches\n * @param {Boolean} params.filterKeys - A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)\n * @param {Boolean} params.id - Clear ID caches for parent/child\n * @param {Boolean} params.idCache - Clear ID caches for parent/child\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    filter: {\n      type: 'boolean'\n    },\n    filterCache: {\n      type: 'boolean',\n      name: 'filter_cache'\n    },\n    filterKeys: {\n      type: 'boolean',\n      name: 'filter_keys'\n    },\n    id: {\n      type: 'boolean'\n    },\n    idCache: {\n      type: 'boolean',\n      name: 'id_cache'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-delete-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to delete (supports wildcards); use `_all` to delete all document types in the specified indices.\n */\napi.indices.prototype.deleteMapping = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/_mapping',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.full - If set to true a new index writer is created and settings that have been changed related to the index writer will be refreshed. Note: if a full flush is required for a setting to take effect this will be part of the settings update process and it not required to be executed by the user. (This setting can be considered as internal)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    full: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.field - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=field%>',\n      req: {\n        field: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {Boolean} params.force - Force a merge operation to run, even if there is a single segment in the index (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    },\n    force: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` or omit to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreConflicts - Specify whether to ignore conflicts while updating the mapping (default: false)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    ignoreConflicts: {\n      type: 'boolean',\n      name: 'ignore_conflicts'\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-status.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.recovery - Return information about shard recovery\n * @param {Boolean} params.snapshot - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.status = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    recovery: {\n      type: 'boolean'\n    },\n    snapshot: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_status',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    source: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [listBenchmarks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String} params.type - The name of the document type\n */\napi.listBenchmarks = ca({\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bench',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bench',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_bench'\n    }\n  ]\n});\n\n/**\n * Perform a [mget](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mlt](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-more-like-this.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.boostTerms - The boost factor\n * @param {Number} params.maxDocFreq - The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored\n * @param {Number} params.maxQueryTerms - The maximum query terms to be included in the generated query\n * @param {Number} params.maxWordLength - The minimum length of the word: longer words will be ignored\n * @param {Number} params.minDocFreq - The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored\n * @param {Number} params.minTermFreq - The term frequency as percent: terms with lower occurence in the source document will be ignored\n * @param {Number} params.minWordLength - The minimum length of the word: shorter words will be ignored\n * @param {String, String[], Boolean} params.mltFields - Specific fields to perform the query against\n * @param {Number} params.percentTermsToMatch - How many terms have to match in order to consider the document a match (default: 0.3)\n * @param {String} params.routing - Specific routing value\n * @param {Number} params.searchFrom - The offset from which to return results\n * @param {String, String[], Boolean} params.searchIndices - A comma-separated list of indices to perform the query against (default: the index containing the document)\n * @param {String} params.searchQueryHint - The search query hint\n * @param {String} params.searchScroll - A scroll search request definition\n * @param {Number} params.searchSize - The number of documents to return (default: 10)\n * @param {String} params.searchSource - A specific search request definition (instead of using the request body)\n * @param {String} params.searchType - Specific search type (eg. `dfs_then_fetch`, `count`, etc)\n * @param {String, String[], Boolean} params.searchTypes - A comma-separated list of types to perform the query against (default: the same type as the document)\n * @param {String, String[], Boolean} params.stopWords - A list of stop words to be ignored\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.mlt = ca({\n  params: {\n    boostTerms: {\n      type: 'number',\n      name: 'boost_terms'\n    },\n    maxDocFreq: {\n      type: 'number',\n      name: 'max_doc_freq'\n    },\n    maxQueryTerms: {\n      type: 'number',\n      name: 'max_query_terms'\n    },\n    maxWordLength: {\n      type: 'number',\n      name: 'max_word_length'\n    },\n    minDocFreq: {\n      type: 'number',\n      name: 'min_doc_freq'\n    },\n    minTermFreq: {\n      type: 'number',\n      name: 'min_term_freq'\n    },\n    minWordLength: {\n      type: 'number',\n      name: 'min_word_length'\n    },\n    mltFields: {\n      type: 'list',\n      name: 'mlt_fields'\n    },\n    percentTermsToMatch: {\n      type: 'number',\n      name: 'percent_terms_to_match'\n    },\n    routing: {\n      type: 'string'\n    },\n    searchFrom: {\n      type: 'number',\n      name: 'search_from'\n    },\n    searchIndices: {\n      type: 'list',\n      name: 'search_indices'\n    },\n    searchQueryHint: {\n      type: 'string',\n      name: 'search_query_hint'\n    },\n    searchScroll: {\n      type: 'string',\n      name: 'search_scroll'\n    },\n    searchSize: {\n      type: 'number',\n      name: 'search_size'\n    },\n    searchSource: {\n      type: 'string',\n      name: 'search_source'\n    },\n    searchType: {\n      type: 'string',\n      name: 'search_type'\n    },\n    searchTypes: {\n      type: 'list',\n      name: 'search_types'\n    },\n    stopWords: {\n      type: 'list',\n      name: 'stop_words'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_mlt',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = function NodesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [nodes.hotThreads](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.shutdown](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-nodes-shutdown.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.delay - Set the delay for the operation (default: 1s)\n * @param {Boolean} params.exit - Exit the JVM as well (default: true)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you're connected to, leave empty to perform the operation on all nodes\n */\napi.nodes.prototype.shutdown = ca({\n  params: {\n    delay: {\n      type: 'time'\n    },\n    exit: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/nodes/<%=nodeId%>/_shutdown',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shutdown'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [nodes.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 100,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [scroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.indicesBoost - Comma-separated list of index boosts\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String} params.source - The URL-encoded request definition using the Query DSL (instead of using request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    indicesBoost: {\n      type: 'list',\n      name: 'indices_boost'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = function SnapshotNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [snapshot.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_create',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [suggest](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded request definition (instead of using request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvector](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.termvector = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvector',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: mvel)\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.x/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n},{\"../client_action\":248}],244:[function(require,module,exports){\n/* jshint maxlen: false */\n\nvar ca = require('../client_action');\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [abortBenchmark](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.name - A benchmark name\n */\napi.abortBenchmark = ca({\n  url: {\n    fmt: '/_bench/abort/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [bulk](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Explicitely set the replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = function CatNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = function ClusterNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cluster.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {Boolean} params.filterMetadata - Don't return cluster state metadata (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    filterMetadata: {\n      type: 'boolean',\n      name: 'filter_metadata'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteByQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-delete-by-query.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the operation\n */\napi.deleteByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = function IndicesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [indices.analyze](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'string'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.filter - Clear filter caches\n * @param {Boolean} params.filterCache - Clear filter caches\n * @param {Boolean} params.filterKeys - A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)\n * @param {Boolean} params.id - Clear ID caches for parent/child\n * @param {Boolean} params.idCache - Clear ID caches for parent/child\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    filter: {\n      type: 'boolean'\n    },\n    filterCache: {\n      type: 'boolean',\n      name: 'filter_cache'\n    },\n    filterKeys: {\n      type: 'boolean',\n      name: 'filter_keys'\n    },\n    id: {\n      type: 'boolean'\n    },\n    idCache: {\n      type: 'boolean',\n      name: 'id_cache'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-delete-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to delete (supports wildcards); use `_all` to delete all document types in the specified indices.\n */\napi.indices.prototype.deleteMapping = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/_mapping',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.full - If set to true a new index writer is created and settings that have been changed related to the index writer will be refreshed. Note: if a full flush is required for a setting to take effect this will be part of the settings update process and it not required to be executed by the user. (This setting can be considered as internal)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    full: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.field - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=field%>',\n      req: {\n        field: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String, String[], Boolean} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'list',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {Boolean} params.force - Force a merge operation to run, even if there is a single segment in the index (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    },\n    force: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` or omit to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreConflicts - Specify whether to ignore conflicts while updating the mapping (default: false)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    ignoreConflicts: {\n      type: 'boolean',\n      name: 'ignore_conflicts'\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-status.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.recovery - Return information about shard recovery\n * @param {Boolean} params.snapshot - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.status = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    recovery: {\n      type: 'boolean'\n    },\n    snapshot: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_status',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    source: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [listBenchmarks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String} params.type - The name of the document type\n */\napi.listBenchmarks = ca({\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bench',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bench',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_bench'\n    }\n  ]\n});\n\n/**\n * Perform a [mget](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mlt](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-more-like-this.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.boostTerms - The boost factor\n * @param {Number} params.maxDocFreq - The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored\n * @param {Number} params.maxQueryTerms - The maximum query terms to be included in the generated query\n * @param {Number} params.maxWordLength - The minimum length of the word: longer words will be ignored\n * @param {Number} params.minDocFreq - The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored\n * @param {Number} params.minTermFreq - The term frequency as percent: terms with lower occurence in the source document will be ignored\n * @param {Number} params.minWordLength - The minimum length of the word: shorter words will be ignored\n * @param {String, String[], Boolean} params.mltFields - Specific fields to perform the query against\n * @param {Number} params.percentTermsToMatch - How many terms have to match in order to consider the document a match (default: 0.3)\n * @param {String} params.routing - Specific routing value\n * @param {Number} params.searchFrom - The offset from which to return results\n * @param {String, String[], Boolean} params.searchIndices - A comma-separated list of indices to perform the query against (default: the index containing the document)\n * @param {String} params.searchQueryHint - The search query hint\n * @param {String} params.searchScroll - A scroll search request definition\n * @param {Number} params.searchSize - The number of documents to return (default: 10)\n * @param {String} params.searchSource - A specific search request definition (instead of using the request body)\n * @param {String} params.searchType - Specific search type (eg. `dfs_then_fetch`, `count`, etc)\n * @param {String, String[], Boolean} params.searchTypes - A comma-separated list of types to perform the query against (default: the same type as the document)\n * @param {String, String[], Boolean} params.stopWords - A list of stop words to be ignored\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.mlt = ca({\n  params: {\n    boostTerms: {\n      type: 'number',\n      name: 'boost_terms'\n    },\n    maxDocFreq: {\n      type: 'number',\n      name: 'max_doc_freq'\n    },\n    maxQueryTerms: {\n      type: 'number',\n      name: 'max_query_terms'\n    },\n    maxWordLength: {\n      type: 'number',\n      name: 'max_word_length'\n    },\n    minDocFreq: {\n      type: 'number',\n      name: 'min_doc_freq'\n    },\n    minTermFreq: {\n      type: 'number',\n      name: 'min_term_freq'\n    },\n    minWordLength: {\n      type: 'number',\n      name: 'min_word_length'\n    },\n    mltFields: {\n      type: 'list',\n      name: 'mlt_fields'\n    },\n    percentTermsToMatch: {\n      type: 'number',\n      name: 'percent_terms_to_match'\n    },\n    routing: {\n      type: 'string'\n    },\n    searchFrom: {\n      type: 'number',\n      name: 'search_from'\n    },\n    searchIndices: {\n      type: 'list',\n      name: 'search_indices'\n    },\n    searchQueryHint: {\n      type: 'string',\n      name: 'search_query_hint'\n    },\n    searchScroll: {\n      type: 'string',\n      name: 'search_scroll'\n    },\n    searchSize: {\n      type: 'number',\n      name: 'search_size'\n    },\n    searchSource: {\n      type: 'string',\n      name: 'search_source'\n    },\n    searchType: {\n      type: 'string',\n      name: 'search_type'\n    },\n    searchTypes: {\n      type: 'list',\n      name: 'search_types'\n    },\n    stopWords: {\n      type: 'list',\n      name: 'stop_words'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_mlt',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = function NodesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [nodes.hotThreads](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.shutdown](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-nodes-shutdown.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.delay - Set the delay for the operation (default: 1s)\n * @param {Boolean} params.exit - Exit the JVM as well (default: true)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you're connected to, leave empty to perform the operation on all nodes\n */\napi.nodes.prototype.shutdown = ca({\n  params: {\n    delay: {\n      type: 'time'\n    },\n    exit: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/nodes/<%=nodeId%>/_shutdown',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shutdown'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [nodes.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 100,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [scroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.indicesBoost - Comma-separated list of index boosts\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String} params.source - The URL-encoded request definition using the Query DSL (instead of using request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    indicesBoost: {\n      type: 'list',\n      name: 'indices_boost'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = function SnapshotNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [snapshot.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_create',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [suggest](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded request definition (instead of using request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvector](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document.\n */\napi.termvector = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvector',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: mvel)\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.3/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n},{\"../client_action\":248}],245:[function(require,module,exports){\n/* jshint maxlen: false */\n\nvar ca = require('../client_action');\nvar api = module.exports = {};\n\napi._namespaces = ['cat', 'cluster', 'indices', 'nodes', 'snapshot'];\n\n/**\n * Perform a [bulk](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-bulk.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Explicitely set the replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.type - Default document type for items which don't provide one\n * @param {String} params.index - Default index for items which don't provide one\n */\napi.bulk = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    type: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_bulk',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_bulk'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\napi.cat = function CatNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.cat.prototype.aliases = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.allocation](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-allocation.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information\n */\napi.cat.prototype.allocation = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/allocation/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/allocation'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.count = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/count/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/count'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.fielddata](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-fielddata.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return the fielddata size\n */\napi.cat.prototype.fielddata = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fields: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/fielddata/<%=fields%>',\n      req: {\n        fields: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/fielddata'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} [params.ts=true] - Set to false to disable timestamping\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.health = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    ts: {\n      type: 'boolean',\n      'default': true\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/health'\n  }\n});\n\n/**\n * Perform a [cat.help](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.help - Return help information\n */\napi.cat.prototype.help = ca({\n  params: {\n    help: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat'\n  }\n});\n\n/**\n * Perform a [cat.indices](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-indices.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.pri - Set to true to return stats only for primary shards\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.indices = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    pri: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/indices/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/indices'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.master](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-master.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.master = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/master'\n  }\n});\n\n/**\n * Perform a [cat.nodes](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-nodes.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.nodes = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/nodes'\n  }\n});\n\n/**\n * Perform a [cat.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-pending-tasks.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cat.plugins](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-plugins.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n */\napi.cat.prototype.plugins = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  url: {\n    fmt: '/_cat/plugins'\n  }\n});\n\n/**\n * Perform a [cat.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.bytes - The unit in which to display byte values\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.recovery = ca({\n  params: {\n    bytes: {\n      type: 'enum',\n      options: [\n        'b',\n        'k',\n        'm',\n        'g'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/recovery/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.shards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cat-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to limit the returned information\n */\napi.cat.prototype.shards = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cat/shards/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cat/shards'\n    }\n  ]\n});\n\n/**\n * Perform a [cat.threadPool](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-thread-pool.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String, String[], Boolean} params.h - Comma-separated list of column names to display\n * @param {Boolean} params.help - Return help information\n * @param {Boolean} params.v - Verbose mode. Display column headers\n * @param {Boolean} params.fullId - Enables displaying the complete node ids\n */\napi.cat.prototype.threadPool = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    h: {\n      type: 'list'\n    },\n    help: {\n      type: 'boolean',\n      'default': false\n    },\n    v: {\n      type: 'boolean',\n      'default': false\n    },\n    fullId: {\n      type: 'boolean',\n      'default': false,\n      name: 'full_id'\n    }\n  },\n  url: {\n    fmt: '/_cat/thread_pool'\n  }\n});\n\n/**\n * Perform a [clearScroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.scrollId - A comma-separated list of scroll IDs to clear\n */\napi.clearScroll = ca({\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  method: 'DELETE'\n});\n\napi.cluster = function ClusterNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [cluster.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.getSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  }\n});\n\n/**\n * Perform a [cluster.health](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-health.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.level=cluster] - Specify the level of detail for returned information\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.waitForActiveShards - Wait until the specified number of shards is active\n * @param {String} params.waitForNodes - Wait until the specified number of nodes is available\n * @param {Number} params.waitForRelocatingShards - Wait until the specified number of relocating shards is finished\n * @param {String} params.waitForStatus - Wait until cluster is in a specific state\n * @param {String} params.index - Limit the information returned to a specific index\n */\napi.cluster.prototype.health = ca({\n  params: {\n    level: {\n      type: 'enum',\n      'default': 'cluster',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    waitForActiveShards: {\n      type: 'number',\n      name: 'wait_for_active_shards'\n    },\n    waitForNodes: {\n      type: 'string',\n      name: 'wait_for_nodes'\n    },\n    waitForRelocatingShards: {\n      type: 'number',\n      name: 'wait_for_relocating_shards'\n    },\n    waitForStatus: {\n      type: 'enum',\n      'default': null,\n      options: [\n        'green',\n        'yellow',\n        'red'\n      ],\n      name: 'wait_for_status'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/health/<%=index%>',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/health'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.pendingTasks](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-pending.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.cluster.prototype.pendingTasks = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_cluster/pending_tasks'\n  }\n});\n\n/**\n * Perform a [cluster.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n */\napi.cluster.prototype.putSettings = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_cluster/settings'\n  },\n  method: 'PUT'\n});\n\n/**\n * Perform a [cluster.reroute](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-reroute.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.dryRun - Simulate the operation only and return the resulting state\n * @param {Boolean} params.explain - Return an explanation of why the commands can or cannot be executed\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics. Defaults to all but metadata\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n */\napi.cluster.prototype.reroute = ca({\n  params: {\n    dryRun: {\n      type: 'boolean',\n      name: 'dry_run'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    metric: {\n      type: 'list',\n      options: [\n        '_all',\n        'blocks',\n        'metadata',\n        'nodes',\n        'routing_table',\n        'master_node',\n        'version'\n      ]\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_cluster/reroute'\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [cluster.state](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-state.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n */\napi.cluster.prototype.state = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/state/<%=metric%>/<%=index%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        },\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'blocks',\n            'metadata',\n            'nodes',\n            'routing_table',\n            'master_node',\n            'version'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/state'\n    }\n  ]\n});\n\n/**\n * Perform a [cluster.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.cluster.prototype.stats = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/stats/nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cluster/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [count](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-count.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.count = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_count',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_count'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [countPercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateIndex - The index to count percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to count percolate document into. Defaults to type.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being count percolated.\n * @param {String} params.type - The type of the document being count percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.countPercolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate/count',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-delete.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} params.parent - ID of parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi['delete'] = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteByQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-delete-by-query.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {String} params.consistency - Specific write consistency setting for the operation\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the operation\n */\napi.deleteByQuery = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.deleteScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [deleteTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.deleteTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.exists = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [explain](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-explain.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)\n * @param {String} params.analyzer - The analyzer for the query string query\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The default field for query string query (default: _all)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.explain = ca({\n  params: {\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    analyzer: {\n      type: 'string'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    fields: {\n      type: 'list'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_explain',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.get = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.getScript = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getSource](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.parent - The ID of the parent document\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String} params.routing - Specific routing value\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document; use `_all` to fetch the first document matching the ID across all types\n */\napi.getSource = ca({\n  params: {\n    parent: {\n      type: 'string'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    routing: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_source',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [getTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.getTemplate = ca({\n  params: {\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [index](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.index = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    routing: {\n      type: 'string'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\napi.indices = function IndicesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [indices.analyze](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-analyze.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The name of the analyzer to use\n * @param {String, String[], Boolean} params.charFilters - A comma-separated list of character filters to use for the analysis\n * @param {String} params.field - Use the analyzer configured for this field (instead of passing the analyzer name)\n * @param {String, String[], Boolean} params.filters - A comma-separated list of filters to use for the analysis\n * @param {String} params.index - The name of the index to scope the operation\n * @param {Boolean} params.preferLocal - With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)\n * @param {String} params.text - The text on which the analysis should be performed (when request body is not used)\n * @param {String} params.tokenizer - The name of the tokenizer to use for the analysis\n * @param {String} [params.format=detailed] - Format of the output\n */\napi.indices.prototype.analyze = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    charFilters: {\n      type: 'list',\n      name: 'char_filters'\n    },\n    field: {\n      type: 'string'\n    },\n    filters: {\n      type: 'list'\n    },\n    index: {\n      type: 'string'\n    },\n    preferLocal: {\n      type: 'boolean',\n      name: 'prefer_local'\n    },\n    text: {\n      type: 'string'\n    },\n    tokenizer: {\n      type: 'string'\n    },\n    format: {\n      type: 'enum',\n      'default': 'detailed',\n      options: [\n        'detailed',\n        'text'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_analyze',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_analyze'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.clearCache](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-clearcache.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.fieldData - Clear field data\n * @param {Boolean} params.fielddata - Clear field data\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to clear when using the `field_data` parameter (default: all)\n * @param {Boolean} params.filter - Clear filter caches\n * @param {Boolean} params.filterCache - Clear filter caches\n * @param {Boolean} params.filterKeys - A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)\n * @param {Boolean} params.id - Clear ID caches for parent/child\n * @param {Boolean} params.idCache - Clear ID caches for parent/child\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index name to limit the operation\n * @param {Boolean} params.recycler - Clear the recycler cache\n * @param {Boolean} params.queryCache - Clear query cache\n */\napi.indices.prototype.clearCache = ca({\n  params: {\n    fieldData: {\n      type: 'boolean',\n      name: 'field_data'\n    },\n    fielddata: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    filter: {\n      type: 'boolean'\n    },\n    filterCache: {\n      type: 'boolean',\n      name: 'filter_cache'\n    },\n    filterKeys: {\n      type: 'boolean',\n      name: 'filter_keys'\n    },\n    id: {\n      type: 'boolean'\n    },\n    idCache: {\n      type: 'boolean',\n      name: 'id_cache'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    index: {\n      type: 'list'\n    },\n    recycler: {\n      type: 'boolean'\n    },\n    queryCache: {\n      type: 'boolean',\n      name: 'query_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_cache/clear',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_cache/clear'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.close](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.close = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_close',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-create-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.create = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-delete-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices\n */\napi.indices.prototype['delete'] = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.name - A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.\n */\napi.indices.prototype.deleteAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_alias/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-delete-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names (supports wildcards); use `_all` for all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to delete (supports wildcards); use `_all` to delete all document types in the specified indices.\n */\napi.indices.prototype.deleteMapping = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/_mapping',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.deleteTemplate = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.deleteWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.name - A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to delete warmers from (supports wildcards); use `_all` to perform the operation on all indices.\n */\napi.indices.prototype.deleteWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    name: {\n      type: 'list'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_warmer/<%=name%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      name: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [indices.exists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to check\n */\napi.indices.prototype.exists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>',\n    req: {\n      index: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.existsAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ],\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.existsTemplate = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.existsType](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-types-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` to check the types across all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to check\n */\napi.indices.prototype.existsType = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>',\n    req: {\n      index: {\n        type: 'list'\n      },\n      type: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'HEAD'\n});\n\n/**\n * Perform a [indices.flush](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-flush.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.force - Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)\n * @param {Boolean} params.full - If set to true a new index writer is created and settings that have been changed related to the index writer will be refreshed. Note: if a full flush is required for a setting to take effect this will be part of the settings update process and it not required to be executed by the user. (This setting can be considered as internal)\n * @param {Boolean} params.waitIfOngoing - If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is false and will cause an exception to be thrown on the shard level if another flush operation is already running.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string for all indices\n */\napi.indices.prototype.flush = ca({\n  params: {\n    force: {\n      type: 'boolean'\n    },\n    full: {\n      type: 'boolean'\n    },\n    waitIfOngoing: {\n      type: 'boolean',\n      name: 'wait_if_ongoing'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_flush',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_flush'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-get-index.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Ignore unavailable indexes (default: false)\n * @param {Boolean} params.allowNoIndices - Ignore if a wildcard expression resolves to no concrete indices (default: false)\n * @param {String} [params.expandWildcards=open] - Whether wildcard expressions should get expanded to open or closed indices (default: open)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.feature - A comma-separated list of features\n */\napi.indices.prototype.get = ca({\n  params: {\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=feature%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        feature: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to return\n */\napi.indices.prototype.getAlias = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_alias',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_alias'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to filter aliases\n * @param {String, String[], Boolean} params.name - A comma-separated list of alias names to filter\n */\napi.indices.prototype.getAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_aliases/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_aliases',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_aliases'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getFieldMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-get-field-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.includeDefaults - Whether the default mapping values should be returned as well\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n * @param {String, String[], Boolean} params.field - A comma-separated list of fields\n */\napi.indices.prototype.getFieldMapping = ca({\n  params: {\n    includeDefaults: {\n      type: 'boolean',\n      name: 'include_defaults'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping/field/<%=field%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>/field/<%=field%>',\n      req: {\n        type: {\n          type: 'list'\n        },\n        field: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/field/<%=field%>',\n      req: {\n        field: {\n          type: 'list'\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-get-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types\n */\napi.indices.prototype.getMapping = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mapping',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-get-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open,closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the settings that should be included\n */\napi.indices.prototype.getSettings = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': [\n        'open',\n        'closed'\n      ],\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.getTemplate = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_template/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_template'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getUpgrade](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.getUpgrade = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.getWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices\n * @param {String, String[], Boolean} params.name - The name of the warmer (supports wildcards); leave empty to get all warmers\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.getWarmer = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.open](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-open-close.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=closed] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n */\napi.indices.prototype.open = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'closed',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/_open',\n    req: {\n      index: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.optimize](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-optimize.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flush - Specify whether the index should be flushed after performing the operation (default: true)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.maxNumSegments - The number of segments the index should be merged into (default: dynamic)\n * @param {Boolean} params.onlyExpungeDeletes - Specify whether the operation should only expunge deleted documents\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.waitForMerge - Specify whether the request should block until the merge process is finished (default: true)\n * @param {Boolean} params.force - Force a merge operation to run, even if there is a single segment in the index (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.optimize = ca({\n  params: {\n    flush: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    maxNumSegments: {\n      type: 'number',\n      name: 'max_num_segments'\n    },\n    onlyExpungeDeletes: {\n      type: 'boolean',\n      name: 'only_expunge_deletes'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    waitForMerge: {\n      type: 'boolean',\n      name: 'wait_for_merge'\n    },\n    force: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_optimize',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_optimize'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.putAlias](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Explicit timestamp for the document\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the alias should point to (supports wildcards); use `_all` or omit to perform the operation on all indices.\n * @param {String} params.name - The name of the alias to be created or updated\n */\napi.indices.prototype.putAlias = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_alias/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_alias/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putMapping](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-put-mapping.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreConflicts - Specify whether to ignore conflicts while updating the mapping (default: false)\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.\n * @param {String} params.type - The name of the document type\n */\napi.indices.prototype.putMapping = ca({\n  params: {\n    ignoreConflicts: {\n      type: 'boolean',\n      name: 'ignore_conflicts'\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_mapping/<%=type%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mapping/<%=type%>',\n      req: {\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putSettings](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-update-settings.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.putSettings = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_settings',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_settings'\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-templates.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.order - The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)\n * @param {Boolean} params.create - Whether the index template should only be added if new or can also replace an existing one\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {String} params.name - The name of the template\n */\napi.indices.prototype.putTemplate = ca({\n  params: {\n    order: {\n      type: 'number'\n    },\n    create: {\n      type: 'boolean',\n      'default': false\n    },\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    }\n  },\n  url: {\n    fmt: '/_template/<%=name%>',\n    req: {\n      name: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.putWarmer](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-warmers.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to register the warmer for; use `_all` or omit to perform the operation on all indices\n * @param {String} params.name - The name of the warmer\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types\n */\napi.indices.prototype.putWarmer = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_warmer/<%=name%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        name: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_warmer/<%=name%>',\n      req: {\n        name: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [indices.recovery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-recovery.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.detailed - Whether to display detailed information about shard recovery\n * @param {Boolean} params.activeOnly - Display only those recoveries that are currently on-going\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.recovery = ca({\n  params: {\n    detailed: {\n      type: 'boolean',\n      'default': false\n    },\n    activeOnly: {\n      type: 'boolean',\n      'default': false,\n      name: 'active_only'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_recovery',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_recovery'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.refresh](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-refresh.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.force - Force a refresh even if not required\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.refresh = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    force: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_refresh',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_refresh'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.segments](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-segments.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.segments = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_segments',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_segments'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=indices] - Return stats aggregated at cluster, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.metric - Limit the information returned the specific metrics.\n */\napi.indices.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'list'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'indices',\n      options: [\n        'cluster',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_stats/<%=metric%>',\n      req: {\n        index: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_stats',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_stats'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-status.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {Boolean} params.recovery - Return information about shard recovery\n * @param {Boolean} params.snapshot - TODO: ?\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.status = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    recovery: {\n      type: 'boolean'\n    },\n    snapshot: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_status',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [indices.updateAliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/indices-aliases.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.timeout - Request timeout\n * @param {Date, Number} params.masterTimeout - Specify timeout for connection to master\n */\napi.indices.prototype.updateAliases = ca({\n  params: {\n    timeout: {\n      type: 'time'\n    },\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_aliases'\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.upgrade](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-upgrade.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.waitForCompletion - Specify whether the request should block until the all segments are upgraded (default: true)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices\n */\napi.indices.prototype.upgrade = ca({\n  params: {\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      name: 'wait_for_completion'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_upgrade',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_upgrade'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [indices.validateQuery](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-validate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.explain - Return detailed information about the error\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Anything} params.operationThreading - TODO: ?\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types\n */\napi.indices.prototype.validateQuery = ca({\n  params: {\n    explain: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    operationThreading: {\n      name: 'operation_threading'\n    },\n    source: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_validate/query',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_validate/query'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [info](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.info = ca({\n  url: {\n    fmt: '/'\n  }\n});\n\n/**\n * Perform a [mget](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-multi-get.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.realtime - Specify whether to perform the operation in realtime or search mode\n * @param {Boolean} params.refresh - Refresh the shard containing the document before performing the operation\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.mget = ca({\n  params: {\n    fields: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    realtime: {\n      type: 'boolean'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mget',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mget'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mlt](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-more-like-this.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Number} params.boostTerms - The boost factor\n * @param {Number} params.maxDocFreq - The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored\n * @param {Number} params.maxQueryTerms - The maximum query terms to be included in the generated query\n * @param {Number} params.maxWordLength - The minimum length of the word: longer words will be ignored\n * @param {Number} params.minDocFreq - The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored\n * @param {Number} params.minTermFreq - The term frequency as percent: terms with lower occurence in the source document will be ignored\n * @param {Number} params.minWordLength - The minimum length of the word: shorter words will be ignored\n * @param {String, String[], Boolean} params.mltFields - Specific fields to perform the query against\n * @param {Number} params.percentTermsToMatch - How many terms have to match in order to consider the document a match (default: 0.3)\n * @param {String} params.routing - Specific routing value\n * @param {Number} params.searchFrom - The offset from which to return results\n * @param {String, String[], Boolean} params.searchIndices - A comma-separated list of indices to perform the query against (default: the index containing the document)\n * @param {String} params.searchScroll - A scroll search request definition\n * @param {Number} params.searchSize - The number of documents to return (default: 10)\n * @param {String} params.searchSource - A specific search request definition (instead of using the request body)\n * @param {String} params.searchType - Specific search type (eg. `dfs_then_fetch`, `count`, etc)\n * @param {String, String[], Boolean} params.searchTypes - A comma-separated list of types to perform the query against (default: the same type as the document)\n * @param {String, String[], Boolean} params.stopWords - A list of stop words to be ignored\n * @param {String} params.id - The document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document (use `_all` to fetch the first document matching the ID across all types)\n */\napi.mlt = ca({\n  params: {\n    boostTerms: {\n      type: 'number',\n      name: 'boost_terms'\n    },\n    maxDocFreq: {\n      type: 'number',\n      name: 'max_doc_freq'\n    },\n    maxQueryTerms: {\n      type: 'number',\n      name: 'max_query_terms'\n    },\n    maxWordLength: {\n      type: 'number',\n      name: 'max_word_length'\n    },\n    minDocFreq: {\n      type: 'number',\n      name: 'min_doc_freq'\n    },\n    minTermFreq: {\n      type: 'number',\n      name: 'min_term_freq'\n    },\n    minWordLength: {\n      type: 'number',\n      name: 'min_word_length'\n    },\n    mltFields: {\n      type: 'list',\n      name: 'mlt_fields'\n    },\n    percentTermsToMatch: {\n      type: 'number',\n      name: 'percent_terms_to_match'\n    },\n    routing: {\n      type: 'string'\n    },\n    searchFrom: {\n      type: 'number',\n      name: 'search_from'\n    },\n    searchIndices: {\n      type: 'list',\n      name: 'search_indices'\n    },\n    searchScroll: {\n      type: 'string',\n      name: 'search_scroll'\n    },\n    searchSize: {\n      type: 'number',\n      name: 'search_size'\n    },\n    searchSource: {\n      type: 'string',\n      name: 'search_source'\n    },\n    searchType: {\n      type: 'string',\n      name: 'search_type'\n    },\n    searchTypes: {\n      type: 'list',\n      name: 'search_types'\n    },\n    stopWords: {\n      type: 'list',\n      name: 'stop_words'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_mlt',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [mpercolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The index of the document being count percolated to use as default\n * @param {String} params.type - The type of the document being percolated to use as default.\n */\napi.mpercolate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mpercolate',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mpercolate'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [msearch](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-multi-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to use as default\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to use as default\n */\napi.msearch = ca({\n  params: {\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_msearch',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_msearch'\n    }\n  ],\n  needBody: true,\n  bulkBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [mtermvectors](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-multi-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.ids - A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.routing - Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.parent - Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\".\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n */\napi.mtermvectors = ca({\n  params: {\n    ids: {\n      type: 'list',\n      required: false\n    },\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_mtermvectors',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_mtermvectors'\n    }\n  ],\n  method: 'POST'\n});\n\napi.nodes = function NodesNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [nodes.hotThreads](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-nodes-hot-threads.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.interval - The interval for the second sampling of threads\n * @param {Number} params.snapshots - Number of samples of thread stacktrace (default: 10)\n * @param {Number} params.threads - Specify the number of threads to provide information for (default: 3)\n * @param {String} params.type - The type to sample (default: cpu)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.hotThreads = ca({\n  params: {\n    interval: {\n      type: 'time'\n    },\n    snapshots: {\n      type: 'number'\n    },\n    threads: {\n      type: 'number'\n    },\n    type: {\n      type: 'enum',\n      options: [\n        'cpu',\n        'wait',\n        'block'\n      ]\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/hotthreads',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/hotthreads'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.info](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-nodes-info.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.flatSettings - Return settings in flat format (default: false)\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n * @param {String, String[], Boolean} params.metric - A comma-separated list of metrics you wish returned. Leave empty to return all.\n */\napi.nodes.prototype.info = ca({\n  params: {\n    flatSettings: {\n      type: 'boolean',\n      name: 'flat_settings'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            'settings',\n            'os',\n            'process',\n            'jvm',\n            'thread_pool',\n            'network',\n            'transport',\n            'http',\n            'plugins'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes'\n    }\n  ]\n});\n\n/**\n * Perform a [nodes.shutdown](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-nodes-shutdown.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.delay - Set the delay for the operation (default: 1s)\n * @param {Boolean} params.exit - Exit the JVM as well (default: true)\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you're connected to, leave empty to perform the operation on all nodes\n */\napi.nodes.prototype.shutdown = ca({\n  params: {\n    delay: {\n      type: 'time'\n    },\n    exit: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_cluster/nodes/<%=nodeId%>/_shutdown',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_shutdown'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [nodes.stats](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/cluster-nodes-stats.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.completionFields - A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields for `fielddata` index metric (supports wildcards)\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)\n * @param {Boolean} params.groups - A comma-separated list of search groups for `search` index metric\n * @param {Boolean} params.human - Whether to return time and byte values in human-readable format.\n * @param {String} [params.level=node] - Return indices stats aggregated at node, index or shard level\n * @param {String, String[], Boolean} params.types - A comma-separated list of document types for the `indexing` index metric\n * @param {String, String[], Boolean} params.metric - Limit the information returned to the specified metrics\n * @param {String, String[], Boolean} params.indexMetric - Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.\n * @param {String, String[], Boolean} params.nodeId - A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes\n */\napi.nodes.prototype.stats = ca({\n  params: {\n    completionFields: {\n      type: 'list',\n      name: 'completion_fields'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    fields: {\n      type: 'list'\n    },\n    groups: {\n      type: 'boolean'\n    },\n    human: {\n      type: 'boolean',\n      'default': false\n    },\n    level: {\n      type: 'enum',\n      'default': 'node',\n      options: [\n        'node',\n        'indices',\n        'shards'\n      ]\n    },\n    types: {\n      type: 'list'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats/<%=metric%>',\n      req: {\n        nodeId: {\n          type: 'list'\n        },\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>/<%=indexMetric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        },\n        indexMetric: {\n          type: 'list',\n          options: [\n            '_all',\n            'completion',\n            'docs',\n            'fielddata',\n            'filter_cache',\n            'flush',\n            'get',\n            'id_cache',\n            'indexing',\n            'merge',\n            'percolate',\n            'query_cache',\n            'refresh',\n            'search',\n            'segments',\n            'store',\n            'warmer',\n            'suggest'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/<%=nodeId%>/stats',\n      req: {\n        nodeId: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats/<%=metric%>',\n      req: {\n        metric: {\n          type: 'list',\n          options: [\n            '_all',\n            'breaker',\n            'fs',\n            'http',\n            'indices',\n            'jvm',\n            'network',\n            'os',\n            'process',\n            'thread_pool',\n            'transport'\n          ]\n        }\n      }\n    },\n    {\n      fmt: '/_nodes/stats'\n    }\n  ]\n});\n\n/**\n * Perform a [percolate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-percolate.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.percolateFormat - Return an array of matching query IDs instead of objects\n * @param {String} params.percolateIndex - The index to percolate the document into. Defaults to index.\n * @param {String} params.percolateType - The type to percolate document into. Defaults to type.\n * @param {String} params.percolateRouting - The routing value to use when percolating the existing document.\n * @param {String} params.percolatePreference - Which shard to prefer when executing the percolate request.\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.index - The index of the document being percolated.\n * @param {String} params.type - The type of the document being percolated.\n * @param {String} params.id - Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.\n */\napi.percolate = ca({\n  params: {\n    routing: {\n      type: 'list'\n    },\n    preference: {\n      type: 'string'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    percolateFormat: {\n      type: 'enum',\n      options: [\n        'ids'\n      ],\n      name: 'percolate_format'\n    },\n    percolateIndex: {\n      type: 'string',\n      name: 'percolate_index'\n    },\n    percolateType: {\n      type: 'string',\n      name: 'percolate_type'\n    },\n    percolateRouting: {\n      type: 'string',\n      name: 'percolate_routing'\n    },\n    percolatePreference: {\n      type: 'string',\n      name: 'percolate_preference'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_percolate',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [ping](http://www.elasticsearch.org/guide/) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n */\napi.ping = ca({\n  url: {\n    fmt: '/'\n  },\n  requestTimeout: 100,\n  method: 'HEAD'\n});\n\n/**\n * Perform a [putScript](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-scripting.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Script ID\n * @param {String} params.lang - Script language\n */\napi.putScript = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_scripts/<%=lang%>/<%=id%>',\n    req: {\n      lang: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [putTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} [params.opType=index] - Explicit operation type\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Template ID\n */\napi.putTemplate = ca({\n  params: {\n    opType: {\n      type: 'enum',\n      'default': 'index',\n      options: [\n        'index',\n        'create'\n      ],\n      name: 'op_type'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'external',\n        'external_gte',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/_search/template/<%=id%>',\n    req: {\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'PUT'\n});\n\n/**\n * Perform a [scroll](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-request-scroll.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.scrollId - The scroll ID\n */\napi.scroll = ca({\n  params: {\n    scroll: {\n      type: 'duration'\n    },\n    scrollId: {\n      type: 'string',\n      name: 'scroll_id'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_search/scroll/<%=scrollId%>',\n      req: {\n        scrollId: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search/scroll'\n    }\n  ],\n  paramAsBody: 'scrollId',\n  method: 'POST'\n});\n\n/**\n * Perform a [search](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-search.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.analyzer - The analyzer to use for the query string\n * @param {Boolean} params.analyzeWildcard - Specify whether wildcard and prefix queries should be analyzed (default: false)\n * @param {String} [params.defaultOperator=OR] - The default operator for query string query (AND or OR)\n * @param {String} params.df - The field to use as default where no field prefix is given in the query string\n * @param {Boolean} params.explain - Specify whether to return detailed information about score computation as part of a hit\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return as part of a hit\n * @param {String, String[], Boolean} params.fielddataFields - A comma-separated list of fields to return as the field data representation of a field for each hit\n * @param {Number} params.from - Starting offset (default: 0)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String, String[], Boolean} params.indicesBoost - Comma-separated list of index boosts\n * @param {Boolean} params.lenient - Specify whether format-based query failures (such as providing text to a numeric field) should be ignored\n * @param {Boolean} params.lowercaseExpandedTerms - Specify whether query terms should be lowercased\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.q - Query in the Lucene query string syntax\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {Number} params.size - Number of hits to return (default: 10)\n * @param {String, String[], Boolean} params.sort - A comma-separated list of <field>:<direction> pairs\n * @param {String} params.source - The URL-encoded request definition using the Query DSL (instead of using request body)\n * @param {String, String[], Boolean} params._source - True or false to return the _source field or not, or a list of fields to return\n * @param {String, String[], Boolean} params._sourceExclude - A list of fields to exclude from the returned _source field\n * @param {String, String[], Boolean} params._sourceInclude - A list of fields to extract and return from the _source field\n * @param {Number} params.terminateAfter - The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.\n * @param {String, String[], Boolean} params.stats - Specific 'tag' of the request for logging and statistical purposes\n * @param {String} params.suggestField - Specify which field to use for suggestions\n * @param {String} [params.suggestMode=missing] - Specify suggest mode\n * @param {Number} params.suggestSize - How many suggestions to return in response\n * @param {Text} params.suggestText - The source text for which the suggestions should be returned\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.trackScores - Whether to calculate and return scores even if they are not used for sorting\n * @param {Boolean} params.version - Specify whether to return document version as part of a hit\n * @param {Boolean} params.queryCache - Specify if query cache should be used for this request or not, defaults to index level setting\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.search = ca({\n  params: {\n    analyzer: {\n      type: 'string'\n    },\n    analyzeWildcard: {\n      type: 'boolean',\n      name: 'analyze_wildcard'\n    },\n    defaultOperator: {\n      type: 'enum',\n      'default': 'OR',\n      options: [\n        'AND',\n        'OR'\n      ],\n      name: 'default_operator'\n    },\n    df: {\n      type: 'string'\n    },\n    explain: {\n      type: 'boolean'\n    },\n    fields: {\n      type: 'list'\n    },\n    fielddataFields: {\n      type: 'list',\n      name: 'fielddata_fields'\n    },\n    from: {\n      type: 'number'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    indicesBoost: {\n      type: 'list',\n      name: 'indices_boost'\n    },\n    lenient: {\n      type: 'boolean'\n    },\n    lowercaseExpandedTerms: {\n      type: 'boolean',\n      name: 'lowercase_expanded_terms'\n    },\n    preference: {\n      type: 'string'\n    },\n    q: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    },\n    size: {\n      type: 'number'\n    },\n    sort: {\n      type: 'list'\n    },\n    source: {\n      type: 'string'\n    },\n    _source: {\n      type: 'list'\n    },\n    _sourceExclude: {\n      type: 'list',\n      name: '_source_exclude'\n    },\n    _sourceInclude: {\n      type: 'list',\n      name: '_source_include'\n    },\n    terminateAfter: {\n      type: 'number',\n      name: 'terminate_after'\n    },\n    stats: {\n      type: 'list'\n    },\n    suggestField: {\n      type: 'string',\n      name: 'suggest_field'\n    },\n    suggestMode: {\n      type: 'enum',\n      'default': 'missing',\n      options: [\n        'missing',\n        'popular',\n        'always'\n      ],\n      name: 'suggest_mode'\n    },\n    suggestSize: {\n      type: 'number',\n      name: 'suggest_size'\n    },\n    suggestText: {\n      type: 'text',\n      name: 'suggest_text'\n    },\n    timeout: {\n      type: 'time'\n    },\n    trackScores: {\n      type: 'boolean',\n      name: 'track_scores'\n    },\n    version: {\n      type: 'boolean'\n    },\n    queryCache: {\n      type: 'boolean',\n      name: 'query_cache'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchExists](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-exists.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {Number} params.minScore - Include only documents with a specific `_score` value in the result\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded query definition (instead of using the request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of indices to restrict the results\n * @param {String, String[], Boolean} params.type - A comma-separated list of types to restrict the results\n */\napi.searchExists = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    minScore: {\n      type: 'number',\n      name: 'min_score'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/exists',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/exists'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchShards](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-shards.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.searchShards = ca({\n  params: {\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    local: {\n      type: 'boolean'\n    },\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search_shards',\n      req: {\n        index: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_search_shards'\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [searchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-template.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String, String[], Boolean} params.routing - A comma-separated list of specific routing values\n * @param {Duration} params.scroll - Specify how long a consistent view of the index should be maintained for scrolled search\n * @param {String} params.searchType - Search operation type\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices\n * @param {String, String[], Boolean} params.type - A comma-separated list of document types to search; leave empty to perform the operation on all types\n */\napi.searchTemplate = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'list'\n    },\n    scroll: {\n      type: 'duration'\n    },\n    searchType: {\n      type: 'enum',\n      options: [\n        'query_then_fetch',\n        'query_and_fetch',\n        'dfs_query_then_fetch',\n        'dfs_query_and_fetch',\n        'count',\n        'scan'\n      ],\n      name: 'search_type'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        },\n        type: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/_search/template',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_search/template'\n    }\n  ],\n  method: 'POST'\n});\n\napi.snapshot = function SnapshotNS(transport) {\n  this.transport = transport;\n};\n\n/**\n * Perform a [snapshot.create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.create = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_create',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.createRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Boolean} params.verify - Whether to verify the repository after creation\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.createRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    },\n    verify: {\n      type: 'boolean'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.delete](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype['delete'] = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.deleteRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.deleteRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>',\n    req: {\n      repository: {\n        type: 'list'\n      }\n    }\n  },\n  method: 'DELETE'\n});\n\n/**\n * Perform a [snapshot.get](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.get = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'list'\n      }\n    }\n  }\n});\n\n/**\n * Perform a [snapshot.getRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.local - Return local information, do not retrieve the state from master node (default: false)\n * @param {String, String[], Boolean} params.repository - A comma-separated list of repository names\n */\napi.snapshot.prototype.getRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    local: {\n      type: 'boolean'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>',\n      req: {\n        repository: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.restore](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Boolean} params.waitForCompletion - Should this request wait until the operation has completed before returning\n * @param {String} params.repository - A repository name\n * @param {String} params.snapshot - A snapshot name\n */\napi.snapshot.prototype.restore = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    waitForCompletion: {\n      type: 'boolean',\n      'default': false,\n      name: 'wait_for_completion'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_restore',\n    req: {\n      repository: {\n        type: 'string'\n      },\n      snapshot: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [snapshot.status](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {String} params.repository - A repository name\n * @param {String, String[], Boolean} params.snapshot - A comma-separated list of snapshot names\n */\napi.snapshot.prototype.status = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    }\n  },\n  urls: [\n    {\n      fmt: '/_snapshot/<%=repository%>/<%=snapshot%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        },\n        snapshot: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/<%=repository%>/_status',\n      req: {\n        repository: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/_snapshot/_status'\n    }\n  ]\n});\n\n/**\n * Perform a [snapshot.verifyRepository](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Date, Number} params.masterTimeout - Explicit operation timeout for connection to master node\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {String} params.repository - A repository name\n */\napi.snapshot.prototype.verifyRepository = ca({\n  params: {\n    masterTimeout: {\n      type: 'time',\n      name: 'master_timeout'\n    },\n    timeout: {\n      type: 'time'\n    }\n  },\n  url: {\n    fmt: '/_snapshot/<%=repository%>/_verify',\n    req: {\n      repository: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [suggest](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/search-suggesters.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.ignoreUnavailable - Whether specified concrete indices should be ignored when unavailable (missing or closed)\n * @param {Boolean} params.allowNoIndices - Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)\n * @param {String} [params.expandWildcards=open] - Whether to expand wildcard expression to concrete indices that are open, closed or both.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random)\n * @param {String} params.routing - Specific routing value\n * @param {String} params.source - The URL-encoded request definition (instead of using request body)\n * @param {String, String[], Boolean} params.index - A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices\n */\napi.suggest = ca({\n  params: {\n    ignoreUnavailable: {\n      type: 'boolean',\n      name: 'ignore_unavailable'\n    },\n    allowNoIndices: {\n      type: 'boolean',\n      name: 'allow_no_indices'\n    },\n    expandWildcards: {\n      type: 'enum',\n      'default': 'open',\n      options: [\n        'open',\n        'closed',\n        'none',\n        'all'\n      ],\n      name: 'expand_wildcards'\n    },\n    preference: {\n      type: 'string'\n    },\n    routing: {\n      type: 'string'\n    },\n    source: {\n      type: 'string'\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/_suggest',\n      req: {\n        index: {\n          type: 'list'\n        }\n      }\n    },\n    {\n      fmt: '/_suggest'\n    }\n  ],\n  needBody: true,\n  method: 'POST'\n});\n\n/**\n * Perform a [termvector](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-termvectors.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {Boolean} params.termStatistics - Specifies if total term frequency and document frequency should be returned.\n * @param {Boolean} [params.fieldStatistics=true] - Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return.\n * @param {Boolean} [params.offsets=true] - Specifies if term offsets should be returned.\n * @param {Boolean} [params.positions=true] - Specifies if term positions should be returned.\n * @param {Boolean} [params.payloads=true] - Specifies if term payloads should be returned.\n * @param {String} params.preference - Specify the node or shard the operation should be performed on (default: random).\n * @param {String} params.routing - Specific routing value.\n * @param {String} params.parent - Parent id of documents.\n * @param {String} params.index - The index in which the document resides.\n * @param {String} params.type - The type of the document.\n * @param {String} params.id - The id of the document, when not specified a doc param should be supplied.\n */\napi.termvector = ca({\n  params: {\n    termStatistics: {\n      type: 'boolean',\n      'default': false,\n      required: false,\n      name: 'term_statistics'\n    },\n    fieldStatistics: {\n      type: 'boolean',\n      'default': true,\n      required: false,\n      name: 'field_statistics'\n    },\n    fields: {\n      type: 'list',\n      required: false\n    },\n    offsets: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    positions: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    payloads: {\n      type: 'boolean',\n      'default': true,\n      required: false\n    },\n    preference: {\n      type: 'string',\n      required: false\n    },\n    routing: {\n      type: 'string',\n      required: false\n    },\n    parent: {\n      type: 'string',\n      required: false\n    }\n  },\n  urls: [\n    {\n      fmt: '/<%=index%>/<%=type%>/<%=id%>/_termvector',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        },\n        id: {\n          type: 'string'\n        }\n      }\n    },\n    {\n      fmt: '/<%=index%>/<%=type%>/_termvector',\n      req: {\n        index: {\n          type: 'string'\n        },\n        type: {\n          type: 'string'\n        }\n      }\n    }\n  ],\n  method: 'POST'\n});\n\n/**\n * Perform a [update](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-update.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String, String[], Boolean} params.fields - A comma-separated list of fields to return in the response\n * @param {String} params.lang - The script language (default: groovy)\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {Number} params.retryOnConflict - Specify how many times should the operation be retried when a conflict occurs (default: 0)\n * @param {String} params.routing - Specific routing value\n * @param {Anything} params.script - The URL-encoded script definition (instead of using request body)\n * @param {Anything} params.scriptId - The id of a stored script\n * @param {Boolean} params.scriptedUpsert - True if the script referenced in script or script_id should be called to perform inserts - defaults to false\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.update = ca({\n  params: {\n    consistency: {\n      type: 'enum',\n      options: [\n        'one',\n        'quorum',\n        'all'\n      ]\n    },\n    fields: {\n      type: 'list'\n    },\n    lang: {\n      type: 'string'\n    },\n    parent: {\n      type: 'string'\n    },\n    refresh: {\n      type: 'boolean'\n    },\n    replication: {\n      type: 'enum',\n      'default': 'sync',\n      options: [\n        'sync',\n        'async'\n      ]\n    },\n    retryOnConflict: {\n      type: 'number',\n      name: 'retry_on_conflict'\n    },\n    routing: {\n      type: 'string'\n    },\n    script: {},\n    scriptId: {\n      name: 'script_id'\n    },\n    scriptedUpsert: {\n      type: 'boolean',\n      name: 'scripted_upsert'\n    },\n    timeout: {\n      type: 'time'\n    },\n    timestamp: {\n      type: 'time'\n    },\n    ttl: {\n      type: 'duration'\n    },\n    version: {\n      type: 'number'\n    },\n    versionType: {\n      type: 'enum',\n      options: [\n        'internal',\n        'force'\n      ],\n      name: 'version_type'\n    }\n  },\n  url: {\n    fmt: '/<%=index%>/<%=type%>/<%=id%>/_update',\n    req: {\n      index: {\n        type: 'string'\n      },\n      type: {\n        type: 'string'\n      },\n      id: {\n        type: 'string'\n      }\n    }\n  },\n  method: 'POST'\n});\n\n/**\n * Perform a [create](http://www.elasticsearch.org/guide/en/elasticsearch/reference/1.4/docs-index_.html) request\n *\n * @param {Object} params - An object with parameters used to carry out this action\n * @param {String} params.consistency - Explicit write consistency setting for the operation\n * @param {String} params.parent - ID of the parent document\n * @param {Boolean} params.refresh - Refresh the index after performing the operation\n * @param {String} [params.replication=sync] - Specific replication type\n * @param {String} params.routing - Specific routing value\n * @param {Date, Number} params.timeout - Explicit operation timeout\n * @param {Date, Number} params.timestamp - Explicit timestamp for the document\n * @param {Duration} params.ttl - Expiration time for the document\n * @param {Number} params.version - Explicit version number for concurrency control\n * @param {String} params.versionType - Specific version type\n * @param {String} params.id - Document ID\n * @param {String} params.index - The name of the index\n * @param {String} params.type - The type of the document\n */\napi.create = ca.proxy(api.index, {\n  transform: function (params) {\n    params.op_type = 'create';\n  }\n});\n},{\"../client_action\":248}],246:[function(require,module,exports){\nmodule.exports = {\n  '1.4': require('./1_4'),\n  '1.3': require('./1_3'),\n  '1.2': require('./1_2')\n};\n\n},{\"./1_2\":243,\"./1_3\":244,\"./1_4\":245}],247:[function(require,module,exports){\n/**\n * A client that makes requests to Elasticsearch via a {{#crossLink \"Transport\"}}Transport{{/crossLink}}\n *\n * Initializing a client might look something like:\n *\n * ```\n * var client = new es.Client({\n *   hosts: [\n *     'es1.net:9200',\n *     {\n *       host: 'es2.net',\n *       port: 9200\n *     }\n *   ],\n *   sniffOnStart: true,\n *   log: {\n *     type: 'file',\n *     level: 'warning'\n *   }\n * });\n * ```\n *\n * @class Client\n * @constructor\n */\n\nmodule.exports = Client;\n\nvar Transport = require('./transport');\nvar _ = require('./utils');\n\nfunction Client(config) {\n  config = config || {};\n\n  if (config.__reused) {\n    throw new Error('Do not reuse objects to configure the elasticsearch Client class: ' +\n      'https://github.com/elasticsearch/elasticsearch-js/issues/33');\n  } else {\n    config.__reused = true;\n  }\n\n  function EsApiClient() {\n    // our client will log minimally by default\n    if (!config.hasOwnProperty('log')) {\n      config.log = 'warning';\n    }\n\n    if (!config.hosts && !config.host) {\n      config.host = 'http://localhost:9200';\n    }\n\n    this.close = function () {\n      this.transport.close();\n    };\n\n    this.transport = new Transport(config);\n\n    // instantiate the api's namespaces\n    for (var i = 0; i < this._namespaces.length; i++) {\n      this[this._namespaces[i]] = new this[this._namespaces[i]](this.transport);\n    }\n\n    delete this._namespaces;\n  }\n\n  EsApiClient.prototype = _.funcEnum(config, 'apiVersion', Client.apis, '1.4');\n  if (!config.sniffEndpoint && EsApiClient.prototype === Client.apis['0.90']) {\n    config.sniffEndpoint = '/_cluster/nodes';\n  }\n\n  return new EsApiClient();\n}\n\nClient.apis = require('./apis');\n},{\"./apis\":246,\"./transport\":267,\"./utils\":269}],248:[function(require,module,exports){\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {[type]}\n */\nmodule.exports = ClientAction;\n\nvar _ = require('./utils');\n\nfunction ClientAction(spec) {\n  if (!_.isPlainObject(spec.params)) {\n    spec.params = {};\n  }\n\n  if (!spec.method) {\n    spec.method = 'GET';\n  }\n\n  function action(params, cb) {\n    if (typeof params === 'function') {\n      cb = params;\n      params = {};\n    } else {\n      params = params || {};\n      cb = typeof cb === 'function' ? cb : null;\n    }\n\n    try {\n      return exec(this.transport, spec, _.clone(params), cb);\n    } catch (e) {\n      if (typeof cb === 'function') {\n        _.nextTick(cb, e);\n      } else {\n        var def = this.transport.defer();\n        def.reject(e);\n        return def.promise;\n      }\n    }\n  }\n\n  action.spec = spec;\n\n  return action;\n}\n\nvar castType = {\n  'enum': function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = val.split(',');\n    }\n\n    if (_.isArray(val)) {\n      return val.map(function (v) {\n        return validSelection(param, v, name);\n      }).join(',');\n    }\n\n    /* jshint eqeqeq: false */\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] == val) {\n        return param.options[i];\n      }\n    }\n    throw new TypeError('Invalid ' + name + ': expected ' + (\n      param.options.length > 1\n      ? 'one of ' + param.options.join(',')\n      : param.options[0]\n    ));\n  },\n  duration: function (param, val, name) {\n    if (_.isNumeric(val) || _.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError(\n        'Invalid ' + name + ': expected a number or interval ' +\n        '(an integer followed by one of Mwdhmsy).'\n      );\n    }\n  },\n  list: function (param, val, name) {\n    switch (typeof val) {\n    case 'number':\n    case 'string':\n    case 'boolean':\n      return '' + val;\n    case 'object':\n      if (_.isArray(val)) {\n        return val.join(',');\n      }\n      /* falls through */\n    default:\n      throw new TypeError('Invalid ' + name + ': expected be a comma seperated list, array, number or string.');\n    }\n  },\n  'boolean': function (param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return (val === 'no' || val === 'off') ? false : !!val;\n  },\n  number: function (param, val, name) {\n    if (_.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function (param, val, name) {\n    switch (typeof val) {\n    case 'number':\n    case 'string':\n      return '' + val;\n    default:\n      throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function (param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    }\n    else if (_.isNumeric(val)) {\n      return '' + val;\n    }\n    else if (val instanceof Date) {\n      return '' + val.getTime();\n    }\n    else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  }\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {}, i, key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i ++) {\n      key = url.reqParamKeys[i];\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](url.req[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i ++) {\n      key = url.optParamKeys[i];\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](url.opt[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(_.transform(vars, function (note, val, name) {\n    // encode each value\n    note[name] = encodeURIComponent(val);\n    // remove it from the params so that it isn't sent to the final request\n    delete params[name];\n  }, {}));\n}\n\n// export so that we can test this\nClientAction.resolveUrl = resolveUrl;\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method\n  };\n  var query = {};\n  var i;\n\n  // pass the timeout from the spec\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    params.body = params[spec.paramAsBody];\n    delete params[spec.paramAsBody];\n  }\n\n  // verify that we have the body if needed\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  }\n\n  // control params\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  }\n\n  // pick the url\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      if (request.path = resolveUrl(spec.urls[i], params)) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError('Unable to build a path with those params. Supply at least ' + _.keys(minUrl.req).join(', '));\n  }\n\n  // build the query string\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(spec.params, function (req, param, key) {\n      if (param.required) {\n        req.push(key);\n      }\n    }, []);\n  }\n\n  var key, paramSpec;\n\n  for (key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n      case 'body':\n      case 'requestTimeout':\n      case 'maxRetries':\n        request[key] = params[key];\n        break;\n      case 'ignore':\n        request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n        break;\n      case 'method':\n        request.method = _.toUpperString(params[key]);\n        break;\n      default:\n        paramSpec = spec.params[key];\n        if (paramSpec) {\n          // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n          paramSpec.name = paramSpec.name || key;\n          if (params[key] != null) {\n            if (castType[paramSpec.type]) {\n              query[paramSpec.name] = castType[paramSpec.type](paramSpec, params[key], key);\n            } else {\n              query[paramSpec.name] = params[key];\n            }\n\n            if (paramSpec['default'] && query[paramSpec.name] === paramSpec['default']) {\n              delete query[paramSpec.name];\n            }\n          }\n        } else {\n          query[key] = params[key];\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i ++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError('Missing required parameter ' + spec.requireParamKeys[i]);\n    }\n  }\n\n  request.query = query;\n\n  return transport.request(request, cb);\n}\n\n\n\nClientAction.proxy = function (fn, spec) {\n  return function (params, cb) {\n    if (typeof params === 'function') {\n      cb = params;\n      params = {};\n    } else {\n      params = params || {};\n      cb = typeof cb === 'function' ? cb : null;\n    }\n\n    if (spec.transform) {\n      spec.transform(params);\n    }\n\n    return fn.call(this, params, cb);\n  };\n};\n\n},{\"./utils\":269}],249:[function(require,module,exports){\nmodule.exports = ConnectionAbstract;\n\nvar _ = require('./utils');\nvar EventEmitter = require('events').EventEmitter;\nvar Log = require('./log');\nvar Host = require('./host');\nvar errors = require('./errors');\n\n/**\n * Abstract class used for Connection classes\n * @class ConnectionAbstract\n * @constructor\n */\nfunction ConnectionAbstract(host, config) {\n  config = config || {};\n  EventEmitter.call(this);\n\n  this.log = config.log || new Log();\n\n  if (!host) {\n    throw new TypeError('Missing host');\n  } else if (host instanceof Host) {\n    this.host = host;\n  } else {\n    throw new TypeError('Invalid host');\n  }\n\n  _.makeBoundMethods(this);\n}\n_.inherits(ConnectionAbstract, EventEmitter);\n\n/**\n * Make a request using this connection. Must be overridden by Connection classes, which can add whatever keys to\n * params that they like. These are just the basics.\n *\n * @param [params] {Object} - The parameters for the request\n * @param params.path {String} - The path for which you are requesting\n * @param params.method {String} - The HTTP method for the request (GET, HEAD, etc.)\n * @param params.requestTimeout {Integer} - The amount of time in milliseconds that this request should be allowed to run for.\n * @param cb {Function} - A callback to be called once with `cb(err, responseBody, responseStatus)`\n */\nConnectionAbstract.prototype.request = function () {\n  throw new Error('Connection#request must be overwritten by the Connector');\n};\n\nConnectionAbstract.prototype.ping = function (params, cb) {\n  if (typeof params === 'function') {\n    cb = params;\n    params = null;\n  } else {\n    cb = typeof cb === 'function' ? cb : null;\n  }\n\n  var requestTimeout = 100;\n  var requestTimeoutId;\n  var aborted;\n  var abort;\n\n  if (params && params.hasOwnProperty('requestTimeout')) {\n    requestTimeout = params.requestTimeout;\n  }\n\n  abort = this.request(_.defaults(params || {}, {\n    path: '/',\n    method: 'HEAD'\n  }), function (err) {\n    if (aborted) {\n      return;\n    }\n    clearTimeout(requestTimeoutId);\n    if (cb) {\n      cb(err);\n    }\n  });\n\n  if (requestTimeout) {\n    requestTimeoutId = setTimeout(function () {\n      if (abort) {\n        abort();\n      }\n      aborted = true;\n      if (cb) {\n        cb(new errors.RequestTimeout('Ping Timeout after ' + requestTimeout + 'ms'));\n      }\n    }, requestTimeout);\n  }\n};\n\nConnectionAbstract.prototype.setStatus = function (status) {\n  var origStatus = this.status;\n  this.status = status;\n\n  this.emit('status set', status, origStatus, this);\n\n  if (status === 'closed') {\n    this.removeAllListeners();\n  }\n};\n},{\"./errors\":255,\"./host\":256,\"./log\":257,\"./utils\":269,\"events\":22}],250:[function(require,module,exports){\n(function (process){\n/**\n * Manager of connections to a node(s), capable of ensuring that connections are clear and living\n * before providing them to the application\n *\n * @class ConnectionPool\n * @constructor\n * @param {Object} config - The config object passed to the transport.\n */\n\nmodule.exports = ConnectionPool;\n\nvar _ = require('./utils');\nvar Log = require('./log');\n\nfunction ConnectionPool(config) {\n  config = config || {};\n  _.makeBoundMethods(this);\n\n  if (!config.log) {\n    this.log = new Log();\n    config.log = this.log;\n  } else {\n    this.log = config.log;\n  }\n\n  // we will need this when we create connections down the road\n  this._config = config;\n\n  // get the selector config var\n  this.selector = _.funcEnum(config, 'selector', ConnectionPool.selectors, ConnectionPool.defaultSelector);\n\n  // get the connection class\n  this.Connection = _.funcEnum(config, 'connectionClass', ConnectionPool.connectionClasses,\n    ConnectionPool.defaultConnectionClass);\n\n  // time that connections will wait before being revived\n  this.deadTimeout = config.hasOwnProperty('deadTimeout') ? config.deadTimeout : 60000;\n  this.maxDeadTimeout = config.hasOwnProperty('maxDeadTimeout') ? config.maxDeadTimeout : 18e5;\n  this.calcDeadTimeout = _.funcEnum(config, 'calcDeadTimeout', ConnectionPool.calcDeadTimeoutOptions, 'exponential');\n\n  // a map of connections to their \"id\" property, used when sniffing\n  this.index = {};\n\n  this._conns = {\n    alive: [],\n    dead: []\n  };\n\n  // information about timeouts for dead connections\n  this._timeouts = [];\n}\n\n// selector options\nConnectionPool.selectors = require('./selectors');\nConnectionPool.defaultSelector = 'roundRobin';\n\n// get the connection options\nConnectionPool.connectionClasses = require('./connectors');\nConnectionPool.defaultConnectionClass = ConnectionPool.connectionClasses._default;\ndelete ConnectionPool.connectionClasses._default;\n\n// the function that calculates timeouts based on attempts\nConnectionPool.calcDeadTimeoutOptions = {\n  flat: function (attempt, baseTimeout) {\n    return baseTimeout;\n  },\n  exponential: function (attempt, baseTimeout) {\n    return Math.min(baseTimeout * 2 * Math.pow(2, (attempt * 0.5 - 1)), this.maxDeadTimeout);\n  }\n};\n\n/**\n * Selects a connection from the list using the this.selector\n * Features:\n *  - detects if the selector is async or not\n *  - sync selectors should still return asynchronously\n *  - catches errors in sync selectors\n *  - automatically selects the first dead connection when there no living connections\n *\n * @param  {Function} cb [description]\n * @return {[type]}      [description]\n */\nConnectionPool.prototype.select = function (cb) {\n  if (this._conns.alive.length) {\n    if (this.selector.length > 1) {\n      this.selector(this._conns.alive, cb);\n    } else {\n      try {\n        _.nextTick(cb, void 0, this.selector(this._conns.alive));\n      } catch (e) {\n        cb(e);\n      }\n    }\n  } else if (this._timeouts.length) {\n    this._selectDeadConnection(cb);\n  } else {\n    _.nextTick(cb, void 0);\n  }\n};\n\n/**\n * Handler for the \"set status\" event emitted but the connections. It will move\n * the connection to it's proper connection list (unless it was closed).\n *\n * @param  {String} status - the connection's new status\n * @param  {String} oldStatus - the connection's old status\n * @param  {ConnectionAbstract} connection - the connection object itself\n */\nConnectionPool.prototype.onStatusSet = _.handler(function (status, oldStatus, connection) {\n  var index;\n\n  var died = (status === 'dead');\n  var wasAlreadyDead = (died && oldStatus === 'dead');\n  var revived = (!died && oldStatus === 'dead');\n  var noChange = (oldStatus === status);\n  var from = this._conns[oldStatus];\n  var to = this._conns[status];\n\n  if (noChange && !died) {\n    return true;\n  }\n\n  if (from !== to) {\n    if (_.isArray(from)) {\n      index = from.indexOf(connection);\n      if (index !== -1) {\n        from.splice(index, 1);\n      }\n    }\n\n    if (_.isArray(to)) {\n      index = to.indexOf(connection);\n      if (index === -1) {\n        to.push(connection);\n      }\n    }\n  }\n\n  if (died) {\n    this._onConnectionDied(connection, wasAlreadyDead);\n  }\n\n  if (revived) {\n    this._onConnectionRevived(connection);\n  }\n});\n\n/**\n * Handler used to clear the times created when a connection dies\n * @param  {ConnectionAbstract} connection\n */\nConnectionPool.prototype._onConnectionRevived = function (connection) {\n  var timeout;\n  for (var i = 0; i < this._timeouts.length; i++)  {\n    if (this._timeouts[i].conn === connection) {\n      timeout = this._timeouts[i];\n      if (timeout.id) {\n        clearTimeout(timeout.id);\n      }\n      this._timeouts.splice(i, 1);\n      break;\n    }\n  }\n};\n\n/**\n * Handler used to update or create a timeout for the connection which has died\n * @param  {ConnectionAbstract} connection\n * @param  {Boolean} alreadyWasDead - If the connection was preivously dead this must be set to true\n */\nConnectionPool.prototype._onConnectionDied = function (connection, alreadyWasDead) {\n  var timeout;\n  if (alreadyWasDead) {\n    for (var i = 0; i < this._timeouts.length; i++)  {\n      if (this._timeouts[i].conn === connection) {\n        timeout = this._timeouts[i];\n        break;\n      }\n    }\n  } else {\n    timeout = {\n      conn: connection,\n      attempt: 0,\n      revive: function (cb) {\n        timeout.attempt++;\n        connection.ping(function (err) {\n          connection.setStatus(err ? 'dead' : 'alive');\n          if (cb && typeof cb === 'function') {\n            cb(err);\n          }\n        });\n      }\n    };\n    this._timeouts.push(timeout);\n  }\n\n  if (timeout.id) {\n    clearTimeout(timeout.id);\n  }\n\n  var ms = this.calcDeadTimeout(timeout.attempt, this.deadTimeout);\n  timeout.id = setTimeout(timeout.revive, ms);\n  timeout.runAt = _.now() + ms;\n};\n\nConnectionPool.prototype._selectDeadConnection = function (cb) {\n  var orderedTimeouts = _.sortBy(this._timeouts, 'runAt');\n  var log = this.log;\n\n  process.nextTick(function next() {\n    var timeout = orderedTimeouts.shift();\n    if (!timeout) {\n      cb(void 0);\n      return;\n    }\n\n    if (!timeout.conn) {\n      next();\n      return;\n    }\n\n    if (timeout.conn.status === 'dead') {\n      timeout.revive(function (err) {\n        if (err) {\n          log.warning('Unable to revive connection: ' + timeout.conn.id);\n          process.nextTick(next);\n        } else {\n          cb(void 0, timeout.conn);\n        }\n      });\n    } else {\n      cb(void 0, timeout.conn);\n    }\n  });\n};\n\n/**\n * Returns a random list of nodes from the living connections up to the limit.\n * If there are no living connections it will fall back to the dead connections.\n * If there are no dead connections it will return nothing.\n *\n * This is used for testing (when we just want the one existing node)\n * and sniffing, where using the selector to get all of the living connections\n * is not reasonable.\n *\n * @param {string} [status] - optional status of the connection to fetch\n * @param {Number} [limit] - optional limit on the number of connections to return\n */\nConnectionPool.prototype.getConnections = function (status, limit) {\n  var list;\n  if (status) {\n    list = this._conns[status];\n  } else {\n    list = this._conns[this._conns.alive.length ? 'alive' : 'dead'];\n  }\n\n  if (limit == null) {\n    return list.slice(0);\n  } else {\n    return _.shuffle(list).slice(0, limit);\n  }\n};\n\n/**\n * Add a single connection to the pool and change it's status to \"alive\".\n * The connection should inherit from ConnectionAbstract\n *\n * @param {ConnectionAbstract} connection - The connection to add\n */\nConnectionPool.prototype.addConnection = function (connection) {\n  if (!connection.id) {\n    connection.id = connection.host.toString();\n  }\n\n  if (!this.index[connection.id]) {\n    this.log.info('Adding connection to', connection.id);\n    this.index[connection.id] = connection;\n    connection.on('status set', this.bound.onStatusSet);\n    connection.setStatus('alive');\n  }\n};\n\n/**\n * Remove a connection from the pool, and set it's status to \"closed\".\n *\n * @param  {ConnectionAbstract} connection - The connection to remove/close\n */\nConnectionPool.prototype.removeConnection = function (connection) {\n  if (!connection.id) {\n    connection.id = connection.host.toString();\n  }\n\n  if (this.index[connection.id]) {\n    delete this.index[connection.id];\n    connection.setStatus('closed');\n    connection.removeListener('status set', this.bound.onStatusSet);\n  }\n};\n\n/**\n * Override the internal node list. All connections that are not in the new host\n * list are closed and removed. Non-unique hosts are ignored.\n *\n * @param {Host[]} hosts - An array of Host instances.\n */\nConnectionPool.prototype.setHosts = function (hosts) {\n  var connection;\n  var i;\n  var id;\n  var host;\n  var toRemove = _.clone(this.index);\n\n  for (i = 0; i < hosts.length; i++) {\n    host = hosts[i];\n    id = host.toString();\n    if (this.index[id]) {\n      delete toRemove[id];\n    } else {\n      connection = new this.Connection(host, this._config);\n      connection.id = id;\n      this.addConnection(connection);\n    }\n  }\n\n  var removeIds = _.keys(toRemove);\n  for (i = 0; i < removeIds.length; i++) {\n    this.removeConnection(this.index[removeIds[i]]);\n  }\n};\n\n/**\n * Close the conncetion pool, as well as all of it's connections\n */\nConnectionPool.prototype.close = function () {\n  this.setHosts([]);\n};\nConnectionPool.prototype.empty = ConnectionPool.prototype.close;\n}).call(this,require('_process'))\n},{\"./connectors\":252,\"./log\":257,\"./selectors\":262,\"./utils\":269,\"_process\":25}],251:[function(require,module,exports){\n(function (Buffer){\n/**\n * Connection that registers a module with angular, using angular's $http service\n * to communicate with ES.\n *\n * @class connections.Angular\n */\nmodule.exports = AngularConnector;\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\n\nfunction makeAuthHeader(auth) {\n  return 'Basic ' + (new Buffer(auth, 'utf8')).toString('base64');\n}\n\nfunction AngularConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n  var self = this;\n  self.headerDefaults = {};\n\n  if (self.host.auth) {\n    self.headerDefaults.Authorization = makeAuthHeader(self.host.auth);\n  }\n\n  config.$injector.invoke(['$http', '$q', function ($http, $q) {\n    self.$q = $q;\n    self.$http = $http;\n  }]);\n}\n_.inherits(AngularConnector, ConnectionAbstract);\n\nAngularConnector.prototype.request = function (userParams, cb) {\n  var abort = this.$q.defer();\n  var params = _.cloneDeep(userParams);\n\n  params.headers = _.defaults(params.headers || {}, this.headerDefaults);\n  if (params.auth) {\n    params.headers.Authorization = makeAuthHeader(params.auth);\n  }\n\n  // inform the host not to use the auth, by overriding it in the params\n  params.auth = false;\n\n  this.$http({\n    method: params.method,\n    url: this.host.makeUrl(params),\n    data: params.body,\n    cache: false,\n    headers: this.host.getHeaders(params.headers),\n    transformRequest: [],\n    transformResponse: [],\n    // not actually for timing out, that's handled by the transport\n    timeout: abort.promise\n  }).then(function (response) {\n    cb(null, response.data, response.status, response.headers());\n  }, function (err) {\n    if (err.status) {\n      cb(null, err.data, err.status, err.headers());\n    } else {\n      cb(new ConnectionFault(err.message));\n    }\n  });\n\n  return function () {\n    abort.resolve();\n  };\n};\n}).call(this,require(\"buffer\").Buffer)\n},{\"../connection\":249,\"../errors\":255,\"../utils\":269,\"buffer\":18}],252:[function(require,module,exports){\nvar opts = {\n  xhr: require('./xhr'),\n  jquery: require('./jquery'),\n  angular: require('./angular')\n};\nvar _ = require('../utils');\n\n// remove modules that have been ignored by browserify\n_.each(opts, function (conn, name) {\n  if (typeof conn !== 'function') {\n    delete opts[name];\n  }\n});\n\n// custom _default specification\nif (opts.xhr) {\n  opts._default = 'xhr';\n} else if (opts.angular) {\n  opts._default = 'angular';\n} else {\n  opts._default = 'jquery';\n}\n\nmodule.exports = opts;\n\n},{\"../utils\":269,\"./angular\":251,\"./jquery\":253,\"./xhr\":254}],253:[function(require,module,exports){\n/* jshint browser: true, jquery: true */\n\n/**\n * Simple connection class for using the XHR object in browsers\n *\n * @class {XhrConnection}\n */\nmodule.exports = JqueryConnector;\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\n\nfunction JqueryConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n}\n_.inherits(JqueryConnector, ConnectionAbstract);\n\nJqueryConnector.prototype.request = function (params, cb) {\n  var ajax = {\n    url: this.host.makeUrl(params),\n    data: params.body,\n    type: params.method,\n    dataType: 'text',\n    headers: this.host.getHeaders(params.headers),\n    done: cb\n  };\n\n  if (params.auth) {\n    var auths = params.auth.split(':');\n    ajax.username = auths[0];\n    ajax.password = auths[1];\n  }\n\n  var jqXHR = jQuery.ajax(ajax)\n    .done(function (data, textStatus, jqXHR) {\n      cb(null, data, jqXHR.statusCode(), {\n        'content-type': jqXHR.getResponseHeader('content-type')\n      });\n    })\n    .fail(function (jqXHR, textStatus, err) {\n      cb(new ConnectionFault(err && err.message));\n    });\n\n  return function () {\n    jqXHR.abort();\n  };\n};\n\n\n\n},{\"../connection\":249,\"../errors\":255,\"../utils\":269}],254:[function(require,module,exports){\n/**\n * Generic Transport for the browser, using the XmlHttpRequest object\n *\n * @class  connections.Xhr\n */\nmodule.exports = XhrConnector;\n\n/* jshint browser:true */\n\nvar _ = require('../utils');\nvar ConnectionAbstract = require('../connection');\nvar ConnectionFault = require('../errors').ConnectionFault;\nvar asyncDefault = !(navigator && /PhantomJS/i.test(navigator.userAgent));\n\nfunction XhrConnector(host, config) {\n  ConnectionAbstract.call(this, host, config);\n}\n_.inherits(XhrConnector, ConnectionAbstract);\n\n/**\n * Simply returns an XHR object cross browser\n * @type {Function}\n */\nvar getXhr = _.noop;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // rewrite the getXhr method to always return the native implementation\n  getXhr = function () {\n    return new XMLHttpRequest();\n  };\n} else {\n  // find the first MS implementation available\n  getXhr = _.first(['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'], function (appName) {\n    /* jshint unused: false */\n    try {\n      var test = new window.ActiveXObject(appName);\n      return function () {\n        return new window.ActiveXObject(appName);\n      };\n    } catch (e) {\n      return null;\n    }\n  });\n}\n\nif (!getXhr) {\n  throw new Error('getXhr(): XMLHttpRequest not available');\n}\n\nXhrConnector.prototype.request = function (params, cb) {\n  var xhr = getXhr();\n  var timeoutId;\n  var url = this.host.makeUrl(params);\n  var headers = this.host.getHeaders(params.headers);\n\n  var log = this.log;\n  var async = params.async === false ? false : asyncDefault;\n\n  if (params.auth) {\n    xhr.open(params.method || 'GET', url, async, params.auth.user, params.auth.pass);\n  } else {\n    xhr.open(params.method || 'GET', url, async);\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      clearTimeout(timeoutId);\n      log.trace(params.method, url, params.body, xhr.responseText, xhr.status);\n      var err = xhr.status ? void 0 : new ConnectionFault(xhr.statusText || 'Request failed to complete.');\n      cb(err, xhr.responseText, xhr.status);\n    }\n  };\n\n  if (headers) {\n    for (var key in headers) {\n      if (headers[key] !== void 0) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  xhr.send(params.body || void 0);\n\n  return function () {\n    xhr.abort();\n  };\n};\n\n},{\"../connection\":249,\"../errors\":255,\"../utils\":269}],255:[function(require,module,exports){\nvar _ = require('./utils');\nvar errors = module.exports;\n\nvar canCapture = (typeof Error.captureStackTrace === 'function');\nvar canStack = !!(new Error()).stack;\n\nfunction ErrorAbstract(msg, constructor) {\n  this.message = msg;\n\n  Error.call(this, this.message);\n\n  if (canCapture) {\n    Error.captureStackTrace(this, constructor);\n  }\n  else if (canStack) {\n    this.stack = (new Error()).stack;\n  }\n  else {\n    this.stack = '';\n  }\n}\nerrors._Abstract = ErrorAbstract;\n_.inherits(ErrorAbstract, Error);\n\n/**\n * Connection Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.ConnectionFault = function ConnectionFault(msg) {\n  ErrorAbstract.call(this, msg || 'Connection Failure', errors.ConnectionFault);\n};\n_.inherits(errors.ConnectionFault, ErrorAbstract);\n\n/**\n * No Living Connections\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.NoConnections = function NoConnections(msg) {\n  ErrorAbstract.call(this, msg || 'No Living connections', errors.NoConnections);\n};\n_.inherits(errors.NoConnections, ErrorAbstract);\n\n/**\n * Generic Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.Generic = function Generic(msg) {\n  ErrorAbstract.call(this, msg || 'Generic Error', errors.Generic);\n};\n_.inherits(errors.Generic, ErrorAbstract);\n\n/**\n * Request Timeout Error\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.RequestTimeout = function RequestTimeout(msg) {\n  ErrorAbstract.call(this, msg || 'Request Timeout', errors.RequestTimeout);\n};\n_.inherits(errors.RequestTimeout, ErrorAbstract);\n\n\n/**\n * Request Body could not be parsed\n * @param {String} [msg] - An error message that will probably end up in a log.\n */\nerrors.Serialization = function Serialization(msg) {\n  ErrorAbstract.call(this, msg || 'Unable to parse/serialize body', errors.Serialization);\n};\n_.inherits(errors.Serialization, ErrorAbstract);\n\n\n/**\n * Thrown when a browser compatability issue is detected (cough, IE, cough)\n */\nerrors.RequestTypeError = function RequestTypeError(feature) {\n  ErrorAbstract.call(this, 'Cross-domain AJAX requests ' + feature + ' are not supported', errors.RequestTypeError);\n};\n_.inherits(errors.RequestTypeError, ErrorAbstract);\n\nvar statusCodes = {\n\n  /**\n   * GatewayTimeout\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  504: 'Gateway Timeout',\n\n  /**\n   * ServiceUnavailable\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  503: 'Service Unavailable',\n\n  /**\n   * InternalServerError\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  500: 'Internal Server Error',\n\n  /**\n   * PreconditionFailed\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  412: 'Precondition Failed',\n\n  /**\n   * Conflict\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  409: 'Conflict',\n\n  /**\n   * AuthorizationException\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  403: 'Authorization Exception',\n\n  /**\n   * NotFound\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  404: 'Not Found',\n\n  /**\n   * AuthenticationException\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  401: 'Authentication Exception',\n\n  /**\n   * BadRequest\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  400: 'Bad Request',\n\n  /**\n   * MovedPermanently\n   * @param {String} [msg] - An error message that will probably end up in a log.\n   */\n  301: 'Moved Permanently'\n};\n\n_.each(statusCodes, function (name, status) {\n  var className = _.studlyCase(name);\n\n  function StatusCodeError(msg) {\n    ErrorAbstract.call(this, msg || name, StatusCodeError);\n  }\n\n  _.inherits(StatusCodeError, ErrorAbstract);\n  errors[className] = StatusCodeError;\n  errors[status] = StatusCodeError;\n});\n},{\"./utils\":269}],256:[function(require,module,exports){\n/**\n * Class to wrap URLS, formatting them and maintaining their separate details\n * @type {[type]}\n */\nmodule.exports = Host;\n\nvar url = require('url');\nvar qs = require('querystring');\nvar _ = require('./utils');\n\nvar startsWithProtocolRE = /^([a-z]+:)?\\/\\//;\nvar defaultProto = 'http:';\n\n/* jshint ignore:start */\nif (typeof window !== 'undefined') {\n  defaultProto = window.location.protocol;\n}\n/* jshint ignore:end */\n\nvar urlParseFields = [\n  'protocol', 'hostname', 'pathname', 'port', 'auth', 'query'\n];\n\nvar simplify = ['host', 'path'];\n\nvar sslDefaults = {\n  pfx: null,\n  key: null,\n  passphrase: null,\n  cert: null,\n  ca: null,\n  ciphers: null,\n  rejectUnauthorized: false,\n  secureProtocol: null\n};\n\n// simple reference used when formatting as a url\n// and defines when parsing from a string\nHost.defaultPorts = {\n  http: 80,\n  https: 443\n};\n\nfunction Host(config, globalConfig) {\n  config = config || {};\n  globalConfig = globalConfig || {};\n\n  // defaults\n  this.protocol = 'http';\n  this.host = 'localhost';\n  this.path = '';\n  this.port = 9200;\n  this.auth = null;\n  this.query = null;\n  this.headers = null;\n  this.suggestCompression = !!globalConfig.suggestCompression;\n\n  this.ssl = _.defaults({}, config.ssl || {}, globalConfig.ssl || {}, sslDefaults);\n\n  if (typeof config === 'string') {\n    var firstColon = config.indexOf(':');\n    var firstSlash = config.indexOf('/');\n    var noSlash = firstSlash === -1;\n    var portNoPath = firstColon > -1 && noSlash;\n    var portWithPath = !portNoPath && firstColon < firstSlash;\n    if ((noSlash || portNoPath || portWithPath) && !startsWithProtocolRE.test(config)) {\n      config = defaultProto + '//' + config;\n    }\n    config = _.pick(url.parse(config, false, true), urlParseFields);\n    // default logic for the port is to use 9200 for the default. When a string is specified though,\n    // we will use the default from the protocol of the string.\n    if (!config.port) {\n      var proto = config.protocol || 'http';\n      if (proto.charAt(proto.length - 1) === ':') {\n        proto = proto.substring(0, proto.length - 1);\n      }\n      if (Host.defaultPorts[proto]) {\n        config.port = Host.defaultPorts[proto];\n      }\n    }\n  }\n\n  if (_.isObject(config)) {\n    // move hostname/portname to host/port semi-intelligently.\n    _.each(simplify, function (to) {\n      var from = to + 'name';\n      if (config[from] && config[to]) {\n        if (config[to].indexOf(config[from]) === 0) {\n          config[to] = config[from];\n        }\n      } else if (config[from]) {\n        config[to] = config[from];\n      }\n      delete config[from];\n    });\n  } else {\n    config = {};\n  }\n\n  _.forOwn(config, function (val, prop) {\n    if (val != null) this[prop] = val;\n  }, this);\n\n  // make sure the query string is parsed\n  if (this.query === null) {\n    // majority case\n    this.query = {};\n  } else if (!_.isPlainObject(this.query)) {\n    this.query = qs.parse(this.query);\n  }\n\n  // make sure that the port is a number\n  if (_.isNumeric(this.port)) {\n    this.port = parseInt(this.port, 10);\n  } else {\n    this.port = 9200;\n  }\n\n  // make sure the path starts with a leading slash\n  if (this.path === '/') {\n    this.path = '';\n  } else if (this.path && this.path.charAt(0) !== '/') {\n    this.path = '/' + (this.path || '');\n  }\n\n  // strip trailing ':' on the protocol (when config comes from url.parse)\n  if (this.protocol.substr(-1) === ':') {\n    this.protocol = this.protocol.substring(0, this.protocol.length - 1);\n  }\n}\n\nHost.prototype.makeUrl = function (params) {\n  params = params || {};\n  // build the port\n  var port = '';\n  if (this.port !== Host.defaultPorts[this.protocol]) {\n    // add an actual port\n    port = ':' + this.port;\n  }\n\n  // build the path\n  var path = '' + (this.path || '') + (params.path || '');\n\n  // if path doesn't start with '/' add it.\n  if (path.charAt(0) !== '/') {\n    path = '/' + path;\n  }\n\n  // build the query string\n  var query = qs.stringify(this.getQuery(params.query));\n\n  var auth = '';\n  if (params.auth) {\n    auth = params.auth + '@';\n  } else if (this.auth && params.auth !== false) {\n    auth = this.auth + '@';\n  }\n\n  if (this.host) {\n    return this.protocol + '://' + auth + this.host + port + path + (query ? '?' + query : '');\n  } else {\n    return path + (query ? '?' + query : '');\n  }\n};\n\nfunction objectPropertyGetter(prop, preOverride) {\n  return function (overrides) {\n    if (preOverride) {\n      overrides = preOverride.call(this, overrides);\n    }\n\n    var obj = this[prop];\n    if (!obj && !overrides) {\n      return null;\n    }\n\n    if (overrides) {\n      obj = _.assign({}, obj, overrides);\n    }\n\n    return _.size(obj) ? obj : null;\n  };\n}\n\nHost.prototype.getHeaders = objectPropertyGetter('headers', function (overrides) {\n  if (!this.suggestCompression) {\n    return overrides;\n  }\n\n  return _.defaults(overrides || {}, {\n    'Accept-Encoding': 'gzip,deflate'\n  });\n});\n\nHost.prototype.getQuery = objectPropertyGetter('query', function (query) {\n  return typeof query === 'string' ? qs.parse(query) : query;\n});\n\nHost.prototype.toString = function () {\n  return this.makeUrl();\n};\n\n},{\"./utils\":269,\"querystring\":29,\"url\":30}],257:[function(require,module,exports){\n(function (process){\nvar _ = require('./utils');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\n\n/**\n * Log bridge, which is an [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\n * that sends events to one or more outputs/loggers. Setup these loggers by\n * specifying their config as the first argument, or by passing it to addOutput().\n *\n * @class Log\n * @uses Loggers.Stdio\n * @constructor\n * @param {string|Object|ArrayOfStrings|ArrayOfObjects} output - Either the level\n *  to setup a single logger, a full config object for alogger, or an array of\n *  config objects to use for creating log outputs.\n * @param {string} output.level - One of the keys in Log.levels (error, warning, etc.)\n * @param {string} output.type - The name of the logger to use for this output\n */\nfunction Log(config) {\n  config = config || {};\n\n  var i;\n  var outputs;\n\n  if (config.log) {\n    if (_.isArrayOfStrings(config.log)) {\n      outputs = [{\n        levels: config.log\n      }];\n    } else {\n      outputs = _.createArray(config.log, function (val) {\n        if (_.isPlainObject(val)) {\n          return val;\n        }\n        if (typeof val === 'string') {\n          return {\n            level: val\n          };\n        }\n      });\n    }\n\n    if (!outputs) {\n      throw new TypeError('Invalid logging output config. Expected either a log level, array of log levels, ' +\n        'a logger config object, or an array of logger config objects.');\n    }\n\n    for (i = 0; i < outputs.length; i++) {\n      this.addOutput(outputs[i]);\n    }\n  }\n}\n_.inherits(Log, EventEmitter);\n\nLog.loggers = require('./loggers');\n\nLog.prototype.close = function () {\n  this.emit('closing');\n  if (this.listenerCount()) {\n    console.error('Something is still listening for log events, but the logger is closing.');\n    this.clearAllListeners();\n  }\n};\n\nLog.prototype.listenerCount = function (event) {\n  // compatability for node < 0.10\n  if (EventEmitter.listenerCount) {\n    return EventEmitter.listenerCount(this, event);\n  } else {\n    return this.listeners(event).length;\n  }\n};\n\n/**\n * Levels observed by the loggers, ordered by rank\n *\n * @property levels\n * @type Array\n * @static\n */\nLog.levels = [\n  /**\n   * Event fired for error level log entries\n   * @event error\n   * @param {Error} error - The error object to log\n   */\n  'error',\n  /**\n   * Event fired for \"warning\" level log entries, which usually represent things\n   * like correctly formatted error responses from ES (400, ...) and recoverable\n   * errors (one node unresponsive)\n   *\n   * @event warning\n   * @param {String} message - A message to be logged\n   */\n  'warning',\n  /**\n   * Event fired for \"info\" level log entries, which usually describe what a\n   * client is doing (sniffing etc)\n   *\n   * @event info\n   * @param {String} message - A message to be logged\n   */\n  'info',\n  /**\n   * Event fired for \"debug\" level log entries, which will describe requests sent,\n   * including their url (no data, response codes, or exec times)\n   *\n   * @event debug\n   * @param {String} message - A message to be logged\n   */\n  'debug',\n  /**\n   * Event fired for \"trace\" level log entries, which provide detailed information\n   * about each request made from a client, including reponse codes, execution times,\n   * and a full curl command that can be copied and pasted into a terminal\n   *\n   * @event trace\n   * @param {String} method method, , body, responseStatus, responseBody\n   * @param {String} url - The url the request was made to\n   * @param {String} body - The body of the request\n   * @param {Integer} responseStatus - The status code returned from the response\n   * @param {String} responseBody - The body of the response\n   */\n  'trace'\n];\n\n/**\n * Converts a log config value (string or array) to an array of level names which\n * it represents\n *\n * @method parseLevels\n * @static\n * @private\n * @param  {String|ArrayOfStrings} input - Cound be a string to specify the max\n *   level, or an array of exact levels\n * @return {Array} -\n */\nLog.parseLevels = function (input) {\n  switch (typeof input) {\n  case 'string':\n    var i = _.indexOf(Log.levels, input);\n    if (i >= 0) {\n      return Log.levels.slice(0, i + 1);\n    }\n    /* fall through */\n  case 'object':\n    if (_.isArray(input)) {\n      var valid = _.intersection(input, Log.levels);\n      if (valid.length === input.length) {\n        return valid;\n      }\n    }\n    /* fall through */\n  default:\n    throw new TypeError('invalid logging level ' + input + '. Expected zero or more of these options: ' +\n      Log.levels.join(', '));\n  }\n};\n\n/**\n * Combine the array-like param into a simple string\n *\n * @method join\n * @static\n * @private\n * @param  {*} arrayish - An array like object that can be itterated by _.each\n * @return {String} - The final string.\n */\nLog.join = function (arrayish) {\n  return _.map(arrayish, function (item) {\n    if (_.isPlainObject(item)) {\n      return _.inspect(item) + '\\n';\n    } else {\n      return item.toString();\n    }\n  }).join(' ');\n};\n\n/**\n * Create a new logger, based on the config.\n *\n * @method addOutput\n * @param {object} config - An object with config options for the logger.\n * @param {String} [config.type=stdio] - The name of an output/logger. Options\n *   can be found in the `src/loggers` directory.\n * @param {String|ArrayOfStrings} [config.levels=warning] - The levels to output\n *   to this logger, when an array is specified no levels other than the ones\n *   specified will be listened to. When a string is specified, that and all lower\n *   levels will be logged.\n * @return {Logger}\n */\nLog.prototype.addOutput = function (config) {\n  config = config || {};\n\n  // force \"levels\" key\n  config.levels = Log.parseLevels(config.levels || config.level || 'warning');\n  delete config.level;\n\n  var Logger = _.funcEnum(config, 'type', Log.loggers, process.browser ? 'console' : 'stdio');\n  return new Logger(this, config);\n};\n\n/**\n * Log an error\n *\n * @method error\n * @param  {Error|String} error  The Error to log\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.error = function (e) {\n  if (this.listenerCount('error')) {\n    return this.emit('error', e instanceof Error ? e : new Error(e));\n  }\n};\n\n\n/**\n * Log a warning message\n *\n * @method warning\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.warning = function (/* ...msg */) {\n  if (this.listenerCount('warning')) {\n    return this.emit('warning', Log.join(arguments));\n  }\n};\n\n\n/**\n * Log useful info about what's going on\n *\n * @method info\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.info = function (/* ...msg */) {\n  if (this.listenerCount('info')) {\n    return this.emit('info', Log.join(arguments));\n  }\n};\n\n/**\n * Log a debug level message\n *\n * @method debug\n * @param  {*} msg* - Any amount of messages that will be joined before logged\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.debug = function (/* ...msg */) {\n  if (this.listenerCount('debug')) {\n    return this.emit('debug', Log.join(arguments) /*+ _.getStackTrace(Log.prototype.debug)*/);\n  }\n};\n\n/**\n * Log a trace level message\n *\n * @method trace\n * @param {String} method - HTTP request method\n * @param {String|Object} requestUrl - URL requested. If the value is an object,\n *   it is expected to be the return value of Node's url.parse()\n * @param {String} body - The request's body\n * @param {String} responseBody - body returned from ES\n * @param {String} responseStatus - HTTP status code\n * @return {Boolean} - True if any outputs accepted the message\n */\nLog.prototype.trace = function (method, requestUrl, body, responseBody, responseStatus) {\n  if (this.listenerCount('trace')) {\n    return this.emit('trace', Log.normalizeTraceArgs(method, requestUrl, body, responseBody, responseStatus));\n  }\n};\n\nLog.normalizeTraceArgs = function (method, requestUrl, body, responseBody, responseStatus) {\n  if (typeof requestUrl === 'string') {\n    requestUrl = url.parse(requestUrl, true, true);\n  } else {\n    requestUrl = _.clone(requestUrl);\n    if (requestUrl.path) {\n      requestUrl.query = url.parse(requestUrl.path, true, false).query;\n    }\n    if (!requestUrl.pathname && requestUrl.path) {\n      requestUrl.pathname = requestUrl.path.split('?').shift();\n    }\n  }\n\n  delete requestUrl.auth;\n\n  return {\n    method: method,\n    url: url.format(requestUrl),\n    body: body,\n    status: responseStatus,\n    response: responseBody\n  };\n};\n\nmodule.exports = Log;\n\n}).call(this,require('_process'))\n},{\"./loggers\":259,\"./utils\":269,\"_process\":25,\"events\":22,\"url\":30}],258:[function(require,module,exports){\nvar _ = require('./utils');\n\n/**\n * Abstract class providing common functionality to loggers\n * @param {[type]} log [description]\n * @param {[type]} config [description]\n */\nfunction LoggerAbstract(log, config) {\n  this.log = log;\n  this.listeningLevels = [];\n\n  _.makeBoundMethods(this);\n\n  // when the log closes, remove our event listeners\n  this.log.once('closing', this.bound.cleanUpListeners);\n\n  this.setupListeners(config.levels);\n}\n\nfunction padNumToTen(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n/**\n * Create a timestamp string used in the format function. Defers to Log.timestamp if it is defined,\n * Also, feel free to override this at the logger level.\n * @return {String} - Timestamp in ISO 8601 UTC\n */\nLoggerAbstract.prototype.timestamp = function () {\n  var d = new Date();\n  return d.getUTCFullYear() + '-' +\n    padNumToTen(d.getUTCMonth() + 1) + '-' +\n    padNumToTen(d.getUTCDate()) + 'T' +\n    padNumToTen(d.getUTCHours()) + ':' +\n    padNumToTen(d.getUTCMinutes()) + ':' +\n    padNumToTen(d.getUTCSeconds()) + 'Z';\n};\n\nfunction indent(text, spaces) {\n  var space = _.repeat(' ', spaces || 2);\n  return (text || '').split(/\\r?\\n/).map(function (line) {\n    return space + line;\n  }).join('\\n');\n}\n\nLoggerAbstract.prototype.format = function (label, message) {\n  return label + ': ' + this.timestamp() + '\\n' + indent(message) + '\\n\\n';\n};\n\nLoggerAbstract.prototype.write = function () {\n  throw new Error('This should be overwritten by the logger');\n};\n\n/**\n * Clear the current event listeners and then re-listen for events based on the level specified\n *\n * @method setupListeners\n * @private\n * @param  {Integer} level - The max log level that this logger should listen to\n * @return {undefined}\n */\nLoggerAbstract.prototype.setupListeners = function (levels) {\n  this.cleanUpListeners();\n\n  this.listeningLevels = [];\n\n  _.each(levels, function (level) {\n    var fnName = 'on' + _.ucfirst(level);\n    if (this.bound[fnName]) {\n      this.listeningLevels.push(level);\n      this.log.on(level, this.bound[fnName]);\n    } else {\n      throw new Error('Unable to listen for level \"' + level + '\"');\n    }\n  }, this);\n};\n\n/**\n * Clear the current event listeners\n *\n * @method cleanUpListeners\n * @private\n * @return {undefined}\n */\nLoggerAbstract.prototype.cleanUpListeners = _.handler(function () {\n  _.each(this.listeningLevels, function (level) {\n    this.log.removeListener(level, this.bound['on' + _.ucfirst(level)]);\n  }, this);\n});\n\n/**\n * Handler for the logs \"error\" event\n *\n * @method onError\n * @private\n * @param  {Error} e - The Error object to log\n * @return {undefined}\n */\nLoggerAbstract.prototype.onError = _.handler(function (e) {\n  this.write((e.name === 'Error' ? 'ERROR' : e.name), e.stack);\n});\n\n/**\n * Handler for the logs \"warning\" event\n *\n * @method onWarning\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onWarning = _.handler(function (msg) {\n  this.write('WARNING', msg);\n});\n\n/**\n * Handler for the logs \"info\" event\n *\n * @method onInfo\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onInfo = _.handler(function (msg) {\n  this.write('INFO', msg);\n});\n\n/**\n * Handler for the logs \"debug\" event\n *\n * @method onDebug\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onDebug = _.handler(function (msg) {\n  this.write('DEBUG', msg);\n});\n\n/**\n * Handler for the logs \"trace\" event\n *\n * @method onTrace\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nLoggerAbstract.prototype.onTrace = _.handler(function (requestDetails) {\n  this.write('TRACE', this._formatTraceMessage(requestDetails));\n});\n\nLoggerAbstract.prototype._formatTraceMessage = function (req) {\n  return '-> ' + req.method + ' ' + req.url + '\\n' +\n    this._prettyJson(req.body) + '\\n' +\n    '<- ' + req.status + '\\n' +\n    this._prettyJson(req.response);\n/*\n-> GET https://sldfkjsdlfksjdf:9200/slsdkfjlxckvxhclks?sdlkj=sdlfkje\n{\n  asdflksjdf\n}\n\n<- 502\n{\n  sldfksjdlf\n}\n*/\n};\n\nLoggerAbstract.prototype._prettyJson = function (body) {\n  try {\n    if (typeof body === 'string') {\n      body = JSON.parse(body);\n    }\n    return JSON.stringify(body, null, '  ').replace(/'/g, '\\\\u0027');\n  } catch (e) {\n    return typeof body === 'string' ? body : '';\n  }\n};\n\nmodule.exports = LoggerAbstract;\n\n},{\"./utils\":269}],259:[function(require,module,exports){\nmodule.exports = {\n  console: require('./console')\n};\n\n},{\"./console\":260}],260:[function(require,module,exports){\n/**\n * Special version of the Stream logger, which logs errors and warnings to stderr and all other\n * levels to stdout.\n *\n * @class Loggers.Console\n * @extends LoggerAbstract\n * @constructor\n * @param {Object} config - The configuration for the Logger\n * @param {string} config.level - The highest log level for this logger to output.\n * @param {Log} bridge - The object that triggers logging events, which we will record\n */\n\nmodule.exports = Console;\n\nvar LoggerAbstract = require('../logger');\nvar _ = require('../utils');\n\nfunction Console(log, config) {\n  LoggerAbstract.call(this, log, config);\n\n  // config/state\n  this.color = _.has(config, 'color') ? !!config.color : true;\n}\n_.inherits(Console, LoggerAbstract);\n\n/**\n * Override the LoggerAbstract's setup listeners to do a little extra setup\n *\n * @param  {Array} levels - The levels that we should be listeneing for\n */\nConsole.prototype.setupListeners = function (levels) {\n  // call the super method\n  LoggerAbstract.prototype.setupListeners.call(this, levels);\n};\n\nConsole.prototype.write = function (label, message, to) {\n  if (console[to]) {\n    console[to](this.format(label, message));\n  }\n};\n\n/**\n * Handler for the bridges \"error\" event\n *\n * @method onError\n * @private\n * @param  {Error} e - The Error object to log\n * @return {undefined}\n */\nConsole.prototype.onError = _.handler(function (e) {\n  var to = console.error ? 'error' : 'log';\n  this.write(e.name === 'Error' ? 'ERROR' : e.name, e.stack || e.message, to);\n});\n\n/**\n * Handler for the bridges \"warning\" event\n *\n * @method onWarning\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onWarning = _.handler(function (msg) {\n  this.write('WARNING', msg, console.warn ? 'warn' : 'log');\n});\n\n/**\n * Handler for the bridges \"info\" event\n *\n * @method onInfo\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onInfo = _.handler(function (msg) {\n  this.write('INFO', msg, console.info ? 'info' : 'log');\n});\n\n/**\n * Handler for the bridges \"debug\" event\n *\n * @method onDebug\n * @private\n * @param  {String} msg - The message to be logged\n * @return {undefined}\n */\nConsole.prototype.onDebug = _.handler(function (msg) {\n  this.write('DEBUG', msg, console.debug ? 'debug' : 'log');\n});\n/**\n * Handler for the bridges \"trace\" event\n *\n * @method onTrace\n * @private\n * @return {undefined}\n */\nConsole.prototype.onTrace = _.handler(function (msg) {\n  this.write('TRACE', this._formatTraceMessage(msg), 'log');\n});\n\n},{\"../logger\":258,\"../utils\":269}],261:[function(require,module,exports){\nvar _ = require('./utils');\nvar extractHostPartsRE = /\\[\\/*([^:]+):(\\d+)\\]/;\n\nfunction makeNodeParser(hostProp) {\n  return function (nodes) {\n    return _.transform(nodes, function (hosts, node, id) {\n      if (!node[hostProp]) {\n        return;\n      }\n\n      var hostnameMatches = extractHostPartsRE.exec(node[hostProp]);\n      if (!hostnameMatches) {\n        throw new Error('node\\'s ' + hostProp + ' property (' + JSON.stringify(node[hostProp]) +\n          ') does not match the expected pattern ' + extractHostPartsRE + '.');\n      }\n\n      hosts.push({\n        host: hostnameMatches[1],\n        port: parseInt(hostnameMatches[2], 10),\n        _meta: {\n          id: id,\n          name: node.name,\n          hostname: node.hostname,\n          version: node.version\n        }\n      });\n    }, []);\n  };\n}\n\nmodule.exports = makeNodeParser('http_address');\nmodule.exports.thrift = makeNodeParser('transport_address');\n\n},{\"./utils\":269}],262:[function(require,module,exports){\nmodule.exports = {\n  random: require('./random'),\n  roundRobin: require('./round_robin')\n};\n\n},{\"./random\":263,\"./round_robin\":264}],263:[function(require,module,exports){\n/**\n * Selects a connection randomly\n *\n * @module selectors\n * @type {Function}\n * @param {Array} connection - The list of connections to choose from\n * @return {Connection} - The selected connection\n */\nmodule.exports = function RandomSelector(connections) {\n  return connections[Math.floor(Math.random() * connections.length)];\n};\n\n},{}],264:[function(require,module,exports){\n/**\n * Selects a connection the simplest way possible, Round Robin\n *\n * @module selectors\n * @type {Function}\n * @param {Array} connections - The list of connections that this selector needs to choose from\n * @return {Connection} - The selected connection\n */\nmodule.exports = function (connections) {\n  var connection = connections[0];\n  connections.push(connections.shift());\n  return connection;\n};\n\n},{}],265:[function(require,module,exports){\n/* global angular */\nvar _ = require('../utils');\nvar JsonSerializer = require('../serializers/json');\n\nfunction AngularSerializer() {}\n_.inherits(AngularSerializer, JsonSerializer);\n\n// mimic the JsonSerializer's encode method, but use angular's toJson instead\nAngularSerializer.prototype.encode = function (val) {\n  switch (typeof val) {\n  case 'string':\n    return val;\n  case 'object':\n    if (val) return angular.toJson(val);\n    /* falls through */\n  default:\n    return;\n  }\n};\n\nmodule.exports = AngularSerializer;\n},{\"../serializers/json\":266,\"../utils\":269}],266:[function(require,module,exports){\n/**\n * Simple JSON serializer\n * @type {[type]}\n */\nmodule.exports = Json;\n\nvar _ = require('../utils');\n\nfunction Json() {}\n\n/**\n * Converts a value into a string, or an error\n * @param  {*} val - Any value, methods are stripped and\n * see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify about other params\n * @return {String|Error} - A string is always returned, unless an error occured. then it will be that error.\n */\nJson.prototype.serialize = function (val, replacer, spaces) {\n  switch (typeof val) {\n  case 'string':\n    return val;\n  case 'object':\n    if (val) {\n      return JSON.stringify(val, replacer, spaces);\n    }\n    /* falls through */\n  default:\n    return;\n  }\n};\n\n/**\n * Parse a JSON string, if it is already parsed it is ignored\n * @param  {String} str - the string to parse\n * @return {[type]}\n */\nJson.prototype.deserialize = function (str) {\n  if (typeof str === 'string') {\n    try {\n      return JSON.parse(str);\n    } catch (e) {}\n  }\n};\n\nJson.prototype.bulkBody = function (val) {\n  var body = '', i;\n\n  if (_.isArray(val)) {\n    for (i = 0; i < val.length; i++) {\n      body += this.serialize(val[i]) + '\\n';\n    }\n  } else if (typeof val === 'string') {\n    // make sure the string ends in a new line\n    body = val + (val[val.length - 1] === '\\n' ? '' : '\\n');\n  } else {\n    throw new TypeError('Bulk body should either be an Array of commands/string, or a String');\n  }\n\n  return body;\n};\n\n},{\"../utils\":269}],267:[function(require,module,exports){\n/**\n * Class that manages making request, called by all of the API methods.\n * @type {[type]}\n */\nmodule.exports = Transport;\n\nvar _ = require('./utils');\nvar errors = require('./errors');\nvar Host = require('./host');\nvar Promise = require('bluebird');\nvar patchSniffOnConnectionFault = require('./transport/sniff_on_connection_fault');\n\nfunction Transport(config) {\n  var self = this;\n  config = self._config = config || {};\n\n  var LogClass = (typeof config.log === 'function') ? config.log : require('./log');\n  config.log = self.log = new LogClass(config);\n\n  // setup the connection pool\n  var ConnectionPool = _.funcEnum(config, 'connectionPool', Transport.connectionPools, 'main');\n  self.connectionPool = new ConnectionPool(config);\n\n  // setup the serializer\n  var Serializer = _.funcEnum(config, 'serializer', Transport.serializers, 'json');\n  self.serializer = new Serializer(config);\n\n  // setup the nodesToHostCallback\n  self.nodesToHostCallback = _.funcEnum(config, 'nodesToHostCallback', Transport.nodesToHostCallbacks, 'main');\n\n  // setup max retries\n  self.maxRetries = config.hasOwnProperty('maxRetries') ? config.maxRetries : 3;\n\n  // setup endpoint to use for sniffing\n  self.sniffEndpoint = config.hasOwnProperty('sniffEndpoint') ? config.sniffEndpoint : '/_nodes/_all/clear';\n\n  // setup requestTimeout default\n  self.requestTimeout = config.hasOwnProperty('requestTimeout') ? config.requestTimeout : 30000;\n\n  if (config.hasOwnProperty('defer')) {\n    self.defer = config.defer;\n  }\n\n  // randomizeHosts option\n  var randomizeHosts = config.hasOwnProperty('randomizeHosts') ? !!config.randomizeHosts : true;\n\n  if (config.host) {\n    config.hosts = config.host;\n  }\n\n  if (config.hosts) {\n    var hostsConfig = _.createArray(config.hosts, function (val) {\n      if (_.isPlainObject(val) || _.isString(val) || val instanceof Host) {\n        return val;\n      }\n    });\n\n    if (!hostsConfig) {\n      throw new TypeError('Invalid hosts config. Expected a URL, an array of urls, a host config object, ' +\n        'or an array of host config objects.');\n    }\n\n    var hosts = _.map(hostsConfig, function (conf) {\n      return (conf instanceof Host) ? conf : new Host(conf, self._config);\n    });\n\n    if (randomizeHosts) {\n      hosts = _.shuffle(hosts);\n    }\n\n    self.connectionPool.setHosts(hosts);\n  }\n\n  if (config.sniffOnStart) {\n    self.sniff();\n  }\n\n  if (config.sniffInterval) {\n    self._timeout(function doSniff() {\n      self.sniff();\n      self._timeout(doSniff, config.sniffInterval);\n    }, config.sniffInterval);\n  }\n\n  if (config.sniffOnConnectionFault) {\n    patchSniffOnConnectionFault(self);\n  }\n}\n\nTransport.connectionPools = {\n  main: require('./connection_pool')\n};\n\nTransport.serializers = {\n  json: require('./serializers/json'),\n  angular: require('./serializers/angular')\n};\n\nTransport.nodesToHostCallbacks = {\n  main: require('./nodes_to_host')\n};\n\nTransport.prototype.defer = function () {\n  return Promise.defer();\n};\n\n/**\n * Perform a request with the client's transport\n *\n * @method request\n * @todo async body writing\n * @todo abort\n * @todo access to custom headers, modifying of request in general\n * @param {object} params\n * @param {Number} params.requestTimeout - timeout for the entire request (inculding all retries)\n * @param {Number} params.maxRetries - number of times the request will be re-run in\n *   the original node chosen can not be connected to.\n * @param {String} params.url - The url for the request\n * @param {String} params.method - The HTTP method for the request\n * @param {String} params.body - The body of the HTTP request\n * @param {Function} cb - A function to call back with (error, responseBody, responseStatus)\n */\nTransport.prototype.request = function (params, cb) {\n  var self = this;\n  var remainingRetries = this.maxRetries;\n  var requestTimeout = this.requestTimeout;\n\n  var connection; // set in sendReqWithConnection\n  var aborted = false; // several connector will respond with an error when the request is aborted\n  var requestAborter; // an abort function, returned by connection#request()\n  var requestTimeoutId; // the id of the ^timeout\n  var ret; // the object returned to the user, might be a promise\n  var defer; // the defer object, will be set when we are using promises.\n\n  self.log.debug('starting request', params);\n\n  if (params.body && params.method === 'GET') {\n    _.nextTick(respond, new TypeError('Body can not be sent with method \"GET\"'));\n    return;\n  }\n\n  // serialize the body\n  if (params.body) {\n    params.body = self.serializer[params.bulkBody ? 'bulkBody' : 'serialize'](params.body);\n  }\n\n  if (params.hasOwnProperty('maxRetries')) {\n    remainingRetries = params.maxRetries;\n  }\n\n  if (params.hasOwnProperty('requestTimeout')) {\n    requestTimeout = params.requestTimeout;\n  }\n\n  params.req = {\n    method: params.method,\n    path: params.path || '/',\n    query: params.query,\n    body: params.body,\n  };\n\n  function sendReqWithConnection(err, _connection) {\n    if (aborted) {\n      return;\n    }\n\n    if (err) {\n      respond(err);\n    } else if (_connection) {\n      connection = _connection;\n      requestAborter = connection.request(params.req, checkRespForFailure);\n    } else {\n      self.log.warning('No living connections');\n      respond(new errors.NoConnections());\n    }\n  }\n\n  function checkRespForFailure(err, body, status, headers) {\n    if (aborted) {\n      return;\n    }\n\n    requestAborter = void 0;\n\n    if (err instanceof errors.RequestTypeError) {\n      self.log.error('Connection refused to execute the request', err);\n      respond(err, body, status, headers);\n      return;\n    }\n\n    if (err) {\n      connection.setStatus('dead');\n      if (remainingRetries) {\n        remainingRetries--;\n        self.log.error('Request error, retrying' + (err.message ? ' -- ' + err.message : ''));\n        self.connectionPool.select(sendReqWithConnection);\n      } else {\n        self.log.error('Request complete with error' + (err.message ? ' -- ' + err.message : ''));\n        respond(new errors.ConnectionFault(err));\n      }\n    } else {\n      self.log.debug('Request complete');\n      respond(void 0, body, status, headers);\n    }\n  }\n\n  function respond(err, body, status, headers) {\n    if (aborted) {\n      return;\n    }\n\n    self._timeout(requestTimeoutId);\n    var parsedBody;\n    var isJson = !headers || (headers['content-type'] && ~headers['content-type'].indexOf('application/json'));\n\n    if (!err && body) {\n      if (isJson) {\n        parsedBody = self.serializer.deserialize(body);\n        if (parsedBody == null) {\n          err = new errors.Serialization();\n          parsedBody = body;\n        }\n      } else {\n        parsedBody = body;\n      }\n    }\n\n    // does the response represent an error?\n    if (\n      (!err || err instanceof errors.Serialization)\n      && (status < 200 || status >= 300)\n      && (!params.ignore || !_.contains(params.ignore, status))\n    ) {\n      if (errors[status]) {\n        err = new errors[status](parsedBody && parsedBody.error);\n      } else {\n        err = new errors.Generic('unknown error');\n      }\n    }\n\n    // can we cast notfound to false?\n    if (params.castExists) {\n      if (err && err instanceof errors.NotFound) {\n        parsedBody = false;\n        err = void 0;\n      } else {\n        parsedBody = !err;\n      }\n    }\n\n    // how do we send the response?\n    if (typeof cb === 'function') {\n      if (err) {\n        cb(err, parsedBody, status);\n      } else {\n        cb(void 0, parsedBody, status);\n      }\n    } else if (err) {\n      err.body = parsedBody;\n      err.status = status;\n      defer.reject(err);\n    } else {\n      defer.resolve(parsedBody);\n    }\n  }\n\n  function abortRequest() {\n    if (aborted) {\n      return;\n    }\n\n    aborted = true;\n    remainingRetries = 0;\n    self._timeout(requestTimeoutId);\n    if (typeof requestAborter === 'function') {\n      requestAborter();\n    }\n  }\n\n  if (requestTimeout && requestTimeout !== Infinity) {\n    requestTimeoutId = this._timeout(function () {\n      respond(new errors.RequestTimeout('Request Timeout after ' + requestTimeout + 'ms'));\n      abortRequest();\n    }, requestTimeout);\n  }\n\n  // determine the response based on the presense of a callback\n  if (typeof cb === 'function') {\n    ret = {\n      abort: abortRequest\n    };\n  } else {\n    defer = this.defer();\n    ret = defer.promise;\n    ret.abort = abortRequest;\n  }\n\n\n  if (connection) {\n    sendReqWithConnection(void 0, connection);\n  } else {\n    self.connectionPool.select(sendReqWithConnection);\n  }\n\n  return ret;\n};\n\nTransport.prototype._timeout = function (cb, delay) {\n  this._timers = this._timers || [];\n  var id;\n\n  if ('function' !== typeof cb) {\n    id = cb;\n    cb = void 0;\n  }\n\n  if (cb) {\n    // set the timer\n    id = setTimeout(cb, delay);\n    this._timers.push(id);\n    return id;\n  }\n\n  if (id) {\n    clearTimeout(id);\n\n    var i = this._timers.indexOf(id);\n    if (i !== -1) {\n      this._timers.splice(i, 1);\n    }\n  }\n};\n\n/**\n * Ask an ES node for a list of all the nodes, add/remove nodes from the connection\n * pool as appropriate\n *\n * @param  {Function} cb - Function to call back once complete\n */\nTransport.prototype.sniff = function (cb) {\n  var connectionPool = this.connectionPool;\n  var nodesToHostCallback = this.nodesToHostCallback;\n  var log = this.log;\n  var globalConfig = this._config;\n\n  // make cb a function if it isn't\n  cb = typeof cb === 'function' ? cb : _.noop;\n\n  this.request({\n    path: this.sniffEndpoint,\n    method: 'GET'\n  }, function (err, resp, status) {\n    if (!err && resp && resp.nodes) {\n      var hostsConfigs;\n\n      try {\n        hostsConfigs = nodesToHostCallback(resp.nodes);\n      } catch (e) {\n        log.error(new Error('Unable to convert node list from ' + this.sniffEndpoint +\n          ' to hosts durring sniff. Encountered error:\\n' + (e.stack || e.message)));\n        return;\n      }\n\n      connectionPool.setHosts(_.map(hostsConfigs, function (hostConfig) {\n        return new Host(hostConfig, globalConfig);\n      }));\n    }\n    cb(err, resp, status);\n  });\n};\n\n/**\n * Close the Transport, which closes the logs and connection pool\n * @return {[type]} [description]\n */\nTransport.prototype.close = function () {\n  this.log.close();\n  _.each(this._timers, clearTimeout);\n  this.connectionPool.close();\n};\n\n},{\"./connection_pool\":250,\"./errors\":255,\"./host\":256,\"./log\":257,\"./nodes_to_host\":261,\"./serializers/angular\":265,\"./serializers/json\":266,\"./transport/sniff_on_connection_fault\":268,\"./utils\":269,\"bluebird\":35}],268:[function(require,module,exports){\nvar _ = require('../utils');\n\n\n/**\n * Patch the transport's connection pool to schedule a sniff after a connection fails.\n * When a connection fails for the first time it will schedule a sniff 1 second in the\n * future, and increase the timeout based on the deadTimeout algorithm chosen by the\n * connectionPool, and the number of times the sniff has failed.\n *\n * @param  {Transport} transport - the transport that will be using this behavior\n * @return {undefined}\n */\nmodule.exports = function setupSniffOnConnectionFault(transport) {\n  var failures = 0;\n  var pool = transport.connectionPool;\n  var originalOnDied = pool._onConnectionDied;\n\n  // do the actual sniff, if the sniff is unable to\n  // connect to a node this function will be called again by the connectionPool\n  var work = function () {\n    work.timerId = transport._timeout(work.timerId);\n    transport.sniff();\n  };\n\n  // create a function that will count down to a\n  // point n milliseconds into the future\n  var countdownTo = function (ms) {\n    var start = _.now();\n    return function () {\n      return start - ms;\n    };\n  };\n\n  // overwrite the function, but still call it\n  pool._onConnectionDied = function (connection, wasAlreadyDead) {\n    var ret = originalOnDied.call(pool, connection, wasAlreadyDead);\n\n    // clear the failures if this is the first failure we have seen\n    failures = work.timerId ? failures + 1 : 0;\n\n    var ms = pool.calcDeadTimeout(failures, 1000);\n\n    if (work.timerId && ms < work.timerId && work.countdown()) {\n      // clear the timer\n      work.timerId = transport._timeout(work.timerId);\n    }\n\n    if (!work.timerId) {\n      work.timerId = transport._timeout(work, ms);\n      work.countdown = countdownTo(ms);\n    }\n\n    return ret;\n  };\n\n  pool._onConnectionDied.restore = function () {\n    pool._onConnectionDied = originalOnDied;\n  };\n};\n},{\"../utils\":269}],269:[function(require,module,exports){\n(function (process,Buffer){\nvar path = require('path');\nvar _ = require('lodash-node/modern');\nvar nodeUtils = require('util');\n\n/**\n * Custom utils library, basically a modified version of [lodash](http://lodash.com/docs) +\n * [node.utils](http://nodejs.org/api/util.html#util_util) that doesn't use mixins to prevent\n * confusion when requiring lodash itself.\n *\n * @class utils\n * @static\n */\nvar utils = _.extend({}, _, nodeUtils);\n_ = utils;\n\n/**\n * Link to [path.join](http://nodejs.org/api/path.html#path_path_join_path1_path2)\n *\n * @method utils.joinPath\n * @type {function}\n */\nutils.joinPath = path.join;\n\n/**\n * Recursively merge two objects, walking into each object and concating arrays. If both to and from have a value at a\n * key, but the values' types don't match to's value is left unmodified. Only Array and Object values are merged - that\n * it to say values with a typeof \"object\"\n *\n * @param  {Object} to - Object to merge into (no cloning, the original object\n *   is modified)\n * @param  {Object} from - Object to pull changed from\n * @return {Object} - returns the modified to value\n */\nutils.deepMerge = function (to, from) {\n  _.each(from, function (fromVal, key) {\n    switch (typeof to[key]) {\n    case 'undefined':\n      to[key] = from[key];\n      break;\n    case 'object':\n      if (_.isArray(to[key]) && _.isArray(from[key])) {\n        to[key] = to[key].concat(from[key]);\n      }\n      else if (_.isPlainObject(to[key]) && _.isPlainObject(from[key])) {\n        utils.deepMerge(to[key], from[key]);\n      }\n    }\n  });\n  return to;\n};\n\n/**\n * Test if a value is an array and it's contents are of a specific type\n *\n * @method isArrayOf<Strings|Object|Array|Finite|Function|RegExp>s\n * @param  {Array} arr - An array to check\n * @return {Boolean}\n */\n_.each([\n  'String',\n  'Object',\n  'PlainObject',\n  'Array',\n  'Finite',\n  'Function',\n  'RegExp'\n], function (type) {\n  var check = _['is' + type];\n\n  utils['isArrayOf' + type + 's'] = function (arr) {\n    // quick shallow check of arrays\n    return _.isArray(arr) && _.every(arr.slice(0, 10), check);\n  };\n});\n\n\n/**\n * Capitalize the first letter of a word\n *\n * @method  ucfirst\n * @param  {string} word - The word to transform\n * @return {string}\n */\nutils.ucfirst = function (word) {\n  return word[0].toUpperCase() + word.substring(1).toLowerCase();\n};\n\n/**\n * Base algo for studlyCase and camelCase\n * @param  {boolean} firstWordCap - Should the first character of the first word be capitalized\n * @return {Function}\n */\nfunction adjustWordCase(firstWordCap, otherWordsCap, sep) {\n  return function (string) {\n    var i = 0;\n    var words = [];\n    var word = '';\n    var code, c, upper, lower;\n\n    for (; i < string.length; i++) {\n      code = string.charCodeAt(i);\n      c = string.charAt(i);\n      lower = (code >= 97 && code <= 122) || (code >= 48 && code <= 57);\n      upper = code >= 65 && code <= 90;\n\n      if (upper || !lower) {\n        // new word\n        if (word.length) {\n          words.push(word);\n        }\n        word = '';\n      }\n\n      if (upper || lower) {\n        if (lower && word.length) {\n          word += c;\n        } else {\n          if ((!words.length && firstWordCap) || (words.length && otherWordsCap)) {\n            word = c.toUpperCase();\n          }\n          else {\n            word = c.toLowerCase();\n          }\n        }\n      }\n    }\n    if (word.length) {\n      words.push(word);\n    }\n    // add the leading underscore back to strings the had it originally\n    if (words.length && string.charAt(0) === '_') {\n      words[0] = '_' + words[0];\n    }\n    return words.join(sep);\n  };\n}\n\n/**\n * Transform a string into StudlyCase\n *\n * @method studlyCase\n * @param  {String} string\n * @return {String}\n */\nutils.studlyCase = adjustWordCase(true, true, '');\n\n/**\n * Transform a string into camelCase\n *\n * @method camelCase\n * @param  {String} string\n * @return {String}\n */\nutils.camelCase = adjustWordCase(false, true, '');\n\n/**\n * Transform a string into snakeCase\n *\n * @method snakeCase\n * @param  {String} string\n * @return {String}\n */\nutils.snakeCase = adjustWordCase(false, false, '_');\n\n/**\n * Lower-case a string, and return an empty string if any is not a string\n *\n * @param any {*} - Something or nothing\n * @returns {string}\n */\nutils.toLowerString = function (any) {\n  if (any) {\n    if (typeof any !== 'string') {\n      any = any.toString();\n    }\n  } else {\n    any = '';\n  }\n  return any.toLowerCase();\n};\n\n/**\n * Upper-case the string, return an empty string if any is not a string\n *\n * @param any {*} - Something or nothing\n * @returns {string}\n */\nutils.toUpperString = function (any) {\n  if (any) {\n    if (typeof any !== 'string') {\n      any = any.toString();\n    }\n  } else {\n    any = '';\n  }\n  return any.toUpperCase();\n};\n\n/**\n * Test if a value is \"numeric\" meaning that it can be transformed into something besides NaN\n *\n * @method isNumeric\n * @param  {*} val\n * @return {Boolean}\n */\nutils.isNumeric = function (val) {\n  return typeof val !== 'object' && val - parseFloat(val) >= 0;\n};\n\n// regexp to test for intervals\nvar intervalRE = /^(\\d+(?:\\.\\d+)?)([Mwdhmsy])$/;\n\n/**\n * Test if a string represents an interval (eg. 1m, 2Y)\n *\n * @method isInterval\n * @param {String} val\n * @return {Boolean}\n */\nutils.isInterval = function (val) {\n  return !!(val.match && val.match(intervalRE));\n};\n\n/**\n * Repeat a string n times\n *\n * @todo TestPerformance\n * @method repeat\n * @param {String} what - The string to repeat\n * @param {Number} times - Times the string should be repeated\n * @return {String}\n */\nutils.repeat = function (what, times) {\n  return (new Array(times + 1)).join(what);\n};\n\n/**\n * Call a function, applying the arguments object to it in an optimized way, rather than always turning it into an array\n *\n * @param func {Function} - The function to execute\n * @param context {*} - The context the function will be executed with\n * @param args {Arguments} - The arguments to send to func\n * @param [sliceIndex=0] {Integer} - The index that args should be sliced at, before feeding args to func\n * @returns {*} - the return value of func\n */\nutils.applyArgs = function (func, context, args, sliceIndex) {\n  sliceIndex = sliceIndex || 0;\n  switch (args.length - sliceIndex) {\n  case 0:\n    return func.call(context);\n  case 1:\n    return func.call(context, args[0 + sliceIndex]);\n  case 2:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex]);\n  case 3:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex], args[2 + sliceIndex]);\n  case 4:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex], args[2 + sliceIndex], args[3 + sliceIndex]);\n  case 5:\n    return func.call(context, args[0 + sliceIndex], args[1 + sliceIndex],\n      args[2 + sliceIndex], args[3 + sliceIndex], args[4 + sliceIndex]);\n  default:\n    return func.apply(context, Array.prototype.slice.call(args, sliceIndex));\n  }\n};\n\n/**\n * Schedule a function to be called on the next tick, and supply it with these arguments\n * when it is called.\n * @return {[type]} [description]\n */\n_.nextTick = function (cb) {\n  // bind the function and schedule it\n  process.nextTick(_.bindKey(_, 'applyArgs', cb, null, arguments, 1));\n};\n\n/**\n * Marks a method as a handler. Currently this just makes a property on the method\n * flagging it to be bound to the object at object creation when \"makeBoundMethods\" is called\n *\n * ```\n * ClassName.prototype.methodName = _.handler(function () {\n *   // this will always be bound when called via classInstance.bound.methodName\n *   this === classInstance\n * });\n * ```\n *\n * @alias _.scheduled\n * @param  {Function} func - The method that is being defined\n * @return {Function}\n */\n_.handler = function (func) {\n  func._provideBound = true;\n  return func;\n};\n_.scheduled = _.handler;\n\n/**\n * Creates an \"bound\" property on an object, which all or a subset of methods from\n * the object which are bound to the original object.\n *\n * ```\n * var obj = {\n *   onEvent: function () {}\n * };\n *\n * _.makeBoundMethods(obj);\n *\n * obj.bound.onEvent() // is bound to obj, and can safely be used as an event handler.\n * ```\n *\n * @param {Object} obj - The object to bind the methods to\n */\n_.makeBoundMethods = function (obj) {\n  obj.bound = {};\n  for (var prop in obj) {\n    // dearest maintainer, we want to look through the prototype\n    if (typeof obj[prop] === 'function' && obj[prop]._provideBound === true) {\n      obj.bound[prop] = _.bind(obj[prop], obj);\n    }\n  }\n};\n\n_.noop = function () {};\n\n/**\n * Implements the standard \"string or constructor\" check that I was copy/pasting everywhere\n * @param  {String|Function} val - the value that the user passed in\n * @param  {Object} opts - a map of the options\n * @return {Function|undefined} - If a valid option was specified, then the constructor is returned\n */\n_.funcEnum = function (config, name, opts, def) {\n  var val = config[name];\n  switch (typeof val) {\n  case 'undefined':\n    return opts[def];\n  case 'function':\n    return val;\n  case 'string':\n    if (opts.hasOwnProperty(val)) {\n      return opts[val];\n    }\n    /* falls through */\n  default:\n    var err = 'Invalid ' + name + ' \"' + val + '\", expected a function';\n    switch (_.size(opts)) {\n    case 0:\n      break;\n    case 1:\n      err += ' or ' + _.keys(opts)[0];\n      break;\n    default:\n      err += ' or one of ' + _.keys(opts).join(', ');\n      break;\n    }\n    throw new TypeError(err);\n  }\n};\n\n/**\n * Accepts any object and attempts to convert it into an array. If the object passed in is not\n * an array it will be wrapped in one. Then the transform/map function will be called for each element\n * and create a new array that is returned. If the map function fails to return something, the loop is\n * halted and false is returned instead of an array.\n *\n * @param  {*} input - The value to convert\n * @param  {Function} transform - A function called for each element of the resulting array\n * @return {Array|false} - an array on success, or false on failure.\n */\n_.createArray = function (input, transform) {\n  transform = typeof transform === 'function' ? transform : _.identity;\n  var output = [];\n  var item;\n  var i;\n\n  if (!_.isArray(input)) {\n    input = [input];\n  }\n\n  for (i = 0; i < input.length; i++) {\n    item = transform(input[i]);\n    if (item === void 0) {\n      return false;\n    } else {\n      output.push(item);\n    }\n  }\n  return output;\n};\n\n/**\n * Takes a WritableStream, and returns the chunks that have not successfully written, returning them as a string.\n *\n * ONLY WORKS FOR TEXT STREAMS\n *\n * @param  {WritableStream} stream - an instance of stream.Writable\n * @return {string} - the remaining test to be written to the stream\n */\n_.getUnwrittenFromStream = function (stream) {\n  if (stream && stream._writableState && stream._writableState.buffer) {\n    // flush the write buffer to disk\n    var writeBuffer = stream._writableState.buffer;\n    var out = '';\n    if (writeBuffer.length) {\n      _.each(writeBuffer, function (writeReq) {\n        if (writeReq.chunk) {\n          // 0.9.12+ uses WriteReq objects with a chunk prop\n          out += '' + writeReq.chunk;\n        } else if (_.isArray(writeReq) && (typeof writeReq[0] === 'string' || Buffer.isBuffer(writeReq[0]))) {\n          // 0.9.4 - 0.9.9 buffers are arrays of arrays like [[chunk, cb], [chunk, undef], ...].\n          out += '' + writeReq[0];\n        } else {\n          return false;\n        }\n      });\n    }\n    return out;\n  }\n};\n\n/**\n * return the current time in milliseconds since epoch\n */\n_.now = function () {\n  return (typeof Date.now === 'function') ? Date.now() : (new Date()).getTime();\n};\n\nmodule.exports = utils;\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n},{\"_process\":25,\"buffer\":18,\"lodash-node/modern\":140,\"path\":24,\"util\":32}],270:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.6.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.6.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_DROP_WHILE_FLAG = 0,\n      LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n   */\n  var reComboMarks = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /**\n   * Used to match [ES template delimiters](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /**\n   * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n   * In addition to special characters the forward slash is escaped to allow for\n   * easier `eval` use and `Function` compilation.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (typeof value == 'undefined' && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (typeof other == 'undefined' && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of each element\n   * in a collection and stable sort them in the following order:\n   *\n   * If orders is unspecified, sort in ascending order for all properties.\n   * Otherwise, for each property, sort in ascending order if its corresponding value in\n   * orders is true, and descending order if false.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        return result * (orders[index] ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to the length of n-tuples for `_.unzip`. */\n    var getLength = baseProperty('length');\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`,\n     * `mixin`, `negate`, `noop`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`,\n     * `spread`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`,\n     * `throttle`, `thru`, `times`, `toArray`, `toPlainObject`, `transform`,\n     * `union`, `uniq`, `unshift`, `unzip`, `values`, `valuesIn`, `where`,\n     * `without`, `wrap`, `xor`, `zip`, and `zipObject`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `inRange`, `isArguments`, `isArray`,\n     * `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\n     * `isFinite`,`isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n     * `startCase`, `startsWith`, `sum`, `template`, `trim`, `trimLeft`,\n     * `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed their function's formal parameters with\n       * associated values of `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(0, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          takeCount = nativeMin(length, this.__takeCount__),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type;\n\n          if (type == LAZY_DROP_WHILE_FLAG) {\n            if (data.done && (isRight ? (index > data.index) : (index < data.index))) {\n              data.count = 0;\n              data.done = false;\n            }\n            data.index = index;\n            if (!data.done) {\n              var limit = data.limit;\n              if (!(data.done = limit > -1 ? (data.count++ >= limit) : !iteratee(value))) {\n                continue outer;\n              }\n            }\n          } else {\n            var computed = iteratee(value);\n            if (type == LAZY_MAP_FLAG) {\n              value = computed;\n            } else if (!computed) {\n              if (type == LAZY_FILTER_FLAG) {\n                continue outer;\n              } else {\n                break outer;\n              }\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Adds `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +array[length] || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This method is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseAssign(object, source, customizer) {\n      var props = keys(source);\n      if (!customizer) {\n        return baseCopy(source, object, props);\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (typeof value == 'undefined' && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.at` without support for strings and individual\n     * key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          key = parseFloat(key);\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Array} props The property names to copy.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, object, props) {\n      if (!props) {\n        props = object;\n        object = {};\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return typeof thisArg == 'undefined'\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return typeof thisArg == 'undefined'\n        ? baseProperty(func + '')\n        : baseMatchesProperty(func + '', thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (typeof result != 'undefined') {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseCopy(value, result, keys(value));\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= 200) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} isDeep Specify a deep flatten.\n     * @param {boolean} isStrict Restrict flattening to arrays and `arguments` objects.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iterator functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = (objTag == objectTag || (isLoose && objTag == funcTag)),\n          othIsObj = (othTag == objectTag || (isLoose && othTag == funcTag)),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (isLoose) {\n        if (!isSameTag && !(objIsObj && othIsObj)) {\n          return false;\n        }\n      } else {\n        var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (valWrapped || othWrapped) {\n          return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n        if (!isSameTag) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var index = -1,\n          length = props.length,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !(props[index] in object)\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index],\n            objValue = object[key],\n            srcValue = values[index];\n\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = typeof objValue != 'undefined' || (key in object);\n        } else {\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (typeof result == 'undefined') {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var result = [];\n      baseEach(collection, function(value, key, collection) {\n        result.push(iteratee(value, key, collection));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return constant(true);\n      }\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            return object != null && object[key] === value &&\n              (typeof value != 'undefined' || (key in toObject(object)));\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return object != null && baseIsMatch(toObject(object), props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not coerce `key`\n     * to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(key, value) {\n      if (isStrictComparable(value)) {\n        return function(object) {\n          return object != null && object[key] === value &&\n            (typeof value != 'undefined' || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return object != null && baseIsEqual(value, object[key], null, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        var value = object[key],\n            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n            isCommon = typeof result == 'undefined';\n\n        if (isCommon) {\n          result = srcValue;\n        }\n        if ((isSrcArr || typeof result != 'undefined') &&\n            (isCommon || (result === result ? (result !== value) : (value === value)))) {\n          object[key] = result;\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : ((value && value.length) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` which does not coerce `key` to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string[]} props The property names to sort by.\n     * @param {boolean[]} orders The sort orders of `props`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, props, orders) {\n      var index = -1,\n          length = collection.length,\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var length = props.length,\n            criteria = Array(length);\n\n        while (length--) {\n          criteria[length] = value == null ? undefined : value[props[length]];\n        }\n        result[++index] = { 'criteria': criteria, 'index': index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * returned by `keysFunc`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = typeof value == 'undefined';\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (typeof thisArg == 'undefined') {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\n     * and `_.partition`.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return function() {\n        var args = arguments,\n            length = args.length,\n            object = args[0];\n\n        if (length < 2 || object == null) {\n          return object;\n        }\n        var customizer = args[length - 2],\n            thisArg = args[length - 1],\n            guard = args[3];\n\n        if (length > 3 && typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = (length > 2 && typeof thisArg == 'function') ? thisArg : null;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(args[1], args[2], guard)) {\n          customizer = length == 3 ? null : customizer;\n          length = 2;\n        }\n        var index = 0;\n        while (++index < length) {\n          var source = args[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? collection.length : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = null;\n        }\n        var result = createWrapper(func, flag, null, null, null, null, null, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      }\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var length = arguments.length;\n        if (!length) {\n          return function() { return arguments[0]; };\n        }\n        var wrapper,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          var funcName = wrapper ? '' : getFuncName(func);\n          wrapper = funcName == 'wrapper' ? new LodashWrapper([]) : wrapper;\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n          funcName = getFuncName(func);\n\n          var data = funcName == 'wrapper' ? getData(func) : null;\n          if (data && isLaziable(data[0])) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments;\n          if (wrapper && args.length == 1 && isArray(args[0])) {\n            return wrapper.plant(args[0]).value();\n          }\n          var index = 0,\n              result = funcs[index].apply(this, args);\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return string && ((fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string));\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, null, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? (Ctor || createCtorWrapper(func)) : func;\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var func = getCallback(iteratee);\n        return (func === baseCallback && iteratee == null)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, func(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = isBindKey ? null : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isLoose\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (typeof result == 'undefined') {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isLoose) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var skipCtor = isLoose,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = isLoose ? key in other : hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isLoose\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (typeof result == 'undefined') {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? (current < computed) : (current > computed)) ||\n            (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    var getFuncName = (function() {\n      if (!support.funcNames) {\n        return constant('');\n      }\n      if (constant.name == 'constant') {\n        return baseProperty('name');\n      }\n      return function(func) {\n        var result = func.name,\n            array = realNames[result],\n            length = array ? array.length : 0;\n\n        while (length--) {\n          var data = array[length],\n              otherFunc = data.func;\n\n          if (otherFunc == null || otherFunc == func) {\n            return data.name;\n          }\n        }\n        return result;\n      };\n    }());\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = object.length,\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      if (prereq) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by the `props` array.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(value.length)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf;\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push((isCommon && value.length >= 120) ? createCache(argsIndex && value) : null);\n        }\n      }\n      argsLength = args.length;\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [],\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`\n     *  - [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    comparisons are like strict equality comparisons, e.g. `===`, except\n     *    that `NaN` matches `NaN`\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      array || (array = []);\n      indexes = baseFlatten(indexes);\n\n      var length = indexes.length,\n          result = baseAt(array, indexes);\n\n      indexes.sort(baseCompareAscending);\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This function is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-value-free version of an array using `SameValueZero`\n     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n     * search algorithm for sorted arrays. If an iteratee function is provided it\n     * is invoked for each value in the array to generate the criterion by which\n     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1]);\n     * // => [1, 2]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return (isArray(array) || isArguments(array))\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      var length = collection ? collection.length : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iterator functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * comparisons are like strict equality comparisons, e.g. `===`, except that\n     * `NaN` matches `NaN`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in `collection`,\n     * returning an array of the results of each invoked method. Any additional\n     * arguments are provided to each invoked method. If `methodName` is a function\n     * it is invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, methodName, args) {\n      var index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? methodName : (value != null && value[methodName]);\n        result[++index] = func ? func.apply(value, args) : undefined;\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n     * `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`,\n     * `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`,\n     * `trimRight`, `trunc`, `random`, `range`, `sample`, `some`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     *  create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the value of `key` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} key The key of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, key) {\n      return map(collection, baseProperty(key));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight =  createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = null;\n      }\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n     *  invoked per iteration. If a property name or an object is provided it is\n     *  used to create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      var index = -1,\n          length = collection.length,\n          result = isLength(length) ? Array(length) : [];\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = { 'criteria': iteratee(value, key, collection), 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it sorts by property names\n     * instead of an iteratee function.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(string|string[])} props The property names to sort by,\n     *  specified as individual property names or arrays of property names.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortByAll() {\n      var args = arguments,\n          collection = args[0],\n          guard = args[3],\n          index = 0,\n          length = args.length - 1;\n\n      if (collection == null) {\n        return [];\n      }\n      var props = Array(length);\n      while (index < length) {\n        props[index] = args[++index];\n      }\n      if (guard && isIterateeCall(args[1], args[2], guard)) {\n        props = args[1];\n      }\n      return baseSortByOrder(collection, baseFlatten(props), []);\n    }\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the property names to sort by. A truthy value in `orders`\n     * will sort the corresponding property name in ascending order while a\n     * falsey value will sort it in descending order.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string[]} props The property names to sort by.\n     * @param {boolean[]} orders The sort orders of `props`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n     * // => [['barney', 36], ['barney', 26], ['fred', 40], ['fred', 30]]\n     */\n    function sortByOrder(collection, props, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(props, orders, guard)) {\n        orders = null;\n      }\n      if (!isArray(props)) {\n        props = props == null ? [] : [props];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, props, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        } else {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the `length` property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            cache = memoized.cache,\n            key = resolver ? resolver.apply(this, args) : args[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(func, 2);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, null, null, null, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(typeof start == 'undefined' ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return isLength(length) && objToString.call(value) == argsTag;\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) &&\n        (objToString.call(value).indexOf('Element') > -1);\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n      };\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = value.length;\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      if (!length) {\n        return true;\n      }\n      if (object == null) {\n        return false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return value === object[key] && (typeof value != 'undefined' || (key in toObject(object)));\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(toObject(object), props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag)) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObjectLike(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? value.length : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return typeof value == 'undefined' ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(baseAssign);\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseCopy(properties, result, keys(properties)) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = restParam(function(args) {\n      var object = args[0];\n      if (object == null) {\n        return object;\n      }\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iterator functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iterator functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Checks if `key` exists as a direct property of `object` instead of an\n     * inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 3 };\n     *\n     * _.has(object, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && (length && isLength(length)))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * Resolves the value of property `key` on `object`. If the value of `key` is\n     * a function it is invoked with the `this` binding of `object` and its result\n     * is returned, else the property value is returned. If the property value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the property value\n     *  resolves to `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': _.constant(40) };\n     *\n     * _.result(object, 'user');\n     * // => 'fred'\n     *\n     * _.result(object, 'age');\n     * // => 40\n     *\n     * _.result(object, 'status', 'busy');\n     * // => 'busy'\n     *\n     * _.result(object, 'status', _.constant('busy'));\n     * // => 'busy'\n     */\n    function result(object, key, defaultValue) {\n      var value = object == null ? undefined : object[key];\n      if (typeof value == 'undefined') {\n        value = defaultValue;\n      }\n      return isFunction(value) ? value.call(object) : value;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iterator functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= start && value < end;\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMarks, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = typeof position == 'undefined'\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it is shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function which compares the property value of `key` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(key, value) {\n      return baseMatchesProperty(key + '', baseClone(value, true));\n    }\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function\n     * for mixins to avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=this] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * // use `_.runInContext` to avoid conflicts (esp. in Node.js)\n     * var _ = require('lodash').runInContext();\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function which returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value of `key` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * var getName = _.property('user');\n     *\n     * _.map(users, getName);\n     * // => ['fred', 'barney']\n     *\n     * _.pluck(_.sortBy(users, getName), 'user');\n     * // => ['barney', 'fred']\n     */\n    function property(key) {\n      return baseProperty(key + '');\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function which returns\n     * the property value of a given key on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to inspect.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n     *\n     * _.map(['a', 'c'], _.propertyOf(object));\n     * // => [3, 2]\n     *\n     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n     * // => ['b', 'c', 'a']\n     */\n    function propertyOf(object) {\n      return function(key) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `start` is less than `end`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = +n;\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return augend + addend;\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      var func = getCallback(),\n          noIteratee = iteratee == null;\n\n      if (!(func === baseCallback && noIteratee)) {\n        noIteratee = false;\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return noIteratee\n        ? arraySum(isArray(collection) ? collection : toIterable(collection))\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['dropWhile', 'filter', 'map', 'takeWhile'], function(methodName, type) {\n      var isFilter = type != LAZY_MAP_FLAG,\n          isDropWhile = type == LAZY_DROP_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var filtered = this.__filtered__,\n            result = (filtered && isDropWhile) ? new LazyWrapper(this) : this.clone(),\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        iteratees.push({\n          'done': false,\n          'count': 0,\n          'index': 0,\n          'iteratee': getCallback(iteratee, thisArg, 1),\n          'limit': -1,\n          'type': type\n        });\n\n        result.__filtered__ = filtered || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__,\n            result = (filtered && !index) ? this.dropWhile() : this.clone();\n\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n        if (filtered) {\n          if (index) {\n            result.__takeCount__ = nativeMin(result.__takeCount__, n);\n          } else {\n            last(result.__iteratees__).limit = n;\n          }\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : baseProperty;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (typeof end != 'undefined') {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (!lodashFunc) {\n        return;\n      }\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments,\n            length = args.length,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // avoid lazy use if the iteratee has a `length` other than `1`\n          isLazy = useLazy = false;\n        }\n        var onlyLazy = isLazy && !isHybrid;\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (useLazy) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(null, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': null }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],271:[function(require,module,exports){\nmodule.exports = require('./lib/ReactWithAddons');\n\n},{\"./lib/ReactWithAddons\":371}],272:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar focusNode = require(\"./focusNode\");\n\nvar AutoFocusMixin = {\n  componentDidMount: function() {\n    if (this.props.autoFocus) {\n      focusNode(this.getDOMNode());\n    }\n  }\n};\n\nmodule.exports = AutoFocusMixin;\n\n},{\"./focusNode\":405}],273:[function(require,module,exports){\n/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar FallbackCompositionState = require(\"./FallbackCompositionState\");\nvar SyntheticCompositionEvent = require(\"./SyntheticCompositionEvent\");\nvar SyntheticInputEvent = require(\"./SyntheticInputEvent\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'CompositionEvent' in window\n);\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'TextEvent' in window &&\n  !documentMode &&\n  !isPresto()\n);\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = (\n  ExecutionEnvironment.canUseDOM &&\n  (\n    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)\n  )\n);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return (\n    typeof opera === 'object' &&\n    typeof opera.version === 'function' &&\n    parseInt(opera.version(), 10) <= 12\n  );\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBeforeInput: null}),\n      captured: keyOf({onBeforeInputCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topTextInput,\n      topLevelTypes.topPaste\n    ]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionEnd: null}),\n      captured: keyOf({onCompositionEndCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionStart: null}),\n      captured: keyOf({onCompositionStartCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionStart,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionUpdate: null}),\n      captured: keyOf({onCompositionUpdateCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionUpdate,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return (\n    topLevelType === topLevelTypes.topKeyDown &&\n    nativeEvent.keyCode === START_KEYCODE\n  );\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return (nativeEvent.keyCode !== START_KEYCODE);\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (\n      topLevelType === topLevelTypes.topCompositionEnd ||\n      isFallbackCompositionEnd(topLevelType, nativeEvent)\n    ) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID,\n    nativeEvent\n  ) {\n    return [\n      extractCompositionEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      ),\n      extractBeforeInputEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      )\n    ];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n},{\"./EventConstants\":286,\"./EventPropagators\":291,\"./ExecutionEnvironment\":292,\"./FallbackCompositionState\":293,\"./SyntheticCompositionEvent\":377,\"./SyntheticInputEvent\":381,\"./keyOf\":428}],274:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSCore\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * The CSSCore module specifies the API (and implements most of the methods)\n * that should be used when dealing with the display of elements (via their\n * CSS classes and visibility on screen. It is an API focused on mutating the\n * display and not reading it as no logical state should be encoded in the\n * display of elements.\n */\n\nvar CSSCore = {\n\n  /**\n   * Adds the class passed in to the element if it doesn't already have it.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  addClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSSCore.addClass takes only a single class name. \"%s\" contains ' +\n      'multiple classes.', className\n    ) : invariant(!/\\s/.test(className)));\n\n    if (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else if (!CSSCore.hasClass(element, className)) {\n        element.className = element.className + ' ' + className;\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Removes the class passed in from the element\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  removeClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSSCore.removeClass takes only a single class name. \"%s\" contains ' +\n      'multiple classes.', className\n    ) : invariant(!/\\s/.test(className)));\n\n    if (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else if (CSSCore.hasClass(element, className)) {\n        element.className = element.className\n          .replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1')\n          .replace(/\\s+/g, ' ') // multiple spaces to one\n          .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Helper to add or remove a class from an element based on a condition.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @param {*} bool condition to whether to add or remove the class\n   * @return {DOMElement} the element passed in\n   */\n  conditionClass: function(element, className, bool) {\n    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);\n  },\n\n  /**\n   * Tests whether the element has the class specified.\n   *\n   * @param {DOMNode|DOMWindow} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {boolean} true if the element has the class, false if not\n   */\n  hasClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSS.hasClass takes only a single class name.'\n    ) : invariant(!/\\s/.test(className)));\n    if (element.classList) {\n      return !!className && element.classList.contains(className);\n    }\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n};\n\nmodule.exports = CSSCore;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],275:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeOpacity: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundImage: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundColor: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n},{}],276:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      camelizeStyleName(name)\n    ) : null);\n  };\n\n  var warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1)\n    ) : null);\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Style property values shouldn\\'t contain a semicolon. ' +\n      'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    ) : null);\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n}).call(this,require('_process'))\n},{\"./CSSProperty\":275,\"./ExecutionEnvironment\":292,\"./camelizeStyleName\":392,\"./dangerousStyleValue\":399,\"./hyphenateStyleName\":419,\"./memoizeStringOnly\":430,\"./warning\":442,\"_process\":25}],277:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue'\n      ) : invariant(callbacks.length === contexts.length));\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0, l = callbacks.length; i < l; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./PooledClass\":300,\"./invariant\":421,\"_process\":25}],278:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar isEventSupported = require(\"./isEventSupported\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onChange: null}),\n      captured: keyOf({onChangeCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topChange,\n      topLevelTypes.topClick,\n      topLevelTypes.topFocus,\n      topLevelTypes.topInput,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  return (\n    elem.nodeName === 'SELECT' ||\n    (elem.nodeName === 'INPUT' && elem.type === 'file')\n  );\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (\n    (!('documentMode' in document) || document.documentMode > 8)\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    activeElementID,\n    nativeEvent\n  );\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue();\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (\n    (!('documentMode' in document) || document.documentMode > 9)\n  );\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp =  {\n  get: function() {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function(val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(\n    target.constructor.prototype,\n    'value'\n  );\n\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange ||\n      topLevelType === topLevelTypes.topKeyUp ||\n      topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return (\n    elem.nodeName === 'INPUT' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetIDForClickEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(\n          eventTypes.change,\n          targetID,\n          nativeEvent\n        );\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n},{\"./EventConstants\":286,\"./EventPluginHub\":288,\"./EventPropagators\":291,\"./ExecutionEnvironment\":292,\"./ReactUpdates\":370,\"./SyntheticEvent\":379,\"./isEventSupported\":422,\"./isTextInputElement\":424,\"./keyOf\":428}],279:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function() {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n\n},{}],280:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require(\"./Danger\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar setTextContent = require(\"./setTextContent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n  parentNode.insertBefore(\n    childNode,\n    parentNode.childNodes[index] || null\n  );\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function(updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||\n          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          updatedChild,\n          'processUpdates(): Unable to find child %s of element. This ' +\n          'probably means the DOM was unexpectedly mutated (e.g., by the ' +\n          'browser), usually due to forgetting a <tbody> when using tables, ' +\n          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +\n          'in an <svg> parent. Try inspecting the child nodes of the element ' +\n          'with React ID `%s`.',\n          updatedIndex,\n          parentID\n        ) : invariant(updatedChild));\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(\n            update.parentNode,\n            renderedMarkup[update.markupIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(\n            update.parentNode,\n            initialChildren[update.parentID][update.fromIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(\n            update.parentNode,\n            update.textContent\n          );\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n}).call(this,require('_process'))\n},{\"./Danger\":283,\"./ReactMultiChildUpdateTypes\":349,\"./invariant\":421,\"./setTextContent\":436,\"_process\":25}],281:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n/*jslint bitwise: true */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function(domPropertyConfig) {\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(\n        domPropertyConfig.isCustomAttribute\n      );\n    }\n\n    for (var propName in Properties) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.isStandardName.hasOwnProperty(propName),\n        'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' +\n        '\\'%s\\' which has already been injected. You may be accidentally ' +\n        'injecting the same DOM property config twice, or you may be ' +\n        'injecting two configs that have conflicting property names.',\n        propName\n      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));\n\n      DOMProperty.isStandardName[propName] = true;\n\n      var lowerCased = propName.toLowerCase();\n      DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        DOMProperty.getPossibleStandardName[attributeName] = propName;\n        DOMProperty.getAttributeName[propName] = attributeName;\n      } else {\n        DOMProperty.getAttributeName[propName] = lowerCased;\n      }\n\n      DOMProperty.getPropertyName[propName] =\n        DOMPropertyNames.hasOwnProperty(propName) ?\n          DOMPropertyNames[propName] :\n          propName;\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];\n      } else {\n        DOMProperty.getMutationMethod[propName] = null;\n      }\n\n      var propConfig = Properties[propName];\n      DOMProperty.mustUseAttribute[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);\n      DOMProperty.mustUseProperty[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);\n      DOMProperty.hasSideEffects[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);\n      DOMProperty.hasBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);\n      DOMProperty.hasNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);\n      DOMProperty.hasPositiveNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);\n      DOMProperty.hasOverloadedBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);\n\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.mustUseAttribute[propName] ||\n          !DOMProperty.mustUseProperty[propName],\n        'DOMProperty: Cannot require using both attribute and property: %s',\n        propName\n      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||\n        !DOMProperty.mustUseProperty[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        DOMProperty.mustUseProperty[propName] ||\n          !DOMProperty.hasSideEffects[propName],\n        'DOMProperty: Properties that have side effects must use property: %s',\n        propName\n      ) : invariant(DOMProperty.mustUseProperty[propName] ||\n        !DOMProperty.hasSideEffects[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !!DOMProperty.hasBooleanValue[propName] +\n          !!DOMProperty.hasNumericValue[propName] +\n          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,\n        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +\n        'numeric value, but not a combination: %s',\n        propName\n      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +\n        !!DOMProperty.hasNumericValue[propName] +\n        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Checks whether a property name is a standard property.\n   * @type {Object}\n   */\n  isStandardName: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties.\n   * @type {Object}\n   */\n  getPossibleStandardName: {},\n\n  /**\n   * Mapping from normalized names to attribute names that differ. Attribute\n   * names are used when rendering markup or with `*Attribute()`.\n   * @type {Object}\n   */\n  getAttributeName: {},\n\n  /**\n   * Mapping from normalized names to properties on DOM node instances.\n   * (This includes properties that mutate due to external factors.)\n   * @type {Object}\n   */\n  getPropertyName: {},\n\n  /**\n   * Mapping from normalized names to mutation methods. This will only exist if\n   * mutation cannot be set simply by the property or `setAttribute()`.\n   * @type {Object}\n   */\n  getMutationMethod: {},\n\n  /**\n   * Whether the property must be accessed and mutated as an object property.\n   * @type {Object}\n   */\n  mustUseAttribute: {},\n\n  /**\n   * Whether the property must be accessed and mutated using `*Attribute()`.\n   * (This includes anything that fails `<propName> in <element>`.)\n   * @type {Object}\n   */\n  mustUseProperty: {},\n\n  /**\n   * Whether or not setting a value causes side effects such as triggering\n   * resources to be loaded or text selection changes. We must ensure that\n   * the value is only set if it has changed.\n   * @type {Object}\n   */\n  hasSideEffects: {},\n\n  /**\n   * Whether the property should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasBooleanValue: {},\n\n  /**\n   * Whether the property must be numeric or parse as a\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasNumericValue: {},\n\n  /**\n   * Whether the property must be positive numeric or parse as a positive\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasPositiveNumericValue: {},\n\n  /**\n   * Whether the property can be used as a flag as well as with a value. Removed\n   * when strictly equal to false; present without a value when strictly equal\n   * to true; present with a value otherwise.\n   * @type {Object}\n   */\n  hasOverloadedBooleanValue: {},\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function(attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function(nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],282:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n}).call(this,require('_process'))\n},{\"./DOMProperty\":281,\"./quoteAttributeValueForBrowser\":434,\"./warning\":442,\"_process\":25}],283:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n/*jslint evil: true, sub: true */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createNodesFromMarkup = require(\"./createNodesFromMarkup\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function(markupList) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +\n      'thread. Make sure `window` and `document` are available globally ' +\n      'before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        markupList[i],\n        'dangerouslyRenderMarkup(...): Missing markup.'\n      ) : invariant(markupList[i]));\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(\n            OPEN_TAG_NAME_EXP,\n            // This index will be parsed back out below.\n            '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" '\n          );\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(\n        markupListByNodeName.join(''),\n        emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute &&\n            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            !resultList.hasOwnProperty(resultIndex),\n            'Danger: Assigning to an already-occupied result index.'\n          ) : invariant(!resultList.hasOwnProperty(resultIndex)));\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n\n        } else if (\"production\" !== process.env.NODE_ENV) {\n          console.error(\n            'Danger: Discarding unexpected node:',\n            renderNode\n          );\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultListAssignmentCount === resultList.length,\n      'Danger: Did not assign to every index of resultList.'\n    ) : invariant(resultListAssignmentCount === resultList.length));\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultList.length === markupList.length,\n      'Danger: Expected markup to render %s nodes, but rendered %s.',\n      markupList.length,\n      resultList.length\n    ) : invariant(resultList.length === markupList.length));\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +\n      'worker thread. Make sure `window` and `document` are available ' +\n      'globally before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    (\"production\" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      oldChild.tagName.toLowerCase() !== 'html',\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +\n      '<html> node. This is because browser quirks make this unreliable ' +\n      'and/or slow. If you want to render to the root you must use ' +\n      'server rendering. See React.renderToString().'\n    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));\n\n    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":292,\"./createNodesFromMarkup\":397,\"./emptyFunction\":400,\"./getMarkupWrap\":413,\"./invariant\":421,\"_process\":25}],284:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require(\"./keyOf\");\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [\n  keyOf({ResponderEventPlugin: null}),\n  keyOf({SimpleEventPlugin: null}),\n  keyOf({TapEventPlugin: null}),\n  keyOf({EnterLeaveEventPlugin: null}),\n  keyOf({ChangeEventPlugin: null}),\n  keyOf({SelectEventPlugin: null}),\n  keyOf({BeforeInputEventPlugin: null}),\n  keyOf({AnalyticsEventPlugin: null}),\n  keyOf({MobileSafariClickEventPlugin: null})\n];\n\nmodule.exports = DefaultEventPluginOrder;\n\n},{\"./keyOf\":428}],285:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n},{\"./EventConstants\":286,\"./EventPropagators\":291,\"./ReactMount\":347,\"./SyntheticMouseEvent\":383,\"./keyOf\":428}],286:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar PropagationPhases = keyMirror({bubbled: null, captured: null});\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topBlur: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topReset: null,\n  topScroll: null,\n  topSelectionChange: null,\n  topSubmit: null,\n  topTextInput: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n},{\"./keyMirror\":427}],287:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n\n}).call(this,require('_process'))\n},{\"./emptyFunction\":400,\"_process\":25}],288:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    var executeDispatch = EventPluginUtils.executeDispatch;\n    // Plugins can provide custom behavior when dispatching events.\n    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);\n    if (PluginModule && PluginModule.executeDispatch) {\n      executeDispatch = PluginModule.executeDispatch;\n    }\n    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid =\n    InstanceHandle &&\n    InstanceHandle.traverseTwoPhase &&\n    InstanceHandle.traverseEnterLeave;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    valid,\n    'InstanceHandle not injected before use!'\n  ) : invariant(valid));\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function(InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function() {\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function(id, registrationName, listener) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName, typeof listener\n    ) : invariant(!listener || typeof listener === 'function'));\n\n    var bankForRegistrationName =\n      listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function(id) {\n    for (var registrationName in listenerBank) {\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          topLevelTarget,\n          topLevelTargetID,\n          nativeEvent\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function() {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.'\n    ) : invariant(!eventQueue));\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function() {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function() {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n}).call(this,require('_process'))\n},{\"./EventPluginRegistry\":289,\"./EventPluginUtils\":290,\"./accumulateInto\":389,\"./forEachAccumulated\":406,\"./invariant\":421,\"_process\":25}],289:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n      'the plugin ordering, `%s`.',\n      pluginName\n    ) : invariant(pluginIndex > -1));\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      PluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n      'method, but `%s` does not.',\n      pluginName\n    ) : invariant(PluginModule.extractEvents));\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          PluginModule,\n          eventName\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName\n      ) : invariant(publishEventForPlugin(\n        publishedEvents[eventName],\n        PluginModule,\n        eventName\n      )));\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'event name, `%s`.',\n    eventName\n  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          PluginModule,\n          eventName\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      PluginModule,\n      eventName\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'registration name, `%s`.',\n    registrationName\n  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] =\n    PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function(InjectedEventPluginOrder) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !EventPluginOrder,\n      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.'\n    ) : invariant(!EventPluginOrder));\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function(injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) ||\n          namesToPlugins[pluginName] !== PluginModule) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !namesToPlugins[pluginName],\n          'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n          pluginName\n        ) : invariant(!namesToPlugins[pluginName]));\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function(event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[\n        dispatchConfig.registrationName\n      ] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[\n        dispatchConfig.phasedRegistrationNames[phase]\n      ];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function() {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],290:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":286,\"./invariant\":421,\"_process\":25}],291:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (!domID) {\n      throw new Error('Dispatching id must not be null');\n    }\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners =\n      accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We can not perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(\n      event.dispatchMarker,\n      accumulateDirectionalDispatches,\n      event\n    );\n  }\n}\n\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners =\n        accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(\n    fromID,\n    toID,\n    accumulateDispatches,\n    leave,\n    enter\n  );\n}\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":286,\"./EventPluginHub\":288,\"./accumulateInto\":389,\"./forEachAccumulated\":406,\"_process\":25}],292:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  (typeof window !== 'undefined' &&\n  window.document && window.document.createElement)\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n},{}],293:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function() {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function() {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n},{\"./Object.assign\":299,\"./PooledClass\":300,\"./getTextContentAccessor\":416}],294:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE =\n  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE =\n  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = (\n    implementation &&\n    implementation.hasFeature &&\n    implementation.hasFeature(\n      'http://www.w3.org/TR/SVG11/feature#BasicStructure',\n      '1.1'\n    )\n  );\n}\n\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(\n    /^(data|aria)-[a-z_][a-z\\d_.\\-]*$/\n  ),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusMixin\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // property is supported for OpenGraph in meta tags.\n    property: null\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n},{\"./DOMProperty\":281,\"./ExecutionEnvironment\":292}],295:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactLink = require(\"./ReactLink\");\nvar ReactStateSetters = require(\"./ReactStateSetters\");\n\n/**\n * A simple mixin around ReactLink.forState().\n */\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function(key) {\n    return new ReactLink(\n      this.state[key],\n      ReactStateSetters.createStateKeySetter(this, key)\n    );\n  }\n};\n\nmodule.exports = LinkedStateMixin;\n\n},{\"./ReactLink\":345,\"./ReactStateSetters\":364}],296:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\n\nvar invariant = require(\"./invariant\");\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n}).call(this,require('_process'))\n},{\"./ReactPropTypes\":356,\"./invariant\":421,\"_process\":25}],297:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n\n}).call(this,require('_process'))\n},{\"./ReactBrowserEventEmitter\":303,\"./accumulateInto\":389,\"./forEachAccumulated\":406,\"./invariant\":421,\"_process\":25}],298:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MobileSafariClickEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n/**\n * Mobile Safari does not fire properly bubble click events on non-interactive\n * elements, which means delegated click listeners do not fire. The workaround\n * for this bug involves attaching an empty click listener on the target node.\n *\n * This particular plugin works around the bug by attaching an empty click\n * listener on `touchstart` (which does fire on every element).\n */\nvar MobileSafariClickEventPlugin = {\n\n  eventTypes: null,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topTouchStart) {\n      var target = nativeEvent.target;\n      if (target && !target.onclick) {\n        target.onclick = emptyFunction;\n      }\n    }\n  }\n\n};\n\nmodule.exports = MobileSafariClickEventPlugin;\n\n},{\"./EventConstants\":286,\"./emptyFunction\":400}],299:[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n},{}],300:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fiveArgumentPooler = function(a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.'\n  ) : invariant(instance instanceof Klass));\n  if (instance.destructor) {\n    instance.destructor();\n  }\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],301:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar ReactChildren = require(\"./ReactChildren\");\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactDefaultInjection = require(\"./ReactDefaultInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypes = require(\"./ReactPropTypes\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactServerRendering = require(\"./ReactServerRendering\");\n\nvar assign = require(\"./Object.assign\");\nvar findDOMNode = require(\"./findDOMNode\");\nvar onlyChild = require(\"./onlyChild\");\n\nReactDefaultInjection.inject();\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    only: onlyChild\n  },\n  Component: ReactComponent,\n  DOM: ReactDOM,\n  PropTypes: ReactPropTypes,\n  initializeTouchEvents: function(shouldUseTouch) {\n    EventPluginUtils.useTouchEvents = shouldUseTouch;\n  },\n  createClass: ReactClass.createClass,\n  createElement: createElement,\n  cloneElement: cloneElement,\n  createFactory: createFactory,\n  createMixin: function(mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n  constructAndRenderComponent: ReactMount.constructAndRenderComponent,\n  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,\n  findDOMNode: findDOMNode,\n  render: render,\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  isValidElement: ReactElement.isValidElement,\n  withContext: ReactContext.withContext,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // If we're in Chrome, look for the devtools marker and provide a download\n    // link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n        console.debug(\n          'Download the React DevTools for a better development experience: ' +\n          'http://fb.me/react-devtools'\n        );\n      }\n    }\n\n    var expectedFeatures = [\n      // shims\n      Array.isArray,\n      Array.prototype.every,\n      Array.prototype.forEach,\n      Array.prototype.indexOf,\n      Array.prototype.map,\n      Date.now,\n      Function.prototype.bind,\n      Object.keys,\n      String.prototype.split,\n      String.prototype.trim,\n\n      // shams\n      Object.create,\n      Object.freeze\n    ];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error(\n          'One or more ES5 shim/shams expected by React are not available: ' +\n          'http://fb.me/react-warning-polyfills'\n        );\n        break;\n      }\n    }\n  }\n}\n\nReact.version = '0.13.1';\n\nmodule.exports = React;\n\n}).call(this,require('_process'))\n},{\"./EventPluginUtils\":290,\"./ExecutionEnvironment\":292,\"./Object.assign\":299,\"./ReactChildren\":307,\"./ReactClass\":308,\"./ReactComponent\":309,\"./ReactContext\":314,\"./ReactCurrentOwner\":315,\"./ReactDOM\":316,\"./ReactDOMTextComponent\":327,\"./ReactDefaultInjection\":330,\"./ReactElement\":333,\"./ReactElementValidator\":334,\"./ReactInstanceHandles\":342,\"./ReactMount\":347,\"./ReactPerf\":352,\"./ReactPropTypes\":356,\"./ReactReconciler\":359,\"./ReactServerRendering\":362,\"./findDOMNode\":403,\"./onlyChild\":431,\"_process\":25}],302:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar findDOMNode = require(\"./findDOMNode\");\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n\n},{\"./findDOMNode\":403}],303:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\nvar isEventSupported = require(\"./isEventSupported\");\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n},{\"./EventConstants\":286,\"./EventPluginHub\":288,\"./EventPluginRegistry\":289,\"./Object.assign\":299,\"./ReactEventEmitterMixin\":337,\"./ViewportMetrics\":388,\"./isEventSupported\":422}],304:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroup\n */\n\n'use strict';\n\nvar React = require(\"./React\");\n\nvar assign = require(\"./Object.assign\");\n\nvar ReactTransitionGroup = React.createFactory(\n  require(\"./ReactTransitionGroup\")\n);\nvar ReactCSSTransitionGroupChild = React.createFactory(\n  require(\"./ReactCSSTransitionGroupChild\")\n);\n\nvar ReactCSSTransitionGroup = React.createClass({\n  displayName: 'ReactCSSTransitionGroup',\n\n  propTypes: {\n    transitionName: React.PropTypes.string.isRequired,\n    transitionAppear: React.PropTypes.bool,\n    transitionEnter: React.PropTypes.bool,\n    transitionLeave: React.PropTypes.bool\n  },\n\n  getDefaultProps: function() {\n    return {\n      transitionAppear: false,\n      transitionEnter: true,\n      transitionLeave: true\n    };\n  },\n\n  _wrapChild: function(child) {\n    // We need to provide this childFactory so that\n    // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n    // leave while it is leaving.\n    return ReactCSSTransitionGroupChild(\n      {\n        name: this.props.transitionName,\n        appear: this.props.transitionAppear,\n        enter: this.props.transitionEnter,\n        leave: this.props.transitionLeave\n      },\n      child\n    );\n  },\n\n  render: function() {\n    return (\n      ReactTransitionGroup(\n        assign({}, this.props, {childFactory: this._wrapChild})\n      )\n    );\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroup;\n\n},{\"./Object.assign\":299,\"./React\":301,\"./ReactCSSTransitionGroupChild\":305,\"./ReactTransitionGroup\":368}],305:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroupChild\n */\n\n'use strict';\n\nvar React = require(\"./React\");\n\nvar CSSCore = require(\"./CSSCore\");\nvar ReactTransitionEvents = require(\"./ReactTransitionEvents\");\n\nvar onlyChild = require(\"./onlyChild\");\nvar warning = require(\"./warning\");\n\n// We don't remove the element from the DOM until we receive an animationend or\n// transitionend event. If the user screws up and forgets to add an animation\n// their node will be stuck in the DOM forever, so we detect if an animation\n// does not start and if it doesn't, we just call the end listener immediately.\nvar TICK = 17;\nvar NO_EVENT_TIMEOUT = 5000;\n\nvar noEventListener = null;\n\n\nif (\"production\" !== process.env.NODE_ENV) {\n  noEventListener = function() {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'transition(): tried to perform an animation without ' +\n      'an animationend or transitionend event after timeout (' +\n      '%sms). You should either disable this ' +\n      'transition in JS or add a CSS animation/transition.',\n      NO_EVENT_TIMEOUT\n    ) : null);\n  };\n}\n\nvar ReactCSSTransitionGroupChild = React.createClass({\n  displayName: 'ReactCSSTransitionGroupChild',\n\n  transition: function(animationType, finishCallback) {\n    var node = this.getDOMNode();\n    var className = this.props.name + '-' + animationType;\n    var activeClassName = className + '-active';\n    var noEventTimeout = null;\n\n    var endListener = function(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        clearTimeout(noEventTimeout);\n      }\n\n      CSSCore.removeClass(node, className);\n      CSSCore.removeClass(node, activeClassName);\n\n      ReactTransitionEvents.removeEndEventListener(node, endListener);\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    ReactTransitionEvents.addEndEventListener(node, endListener);\n\n    CSSCore.addClass(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClass(activeClassName);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);\n    }\n  },\n\n  queueClass: function(className) {\n    this.classNameQueue.push(className);\n\n    if (!this.timeout) {\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n    }\n  },\n\n  flushClassNameQueue: function() {\n    if (this.isMounted()) {\n      this.classNameQueue.forEach(\n        CSSCore.addClass.bind(CSSCore, this.getDOMNode())\n      );\n    }\n    this.classNameQueue.length = 0;\n    this.timeout = null;\n  },\n\n  componentWillMount: function() {\n    this.classNameQueue = [];\n  },\n\n  componentWillUnmount: function() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  },\n\n  componentWillAppear: function(done) {\n    if (this.props.appear) {\n      this.transition('appear', done);\n    } else {\n      done();\n    }\n  },\n\n  componentWillEnter: function(done) {\n    if (this.props.enter) {\n      this.transition('enter', done);\n    } else {\n      done();\n    }\n  },\n\n  componentWillLeave: function(done) {\n    if (this.props.leave) {\n      this.transition('leave', done);\n    } else {\n      done();\n    }\n  },\n\n  render: function() {\n    return onlyChild(this.props.children);\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroupChild;\n\n}).call(this,require('_process'))\n},{\"./CSSCore\":274,\"./React\":301,\"./ReactTransitionEvents\":367,\"./onlyChild\":431,\"./warning\":442,\"_process\":25}],306:[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require(\"./ReactReconciler\");\n\nvar flattenChildren = require(\"./flattenChildren\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(nestedChildNodes, transaction, context) {\n    var children = flattenChildren(nestedChildNodes);\n    for (var name in children) {\n      if (children.hasOwnProperty(name)) {\n        var child = children[name];\n        // The rendered children must be turned into instances as they're\n        // mounted.\n        var childInstance = instantiateReactComponent(child, null);\n        children[name] = childInstance;\n      }\n    }\n    return children;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextNestedChildNodes Nested child maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextNestedChildNodes,\n    transaction,\n    context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    var nextChildren = flattenChildren(nextNestedChildNodes);\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(\n          prevChild, nextElement, transaction, context\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(\n          nextElement,\n          null\n        );\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) &&\n          !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren) {\n    for (var name in renderedChildren) {\n      var renderedChild = renderedChildren[name];\n      ReactReconciler.unmountComponent(renderedChild);\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n},{\"./ReactReconciler\":359,\"./flattenChildren\":404,\"./instantiateReactComponent\":420,\"./shouldUpdateReactComponent\":438}],307:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n\n}).call(this,require('_process'))\n},{\"./PooledClass\":300,\"./ReactFragment\":339,\"./traverseAllChildren\":440,\"./warning\":442,\"_process\":25}],308:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactErrorUtils = require(\"./ReactErrorUtils\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar keyMirror = require(\"./keyMirror\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar MIXINS_KEY = keyOf({mixins: null});\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function(Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function(Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function(Constructor, childContextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        childContextTypes,\n        ReactPropTypeLocations.childContext\n      );\n    }\n    Constructor.childContextTypes = assign(\n      {},\n      Constructor.childContextTypes,\n      childContextTypes\n    );\n  },\n  contextTypes: function(Constructor, contextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        contextTypes,\n        ReactPropTypeLocations.context\n      );\n    }\n    Constructor.contextTypes = assign(\n      {},\n      Constructor.contextTypes,\n      contextTypes\n    );\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function(Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(\n        Constructor.getDefaultProps,\n        getDefaultProps\n      );\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function(Constructor, propTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        propTypes,\n        ReactPropTypeLocations.prop\n      );\n    }\n    Constructor.propTypes = assign(\n      {},\n      Constructor.propTypes,\n      propTypes\n    );\n  },\n  statics: function(Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  }\n};\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof typeDef[propName] === 'function',\n        '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n        'React.PropTypes.',\n        Constructor.displayName || 'ReactClass',\n        ReactPropTypeLocationNames[location],\n        propName\n      ) : null);\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?\n    ReactClassInterface[name] :\n    null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.OVERRIDE_BASE,\n      'ReactClassInterface: You are attempting to override ' +\n      '`%s` from your class specification. Ensure that your method names ' +\n      'do not overlap with React methods.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.DEFINE_MANY ||\n      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,\n      'ReactClassInterface: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be due ' +\n      'to a mixin.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||\n    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  ) : invariant(typeof spec !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !ReactElement.isValidElement(spec),\n    'ReactClass: You\\'re attempting to ' +\n    'use a component as a mixin. Instead, just use a regular object.'\n  ) : invariant(!ReactElement.isValidElement(spec)));\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod =\n        ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var markedDontBind = property && property.__reactDontBind;\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind =\n        isFunction &&\n        !isReactClassMethod &&\n        !isAlreadyDefined &&\n        !markedDontBind;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            isReactClassMethod && (\n              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n            ),\n            'ReactClass: Unexpected spec policy %s for key %s ' +\n            'when mixing in component specs.',\n            specPolicy,\n            name\n          ) : invariant(isReactClassMethod && (\n            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n          )));\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (\"production\" !== process.env.NODE_ENV) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isReserved,\n      'ReactClass: You are attempting to define a reserved ' +\n      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n      'as an instance property instead; it will still be accessible on the ' +\n      'constructor.',\n      name\n    ) : invariant(!isReserved));\n\n    var isInherited = name in Constructor;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isInherited,\n      'ReactClass: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be ' +\n      'due to a mixin.',\n      name\n    ) : invariant(!isInherited));\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    one && two && typeof one === 'object' && typeof two === 'object',\n    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        one[key] === undefined,\n        'mergeIntoWithNoDuplicateKeys(): ' +\n        'Tried to merge two objects with the same key: `%s`. This conflict ' +\n        'may be due to a mixin; in particular, this may be caused by two ' +\n        'getInitialState() or getDefaultProps() methods returning objects ' +\n        'with clashing keys.',\n        key\n      ) : invariant(one[key] === undefined));\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (\"production\" !== process.env.NODE_ENV) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): React component methods may only be bound to the ' +\n          'component instance. See %s',\n          componentName\n        ) : null);\n      } else if (!args.length) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See %s',\n          componentName\n        ) : null);\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(\n        component,\n        ReactErrorUtils.guard(\n          method,\n          component.constructor.displayName + '.' + autoBindKey\n        )\n      );\n    }\n  }\n}\n\nvar typeDeprecationDescriptor = {\n  enumerable: false,\n  get: function() {\n    var displayName = this.displayName || this.name || 'Component';\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      '%s.type is deprecated. Use %s directly to access the class.',\n      displayName,\n      displayName\n    ) : null);\n    Object.defineProperty(this, 'type', {\n      value: this\n    });\n    return this;\n  }\n};\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function(newState, callback) {\n    ReactUpdateQueue.enqueueReplaceState(this, newState);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function() {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          owner._warnedAboutRefsInRender,\n          '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n          owner.getName() || 'A component'\n        ) : null);\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(this);\n    return (\n      internalInstance &&\n      internalInstance !== ReactLifeCycle.currentlyMountingInstance\n    );\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function(partialProps, callback) {\n    ReactUpdateQueue.enqueueSetProps(this, partialProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function(newProps, callback) {\n    ReactUpdateQueue.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function() {};\nassign(\n  ReactClassComponent.prototype,\n  ReactComponent.prototype,\n  ReactClassMixin\n);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function(spec) {\n    var Constructor = function(props, context) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n          'JSX instead. See: http://fb.me/react-legacyfactory'\n        ) : null);\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== process.env.NODE_ENV) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' &&\n            this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(\n      mixSpecIntoComponent.bind(null, Constructor)\n    );\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    ) : invariant(Constructor.prototype.render));\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        spec.displayName || 'A component'\n      ) : null);\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    // Legacy hook\n    Constructor.type = Constructor;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function(mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./ReactComponent\":309,\"./ReactCurrentOwner\":315,\"./ReactElement\":333,\"./ReactErrorUtils\":336,\"./ReactInstanceMap\":343,\"./ReactLifeCycle\":344,\"./ReactPropTypeLocationNames\":354,\"./ReactPropTypeLocations\":355,\"./ReactUpdateQueue\":369,\"./invariant\":421,\"./keyMirror\":427,\"./keyOf\":428,\"./warning\":442,\"_process\":25}],309:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function(partialState, callback) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof partialState === 'object' ||\n    typeof partialState === 'function' ||\n    partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n    'function which returns an object of state variables.'\n  ) : invariant(typeof partialState === 'object' ||\n  typeof partialState === 'function' ||\n  partialState == null));\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      partialState != null,\n      'setState(...): You passed an undefined or null state object; ' +\n      'instead, use forceUpdate().'\n    ) : null);\n  }\n  ReactUpdateQueue.enqueueSetState(this, partialState);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function(callback) {\n  ReactUpdateQueue.enqueueForceUpdate(this);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== process.env.NODE_ENV) {\n  var deprecatedAPIs = {\n    getDOMNode: 'getDOMNode',\n    isMounted: 'isMounted',\n    replaceProps: 'replaceProps',\n    replaceState: 'replaceState',\n    setProps: 'setProps'\n  };\n  var defineDeprecationWarning = function(methodName, displayName) {\n    try {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function() {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            '%s(...) is deprecated in plain JavaScript React classes.',\n            displayName\n          ) : null);\n          return undefined;\n        }\n      });\n    } catch (x) {\n      // IE will fail on defineProperty (es5-shim/sham too)\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactUpdateQueue\":369,\"./invariant\":421,\"./warning\":442,\"_process\":25}],310:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactMount = require(\"./ReactMount\");\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates:\n    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID:\n    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function(rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n},{\"./ReactDOMIDOperations\":320,\"./ReactMount\":347}],311:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function(environment) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !injected,\n        'ReactCompositeComponent: injectEnvironment() can only be called once.'\n      ) : invariant(!injected));\n      ReactComponentEnvironment.unmountIDFromEnvironment =\n        environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID =\n        environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates =\n        environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],312:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactComponentWithPureRenderMixin\n*/\n\n'use strict';\n\nvar shallowEqual = require(\"./shallowEqual\");\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this Mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function(nextProps, nextState) {\n    return !shallowEqual(this.props, nextProps) ||\n           !shallowEqual(this.state, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n\n},{\"./shallowEqual\":437}],313:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar invariant = require(\"./invariant\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._isTopLevel = false;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(this._currentElement._context);\n\n    var Component = ReactNativeComponent.getComponentClassForElement(\n      this._currentElement\n    );\n\n    // Initialize the public class\n    var inst = new Component(publicProps, publicContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        inst.render != null,\n        '%s(...): No `render` method found on the returned component ' +\n        'instance: you may have forgotten to define `render` in your ' +\n        'component or you may have accidentally tried to render an element ' +\n        'whose type is a function that isn\\'t a React component.',\n        Component.displayName || Component.name || 'Component'\n      ) : null);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      this._warnIfContextsDiffer(this._currentElement._context, context);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getInitialState ||\n        inst.getInitialState.isReactClassApproved,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n        'static property to define contextTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        (this.getName() || 'A component')\n      ) : null);\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var renderedElement;\n\n    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;\n    ReactLifeCycle.currentlyMountingInstance = this;\n    try {\n      if (inst.componentWillMount) {\n        inst.componentWillMount();\n        // When mounting, calls to `setState` by `componentWillMount` will set\n        // `this._pendingStateQueue` without triggering a re-render.\n        if (this._pendingStateQueue) {\n          inst.state = this._processPendingState(inst.props, inst.context);\n        }\n      }\n\n      renderedElement = this._renderValidatedComponent();\n    } finally {\n      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(\n      renderedElement,\n      this._currentElement.type // The wrapping type\n    );\n\n    var markup = ReactReconciler.mountComponent(\n      this._renderedComponent,\n      rootID,\n      transaction,\n      this._processChildContext(context)\n    );\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function() {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;\n      ReactLifeCycle.currentlyUnmountingInstance = this;\n      try {\n        inst.componentWillUnmount();\n      } finally {\n        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;\n      }\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n\n    // Reset pending fields\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Schedule a partial update to the props. Only used for internal testing.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @internal\n   */\n  _setPropsInternal: function(partialProps, callback) {\n    // This is a deoptimized path. We optimize for always having an element.\n    // This creates an extra internal element.\n    var element = this._pendingElement || this._currentElement;\n    this._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      assign({}, element.props, partialProps)\n    );\n    ReactUpdates.enqueueUpdate(this, callback);\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var maskedContext = null;\n    // This really should be getting the component class for the element,\n    // but we know that we're not going to need it for built-ins.\n    if (typeof this._currentElement.type === 'string') {\n      return emptyObject;\n    }\n    var contextTypes = this._currentElement.type.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.contextTypes) {\n        this._checkPropTypes(\n          Component.contextTypes,\n          maskedContext,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function(currentContext) {\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof inst.constructor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n        'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent'\n      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));\n      if (\"production\" !== process.env.NODE_ENV) {\n        this._checkPropTypes(\n          inst.constructor.childContextTypes,\n          childContext,\n          ReactPropTypeLocations.childContext\n        );\n      }\n      for (var name in childContext) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          name in inst.constructor.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name\n        ) : invariant(name in inst.constructor.childContextTypes));\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function(newProps) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.propTypes) {\n        this._checkPropTypes(\n          Component.propTypes,\n          newProps,\n          ReactPropTypeLocations.prop\n        );\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function(propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            typeof propTypes[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually ' +\n            'from React.PropTypes.',\n            componentName || 'React class',\n            ReactPropTypeLocationNames[location],\n            propName\n          ) : invariant(typeof propTypes[propName] === 'function'));\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // React.render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Composite propType: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          } else {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Context Types: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement || this._currentElement,\n        transaction,\n        this._context\n      );\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        ReactElementValidator.checkAndWarnForMutatedProps(\n          this._currentElement\n        );\n      }\n\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context\n      );\n    }\n  },\n\n  /**\n   * Compare two contexts, warning if they are different\n   * TODO: Remove this check when owner-context is removed\n   */\n   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {\n    ownerBasedContext = this._maskContext(ownerBasedContext);\n    parentBasedContext = this._maskContext(parentBasedContext);\n    var parentKeys = Object.keys(parentBasedContext).sort();\n    var displayName = this.getName() || 'ReactCompositeComponent';\n    for (var i = 0; i < parentKeys.length; i++) {\n      var key = parentKeys[i];\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        ownerBasedContext[key] === parentBasedContext[key],\n        'owner-based and parent-based contexts differ '  +\n        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +\n        '(see: http://fb.me/react-context-by-parent)',\n        ownerBasedContext[key],\n        parentBasedContext[key],\n        key,\n        displayName\n      ) : null);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var nextContext = inst.context;\n    var nextProps = inst.props;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement !== nextParentElement) {\n      nextContext = this._processContext(nextParentElement._context);\n      nextProps = this._processProps(nextParentElement.props);\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (nextUnmaskedContext != null) {\n          this._warnIfContextsDiffer(\n            nextParentElement._context,\n            nextUnmaskedContext\n          );\n        }\n      }\n\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate =\n      this._pendingForceUpdate ||\n      !inst.shouldComponentUpdate ||\n      inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof shouldUpdate !== 'undefined',\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n        'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent'\n      ) : null);\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(\n        nextState,\n        typeof partial === 'function' ?\n          partial.call(inst, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var prevProps = inst.props;\n    var prevState = inst.state;\n    var prevContext = inst.context;\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (inst.componentDidUpdate) {\n      transaction.getReactMountReady().enqueue(\n        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),\n        inst\n      );\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._processChildContext(context)\n      );\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(\n        nextRenderedElement,\n        this._currentElement.type\n      );\n      var nextMarkup = ReactReconciler.mountComponent(\n        this._renderedComponent,\n        thisID,\n        transaction,\n        context\n      );\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(\n      prevComponentID,\n      nextMarkup\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (\"production\" !== process.env.NODE_ENV) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' &&\n          inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function() {\n    var renderedComponent;\n    var previousContext = ReactContext.current;\n    ReactContext.current = this._processChildContext(\n      this._currentElement._context\n    );\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent =\n        this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactContext.current = previousContext;\n      ReactCurrentOwner.current = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedComponent === null || renderedComponent === false ||\n      ReactElement.isValidElement(renderedComponent),\n      '%s.render(): A valid ReactComponent must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false ||\n    ReactElement.isValidElement(renderedComponent)));\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = component.getPublicInstance();\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return (\n      type.displayName || (constructor && constructor.displayName) ||\n      type.name || (constructor && constructor.name) ||\n      null\n    );\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by React.render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    return this._instance;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(\n  ReactCompositeComponentMixin,\n  'ReactCompositeComponent',\n  {\n    mountComponent: 'mountComponent',\n    updateComponent: 'updateComponent',\n    _renderValidatedComponent: '_renderValidatedComponent'\n  }\n);\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./ReactComponentEnvironment\":311,\"./ReactContext\":314,\"./ReactCurrentOwner\":315,\"./ReactElement\":333,\"./ReactElementValidator\":334,\"./ReactInstanceMap\":343,\"./ReactLifeCycle\":344,\"./ReactNativeComponent\":350,\"./ReactPerf\":352,\"./ReactPropTypeLocationNames\":354,\"./ReactPropTypeLocations\":355,\"./ReactReconciler\":359,\"./ReactUpdates\":370,\"./emptyObject\":401,\"./invariant\":421,\"./shouldUpdateReactComponent\":438,\"./warning\":442,\"_process\":25}],314:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar warning = require(\"./warning\");\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./emptyObject\":401,\"./warning\":442,\"_process\":25}],315:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n},{}],316:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\nvar mapObject = require(\"./mapObject\");\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOM = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOM;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./ReactElementValidator\":334,\"./mapObject\":429,\"_process\":25}],317:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n\n},{\"./AutoFocusMixin\":272,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333,\"./keyMirror\":427}],318:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMProperty = require(\"./DOMProperty\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactMultiChild = require(\"./ReactMultiChild\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar invariant = require(\"./invariant\");\nvar isEventSupported = require(\"./isEventSupported\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = {'string': true, 'number': true};\n\nvar STYLE = keyOf({style: null});\n\nvar ELEMENT_NODE_TYPE = 1;\n\n/**\n * Optionally injectable operations for mutating the DOM\n */\nvar BackendIDOperations = null;\n\n/**\n * @param {?object} props\n */\nfunction assertValidProps(props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (props.dangerouslySetInnerHTML != null) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'\n    ) : invariant(props.children == null));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML.__html != null,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n      'Please visit http://fb.me/react-invariant-dangerously-set-inner-html ' +\n      'for more information.'\n    ) : invariant(props.dangerouslySetInnerHTML.__html != null));\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      props.innerHTML == null,\n      'Directly setting property `innerHTML` is not permitted. ' +\n      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'\n    ) : null);\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !props.contentEditable || props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n      'React. It is now your responsibility to guarantee that none of ' +\n      'those nodes are unexpectedly modified or duplicated. This is ' +\n      'probably not intentional.'\n    ) : null);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n    'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' +\n    'using JSX.'\n  ) : invariant(props.style == null || typeof props.style === 'object'));\n}\n\nfunction putListener(id, registrationName, listener, transaction) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      registrationName !== 'onScroll' || isEventSupported('scroll', true),\n      'This browser doesn\\'t support the `onScroll` event'\n    ) : null);\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ?\n      container.ownerDocument :\n      container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getPutListenerQueue().enqueuePutListener(\n    id,\n    registrationName,\n    listener\n  );\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// We accept any tag to be rendered but since this gets injected into abitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));\n    validatedTagCache[tag] = true;\n  }\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag;\n  this._renderedChildren = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function(element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} The computed markup.\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    assertValidProps(this._currentElement.props);\n    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';\n    return (\n      this._createOpenTagMarkupAndPutListeners(transaction) +\n      this._createContentMarkup(transaction, context) +\n      closeTag\n    );\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function(transaction) {\n    var props = this._currentElement.props;\n    var ret = '<' + this._tag;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, propValue, transaction);\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup =\n          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret + '>';\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID + '>';\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function(transaction, context) {\n    var prefix = '';\n    if (this._tag === 'listing' ||\n        this._tag === 'pre' ||\n        this._tag === 'textarea') {\n      // Add an initial newline because browsers ignore the first newline in\n      // a <listing>, <pre>, or <textarea> as an \"authoring convenience\" -- see\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.\n      prefix = '\\n';\n    }\n\n    var props = this._currentElement.props;\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        return prefix + innerHTML.__html;\n      }\n    } else {\n      var contentToUse =\n        CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        return prefix + escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(\n          childrenToUse,\n          transaction,\n          context\n        );\n        return prefix + mountImages.join('');\n      }\n    }\n    return prefix;\n  },\n\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(transaction, prevElement, nextElement, context) {\n    assertValidProps(this._currentElement.props);\n    this._updateDOMProperties(prevElement.props, transaction);\n    this._updateDOMChildren(prevElement.props, transaction, context);\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMProperties: function(lastProps, transaction) {\n    var nextProps = this._currentElement.props;\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) ||\n         !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        deleteListener(this._rootNodeID, propKey);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.deletePropertyByID(\n          this._rootNodeID,\n          propKey\n        );\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ?\n        this._previousStyleCopy :\n        lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) &&\n                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) &&\n                lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, nextProp, transaction);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.updatePropertyByID(\n          this._rootNodeID,\n          propKey,\n          nextProp\n        );\n      }\n    }\n    if (styleUpdates) {\n      BackendIDOperations.updateStylesByID(\n        this._rootNodeID,\n        styleUpdates\n      );\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMChildren: function(lastProps, transaction, context) {\n    var nextProps = this._currentElement.props;\n\n    var lastContent =\n      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent =\n      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml =\n      lastProps.dangerouslySetInnerHTML &&\n      lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml =\n      nextProps.dangerouslySetInnerHTML &&\n      nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        BackendIDOperations.updateInnerHTMLByID(\n          this._rootNodeID,\n          nextHtml\n        );\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function() {\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin,\n  ReactMultiChild.Mixin\n);\n\nReactDOMComponent.injection = {\n  injectIDOperations: function(IDOperations) {\n    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;\n  }\n};\n\nmodule.exports = ReactDOMComponent;\n\n}).call(this,require('_process'))\n},{\"./CSSPropertyOperations\":276,\"./DOMProperty\":281,\"./DOMPropertyOperations\":282,\"./Object.assign\":299,\"./ReactBrowserEventEmitter\":303,\"./ReactComponentBrowserEnvironment\":310,\"./ReactMount\":347,\"./ReactMultiChild\":348,\"./ReactPerf\":352,\"./escapeTextContentForBrowser\":402,\"./invariant\":421,\"./isEventSupported\":422,\"./keyOf\":428,\"./warning\":442,\"_process\":25}],319:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n\n},{\"./EventConstants\":286,\"./LocalEventTrapMixin\":297,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333}],320:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMChildrenOperations = require(\"./DOMChildrenOperations\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Errors for properties that should not be updated with `updatePropertyById()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML:\n    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes. This is made injectable via\n * `ReactDOMComponent.BackendIDOperations`.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Updates a DOM node to remove a property. This should only be used to remove\n   * DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A property name to remove, see `DOMProperty`.\n   * @internal\n   */\n  deletePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n    DOMPropertyOperations.deleteValueForProperty(node, name, value);\n  },\n\n  /**\n   * Updates a DOM node with new style values. If a value is specified as '',\n   * the corresponding style property will be unset.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {object} styles Mapping from styles to values.\n   * @internal\n   */\n  updateStylesByID: function(id, styles) {\n    var node = ReactMount.getNode(id);\n    CSSPropertyOperations.setValueForStyles(node, styles);\n  },\n\n  /**\n   * Updates a DOM node's innerHTML.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} html An HTML string.\n   * @internal\n   */\n  updateInnerHTMLByID: function(id, html) {\n    var node = ReactMount.getNode(id);\n    setInnerHTML(node, html);\n  },\n\n  /**\n   * Updates a DOM node's text content set by `props.content`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} content Text content.\n   * @internal\n   */\n  updateTextContentByID: function(id, content) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.updateTextContent(node, content);\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function(updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  updatePropertyByID: 'updatePropertyByID',\n  deletePropertyByID: 'deletePropertyByID',\n  updateStylesByID: 'updateStylesByID',\n  updateInnerHTMLByID: 'updateInnerHTMLByID',\n  updateTextContentByID: 'updateTextContentByID',\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n}).call(this,require('_process'))\n},{\"./CSSPropertyOperations\":276,\"./DOMChildrenOperations\":280,\"./DOMPropertyOperations\":282,\"./ReactMount\":347,\"./ReactPerf\":352,\"./invariant\":421,\"./setInnerHTML\":435,\"_process\":25}],321:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n\n},{\"./EventConstants\":286,\"./LocalEventTrapMixin\":297,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333}],322:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar img = ReactElement.createFactory('img');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactClass.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n\n},{\"./EventConstants\":286,\"./LocalEventTrapMixin\":297,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333}],323:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar input = ReactElement.createFactory('input');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = ReactClass.createClass({\n  displayName: 'ReactDOMInput',\n  tagName: 'INPUT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    return {\n      initialChecked: this.props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.defaultChecked = null;\n    props.defaultValue = null;\n\n    var value = LinkedValueUtils.getValue(this);\n    props.value = value != null ? value : this.state.initialValue;\n\n    var checked = LinkedValueUtils.getChecked(this);\n    props.checked = checked != null ? checked : this.state.initialChecked;\n\n    props.onChange = this._handleChange;\n\n    return input(props, this.props.children);\n  },\n\n  componentDidMount: function() {\n    var id = ReactMount.getID(this.getDOMNode());\n    instancesByReactID[id] = this;\n  },\n\n  componentWillUnmount: function() {\n    var rootNode = this.getDOMNode();\n    var id = ReactMount.getID(rootNode);\n    delete instancesByReactID[id];\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var rootNode = this.getDOMNode();\n    if (this.props.checked != null) {\n      DOMPropertyOperations.setValueForProperty(\n        rootNode,\n        'checked',\n        this.props.checked || false\n      );\n    }\n\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    // Here we use asap to wait until all updates have propagated, which\n    // is important when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n\n    var name = this.props.name;\n    if (this.props.type === 'radio' && name != null) {\n      var rootNode = this.getDOMNode();\n      var queryRoot = rootNode;\n\n      while (queryRoot.parentNode) {\n        queryRoot = queryRoot.parentNode;\n      }\n\n      // If `rootNode.form` was non-null, then we could try `form.elements`,\n      // but that sometimes behaves strangely in IE8. We could also try using\n      // `form.getElementsByName`, but that will only return direct children\n      // and won't include inputs that use the HTML5 `form=` attribute. Since\n      // the input might not even be in a form, let's just use the global\n      // `querySelectorAll` to ensure we don't miss anything.\n      var group = queryRoot.querySelectorAll(\n        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n      for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n        var otherNode = group[i];\n        if (otherNode === rootNode ||\n            otherNode.form !== rootNode.form) {\n          continue;\n        }\n        var otherID = ReactMount.getID(otherNode);\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherID,\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.'\n        ) : invariant(otherID));\n        var otherInstance = instancesByReactID[otherID];\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherInstance,\n          'ReactDOMInput: Unknown radio button ID %s.',\n          otherID\n        ) : invariant(otherInstance));\n        // If this is a controlled radio button group, forcing the input that\n        // was previously checked to update will cause it to be come re-checked\n        // as appropriate.\n        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n      }\n    }\n\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMInput;\n\n}).call(this,require('_process'))\n},{\"./AutoFocusMixin\":272,\"./DOMPropertyOperations\":282,\"./LinkedValueUtils\":296,\"./Object.assign\":299,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333,\"./ReactMount\":347,\"./ReactUpdates\":370,\"./invariant\":421,\"_process\":25}],324:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n\n}).call(this,require('_process'))\n},{\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333,\"./warning\":442,\"_process\":25}],325:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\n\nvar select = ReactElement.createFactory('select');\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  /*jshint validthis:true */\n  if (this._pendingUpdate) {\n    this._pendingUpdate = false;\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null && this.isMounted()) {\n      updateOptions(this, value);\n    }\n  }\n}\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n\n/**\n * @param {ReactComponent} component Instance of ReactDOMSelect\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(component, propValue) {\n  var selectedValue, i, l;\n  var options = component.getDOMNode().options;\n\n  if (component.props.multiple) {\n    selectedValue = {};\n    for (i = 0, l = propValue.length; i < l; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0, l = options.length; i < l; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0, l = options.length; i < l; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = ReactClass.createClass({\n  displayName: 'ReactDOMSelect',\n  tagName: 'SELECT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  propTypes: {\n    defaultValue: selectValueType,\n    value: selectValueType\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.onChange = this._handleChange;\n    props.value = null;\n\n    return select(props, this.props.children);\n  },\n\n  componentWillMount: function() {\n    this._pendingUpdate = false;\n  },\n\n  componentDidMount: function() {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      updateOptions(this, value);\n    } else if (this.props.defaultValue != null) {\n      updateOptions(this, this.props.defaultValue);\n    }\n  },\n\n  componentDidUpdate: function(prevProps) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      this._pendingUpdate = false;\n      updateOptions(this, value);\n    } else if (!prevProps.multiple !== !this.props.multiple) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (this.props.defaultValue != null) {\n        updateOptions(this, this.props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(this, this.props.multiple ? [] : '');\n      }\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n\n    this._pendingUpdate = true;\n    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMSelect;\n\n},{\"./AutoFocusMixin\":272,\"./LinkedValueUtils\":296,\"./Object.assign\":299,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333,\"./ReactUpdates\":370}],326:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(\n    selection.anchorNode,\n    selection.anchorOffset,\n    selection.focusNode,\n    selection.focusOffset\n  );\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(\n    tempRange.startContainer,\n    tempRange.startOffset,\n    tempRange.endContainer,\n    tempRange.endOffset\n  );\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = (\n  ExecutionEnvironment.canUseDOM &&\n  'selection' in document &&\n  !('getSelection' in window)\n);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n},{\"./ExecutionEnvironment\":292,\"./getNodeForCharacterOffset\":414,\"./getTextContentAccessor\":416}],327:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function(props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function(text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    var escapedText = escapeTextContentForBrowser(this._stringText);\n\n    if (transaction.renderToStaticMarkup) {\n      // Normally we'd wrap this in a `span` for the reasons stated above, but\n      // since this is a situation where React won't take over (static pages),\n      // we can simply return the text as it is.\n      return escapedText;\n    }\n\n    return (\n      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +\n        escapedText +\n      '</span>'\n    );\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function(nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        ReactDOMComponent.BackendIDOperations.updateTextContentByID(\n          this._rootNodeID,\n          nextStringText\n        );\n      }\n    }\n  },\n\n  unmountComponent: function() {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n},{\"./DOMPropertyOperations\":282,\"./Object.assign\":299,\"./ReactComponentBrowserEnvironment\":310,\"./ReactDOMComponent\":318,\"./escapeTextContentForBrowser\":402}],328:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\");\n\nvar textarea = ReactElement.createFactory('textarea');\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = ReactClass.createClass({\n  displayName: 'ReactDOMTextarea',\n  tagName: 'TEXTAREA',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = this.props.children;\n    if (children != null) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.'\n        ) : null);\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.'\n      ) : invariant(defaultValue == null));\n      if (Array.isArray(children)) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.'\n        ) : invariant(children.length <= 1));\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(this);\n    return {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue)\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML == null,\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'\n    ) : invariant(props.dangerouslySetInnerHTML == null));\n\n    props.defaultValue = null;\n    props.value = null;\n    props.onChange = this._handleChange;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    return textarea(props, this.state.initialValue);\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      var rootNode = this.getDOMNode();\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMTextarea;\n\n}).call(this,require('_process'))\n},{\"./AutoFocusMixin\":272,\"./DOMPropertyOperations\":282,\"./LinkedValueUtils\":296,\"./Object.assign\":299,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactElement\":333,\"./ReactUpdates\":370,\"./invariant\":421,\"./warning\":442,\"_process\":25}],329:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(\n  ReactDefaultBatchingStrategyTransaction.prototype,\n  Transaction.Mixin,\n  {\n    getTransactionWrappers: function() {\n      return TRANSACTION_WRAPPERS;\n    }\n  }\n);\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d);\n    } else {\n      transaction.perform(callback, null, a, b, c, d);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n},{\"./Object.assign\":299,\"./ReactUpdates\":370,\"./Transaction\":387,\"./emptyFunction\":400}],330:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require(\"./BeforeInputEventPlugin\");\nvar ChangeEventPlugin = require(\"./ChangeEventPlugin\");\nvar ClientReactRootIndex = require(\"./ClientReactRootIndex\");\nvar DefaultEventPluginOrder = require(\"./DefaultEventPluginOrder\");\nvar EnterLeaveEventPlugin = require(\"./EnterLeaveEventPlugin\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar HTMLDOMPropertyConfig = require(\"./HTMLDOMPropertyConfig\");\nvar MobileSafariClickEventPlugin = require(\"./MobileSafariClickEventPlugin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactDOMButton = require(\"./ReactDOMButton\");\nvar ReactDOMForm = require(\"./ReactDOMForm\");\nvar ReactDOMImg = require(\"./ReactDOMImg\");\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactDOMIframe = require(\"./ReactDOMIframe\");\nvar ReactDOMInput = require(\"./ReactDOMInput\");\nvar ReactDOMOption = require(\"./ReactDOMOption\");\nvar ReactDOMSelect = require(\"./ReactDOMSelect\");\nvar ReactDOMTextarea = require(\"./ReactDOMTextarea\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactEventListener = require(\"./ReactEventListener\");\nvar ReactInjection = require(\"./ReactInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactReconcileTransaction = require(\"./ReactReconcileTransaction\");\nvar SelectEventPlugin = require(\"./SelectEventPlugin\");\nvar ServerReactRootIndex = require(\"./ServerReactRootIndex\");\nvar SimpleEventPlugin = require(\"./SimpleEventPlugin\");\nvar SVGDOMPropertyConfig = require(\"./SVGDOMPropertyConfig\");\n\nvar createFullPageComponent = require(\"./createFullPageComponent\");\n\nfunction autoGenerateWrapperClass(type) {\n  return ReactClass.createClass({\n    tagName: type.toUpperCase(),\n    render: function() {\n      return new ReactElement(\n        type,\n        null,\n        null,\n        null,\n        null,\n        this.props\n      );\n    }\n  });\n}\n\nfunction inject() {\n  ReactInjection.EventEmitter.injectReactEventListener(\n    ReactEventListener\n  );\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(\n    ReactDOMComponent\n  );\n\n  ReactInjection.NativeComponent.injectTextComponentClass(\n    ReactDOMTextComponent\n  );\n\n  ReactInjection.NativeComponent.injectAutoWrapper(\n    autoGenerateWrapperClass\n  );\n\n  // This needs to happen before createFullPageComponent() otherwise the mixin\n  // won't be included.\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.NativeComponent.injectComponentClasses({\n    'button': ReactDOMButton,\n    'form': ReactDOMForm,\n    'iframe': ReactDOMIframe,\n    'img': ReactDOMImg,\n    'input': ReactDOMInput,\n    'option': ReactDOMOption,\n    'select': ReactDOMSelect,\n    'textarea': ReactDOMTextarea,\n\n    'html': createFullPageComponent('html'),\n    'head': createFullPageComponent('head'),\n    'body': createFullPageComponent('body')\n  });\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(\n    ReactReconcileTransaction\n  );\n  ReactInjection.Updates.injectBatchingStrategy(\n    ReactDefaultBatchingStrategy\n  );\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(\n    ExecutionEnvironment.canUseDOM ?\n      ClientReactRootIndex.createReactRootIndex :\n      ServerReactRootIndex.createReactRootIndex\n  );\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';\n    if ((/[?&]react_perf\\b/).test(url)) {\n      var ReactDefaultPerf = require(\"./ReactDefaultPerf\");\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n}).call(this,require('_process'))\n},{\"./BeforeInputEventPlugin\":273,\"./ChangeEventPlugin\":278,\"./ClientReactRootIndex\":279,\"./DefaultEventPluginOrder\":284,\"./EnterLeaveEventPlugin\":285,\"./ExecutionEnvironment\":292,\"./HTMLDOMPropertyConfig\":294,\"./MobileSafariClickEventPlugin\":298,\"./ReactBrowserComponentMixin\":302,\"./ReactClass\":308,\"./ReactComponentBrowserEnvironment\":310,\"./ReactDOMButton\":317,\"./ReactDOMComponent\":318,\"./ReactDOMForm\":319,\"./ReactDOMIDOperations\":320,\"./ReactDOMIframe\":321,\"./ReactDOMImg\":322,\"./ReactDOMInput\":323,\"./ReactDOMOption\":324,\"./ReactDOMSelect\":325,\"./ReactDOMTextComponent\":327,\"./ReactDOMTextarea\":328,\"./ReactDefaultBatchingStrategy\":329,\"./ReactDefaultPerf\":331,\"./ReactElement\":333,\"./ReactEventListener\":338,\"./ReactInjection\":340,\"./ReactInstanceHandles\":342,\"./ReactMount\":347,\"./ReactReconcileTransaction\":358,\"./SVGDOMPropertyConfig\":372,\"./SelectEventPlugin\":373,\"./ServerReactRootIndex\":374,\"./SimpleEventPlugin\":375,\"./createFullPageComponent\":396,\"_process\":25}],331:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactDefaultPerfAnalysis = require(\"./ReactDefaultPerfAnalysis\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar performanceNow = require(\"./performanceNow\");\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function() {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function() {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function() {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  getMeasurementsSummaryMap: function(measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(\n      measurements,\n      true\n    );\n    return summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  printDOM: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function(item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result['type'] = item.type;\n      result['args'] = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  _recordWrite: function(id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes =\n      ReactDefaultPerf\n        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]\n        .writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function(moduleName, fnName, func) {\n    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' ||\n          fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' ||\n          moduleName === 'ReactDOMIDOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function(update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(\n              update.parentID,\n              update.type,\n              totalTime,\n              writeArgs\n            );\n          });\n        } else {\n          // basic format\n          ReactDefaultPerf._recordWrite(\n            args[0],\n            fnName,\n            totalTime,\n            Array.prototype.slice.call(args, 1)\n          );\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (\n        (// TODO: receiveComponent()?\n        (fnName === 'mountComponent' ||\n        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {\n\n        if (typeof this._currentElement.type === 'string') {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ?\n          args[0] :\n          this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ?\n            this._currentElement._owner.getName() :\n            '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n\n},{\"./DOMProperty\":281,\"./ReactDefaultPerfAnalysis\":332,\"./ReactMount\":347,\"./ReactPerf\":352,\"./performanceNow\":433}],332:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\nvar assign = require(\"./Object.assign\");\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  TEXT_CONTENT: 'set textContent',\n  'updatePropertyByID': 'update attribute',\n  'deletePropertyByID': 'delete attribute',\n  'updateStylesByID': 'update styles',\n  'updateInnerHTMLByID': 'set innerHTML',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var id;\n\n    for (id in measurement.writes) {\n      measurement.writes[id].forEach(function(write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    }\n  }\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n\n},{\"./Object.assign\":299}],333:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./ReactContext\":314,\"./ReactCurrentOwner\":315,\"./warning\":442,\"_process\":25}],334:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See http://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. ' +\n    'Instead, specify the correct value when ' +\n    'initially creating the element.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n}).call(this,require('_process'))\n},{\"./ReactCurrentOwner\":315,\"./ReactElement\":333,\"./ReactFragment\":339,\"./ReactNativeComponent\":350,\"./ReactPropTypeLocationNames\":354,\"./ReactPropTypeLocations\":355,\"./getIteratorFn\":412,\"./invariant\":421,\"./warning\":442,\"_process\":25}],335:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\nvar ReactEmptyComponentType = function() {};\nReactEmptyComponentType.prototype.componentDidMount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Make sure we run these methods in the correct order, we shouldn't\n  // need this check. We're going to assume if we're here it means we ran\n  // componentWillUnmount already so there is no internal instance (it gets\n  // removed as part of the unmounting process).\n  if (!internalInstance) {\n    return;\n  }\n  registerNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.componentWillUnmount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Get rid of this check. See TODO in componentDidMount.\n  if (!internalInstance) {\n    return;\n  }\n  deregisterNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.render = function() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n};\n\nvar emptyElement = ReactElement.createElement(ReactEmptyComponentType);\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  emptyElement: emptyElement,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./ReactInstanceMap\":343,\"./invariant\":421,\"_process\":25}],336:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n\"use strict\";\n\nvar ReactErrorUtils = {\n  /**\n   * Creates a guarded version of a function. This is supposed to make debugging\n   * of event handlers easier. To aid debugging with the browser's debugger,\n   * this currently simply returns the original function.\n   *\n   * @param {function} func Function to be executed\n   * @param {string} name The name of the guard\n   * @return {function}\n   */\n  guard: function(func, name) {\n    return func;\n  }\n};\n\nmodule.exports = ReactErrorUtils;\n\n},{}],337:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue();\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events = EventPluginHub.extractEvents(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n},{\"./EventPluginHub\":288}],338:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require(\"./EventListener\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar getEventTarget = require(\"./getEventTarget\");\nvar getUnboundedScrollPosition = require(\"./getUnboundedScrollPosition\");\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(\n  TopLevelCallbackBookKeeping,\n  PooledClass.twoArgumentPooler\n);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(bookKeeping.nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(\n      bookKeeping.topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      bookKeeping.nativeEvent\n    );\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function() {\n    return ReactEventListener._enabled;\n  },\n\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  monitorScrollValue: function(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(\n      topLevelType,\n      nativeEvent\n    );\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n},{\"./EventListener\":287,\"./ExecutionEnvironment\":292,\"./Object.assign\":299,\"./PooledClass\":300,\"./ReactInstanceHandles\":342,\"./ReactMount\":347,\"./ReactUpdates\":370,\"./getEventTarget\":411,\"./getUnboundedScrollPosition\":417}],339:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactFragment\n*/\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is opaque, for now.\n */\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var fragmentKey = '_reactFragment';\n  var didWarnKey = '_reactDidWarn';\n  var canWarnForReactFragment = false;\n\n  try {\n    // Feature test. Don't even try to issue this warning if we can't use\n    // enumerable: false.\n\n    var dummy = function() {\n      return 1;\n    };\n\n    Object.defineProperty(\n      {},\n      fragmentKey,\n      {enumerable: false, value: true}\n    );\n\n    Object.defineProperty(\n      {},\n      'key',\n      {enumerable: true, get: dummy}\n    );\n\n    canWarnForReactFragment = true;\n  } catch (x) { }\n\n  var proxyPropertyAccessWithWarning = function(obj, key) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function() {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an opaque type. Accessing any of its ' +\n          'properties is deprecated. Pass it to one of the React.Children ' +\n          'helpers.'\n        ) : null);\n        this[didWarnKey] = true;\n        return this[fragmentKey][key];\n      },\n      set: function(value) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an immutable opaque type. Mutating its ' +\n          'properties is deprecated.'\n        ) : null);\n        this[didWarnKey] = true;\n        this[fragmentKey][key] = value;\n      }\n    });\n  };\n\n  var issuedWarnings = {};\n\n  var didWarnForFragment = function(fragment) {\n    // We use the keys and the type of the value as a heuristic to dedupe the\n    // warning to avoid spamming too much.\n    var fragmentCacheKey = '';\n    for (var key in fragment) {\n      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';\n    }\n    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];\n    issuedWarnings[fragmentCacheKey] = true;\n    return alreadyWarnedOnce;\n  };\n}\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function(object) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment only accepts a single object.',\n          object\n        ) : null);\n        return object;\n      }\n      if (ReactElement.isValidElement(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment does not accept a ReactElement ' +\n          'without a wrapper object.'\n        ) : null);\n        return object;\n      }\n      if (canWarnForReactFragment) {\n        var proxy = {};\n        Object.defineProperty(proxy, fragmentKey, {\n          enumerable: false,\n          value: object\n        });\n        Object.defineProperty(proxy, didWarnKey, {\n          writable: true,\n          enumerable: false,\n          value: false\n        });\n        for (var key in object) {\n          proxyPropertyAccessWithWarning(proxy, key);\n        }\n        Object.preventExtensions(proxy);\n        return proxy;\n      }\n    }\n    return object;\n  },\n  // Extract the original keyed object from the fragment opaque type. Warn if\n  // a plain object is passed here.\n  extract: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        if (!fragment[fragmentKey]) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnForFragment(fragment),\n            'Any use of a keyed object should be wrapped in ' +\n            'React.addons.createFragment(object) before being passed as a ' +\n            'child.'\n          ) : null);\n          return fragment;\n        }\n        return fragment[fragmentKey];\n      }\n    }\n    return fragment;\n  },\n  // Check if this is a fragment and if so, extract the keyed object. If it\n  // is a fragment-like object, warn that it should be wrapped. Ignore if we\n  // can't determine what kind of object this is.\n  extractIfFragment: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        // If it is the opaque type, return the keyed object.\n        if (fragment[fragmentKey]) {\n          return fragment[fragmentKey];\n        }\n        // Otherwise, check each property if it has an element, if it does\n        // it is probably meant as a fragment, so we can warn early. Defer,\n        // the warning to extract.\n        for (var key in fragment) {\n          if (fragment.hasOwnProperty(key) &&\n              ReactElement.isValidElement(fragment[key])) {\n            // This looks like a fragment object, we should provide an\n            // early warning.\n            return ReactFragment.extract(fragment);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n};\n\nmodule.exports = ReactFragment;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./warning\":442,\"_process\":25}],340:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactRootIndex = require(\"./ReactRootIndex\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMComponent: ReactDOMComponent.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n},{\"./DOMProperty\":281,\"./EventPluginHub\":288,\"./ReactBrowserEventEmitter\":303,\"./ReactClass\":308,\"./ReactComponentEnvironment\":311,\"./ReactDOMComponent\":318,\"./ReactEmptyComponent\":335,\"./ReactNativeComponent\":350,\"./ReactPerf\":352,\"./ReactRootIndex\":361,\"./ReactUpdates\":370}],341:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require(\"./ReactDOMSelection\");\n\nvar containsNode = require(\"./containsNode\");\nvar focusNode = require(\"./focusNode\");\nvar getActiveElement = require(\"./getActiveElement\");\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function(elem) {\n    return elem && (\n      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||\n      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')\n    );\n  },\n\n  getSelectionInformation: function() {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange:\n          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?\n          ReactInputSelection.getSelection(focusedElem) :\n          null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function(priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem &&\n        isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(\n          priorFocusedElem,\n          priorSelectionRange\n        );\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function(input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || {start: 0, end: 0};\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function(input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n},{\"./ReactDOMSelection\":326,\"./containsNode\":394,\"./focusNode\":405,\"./getActiveElement\":407}],342:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require(\"./ReactRootIndex\");\n\nvar invariant = require(\"./invariant\");\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 100;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || (\n    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR\n  );\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return (\n    descendantID.indexOf(ancestorID) === 0 &&\n    isBoundary(descendantID, ancestorID.length)\n  );\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(ancestorID) && isValidID(destinationID),\n    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',\n    ancestorID,\n    destinationID\n  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isAncestorIDOf(ancestorID, destinationID),\n    'getNextDescendantID(...): React has made an invalid assumption about ' +\n    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',\n    ancestorID,\n    destinationID\n  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(longestCommonID),\n    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',\n    oneID,\n    twoID,\n    longestCommonID\n  ) : invariant(isValidID(longestCommonID)));\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    start !== stop,\n    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',\n    start\n  ) : invariant(start !== stop));\n  var traverseUp = isAncestorIDOf(stop, start);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    traverseUp || isAncestorIDOf(start, stop),\n    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +\n    'not have a parent path.',\n    start,\n    stop\n  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start; /* until break */; id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      depth++ < MAX_TREE_DEPTH,\n      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +\n      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',\n      start, stop\n    ) : invariant(depth++ < MAX_TREE_DEPTH));\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function() {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function(rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function(id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function(targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function(targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n}).call(this,require('_process'))\n},{\"./ReactRootIndex\":361,\"./invariant\":421,\"_process\":25}],343:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function(key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function(key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function(key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function(key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n},{}],344:[function(require,module,exports){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLifeCycle\n */\n\n'use strict';\n\n/**\n * This module manages the bookkeeping when a component is in the process\n * of being mounted or being unmounted. This is used as a way to enforce\n * invariants (or warnings) when it is not recommended to call\n * setState/forceUpdate.\n *\n * currentlyMountingInstance: During the construction phase, it is not possible\n * to trigger an update since the instance is not fully mounted yet. However, we\n * currently allow this as a convenience for mutating the initial state.\n *\n * currentlyUnmountingInstance: During the unmounting phase, the instance is\n * still mounted and can therefore schedule an update. However, this is not\n * recommended and probably an error since it's about to be unmounted.\n * Therefore we still want to trigger in an error for that case.\n */\n\nvar ReactLifeCycle = {\n  currentlyMountingInstance: null,\n  currentlyUnmountingInstance: null\n};\n\nmodule.exports = ReactLifeCycle;\n\n},{}],345:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLink\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactLink encapsulates a common pattern in which a component wants to modify\n * a prop received from its parent. ReactLink allows the parent to pass down a\n * value coupled with a callback that, when invoked, expresses an intent to\n * modify that value. For example:\n *\n * React.createClass({\n *   getInitialState: function() {\n *     return {value: ''};\n *   },\n *   render: function() {\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\n *     return <input valueLink={valueLink} />;\n *   },\n *   this._handleValueChange: function(newValue) {\n *     this.setState({value: newValue});\n *   }\n * });\n *\n * We have provided some sugary mixins to make the creation and\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\n */\n\nvar React = require(\"./React\");\n\n/**\n * @param {*} value current value of the link\n * @param {function} requestChange callback to request a change\n */\nfunction ReactLink(value, requestChange) {\n  this.value = value;\n  this.requestChange = requestChange;\n}\n\n/**\n * Creates a PropType that enforces the ReactLink API and optionally checks the\n * type of the value being passed inside the link. Example:\n *\n * MyComponent.propTypes = {\n *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)\n * }\n */\nfunction createLinkTypeChecker(linkType) {\n  var shapes = {\n    value: typeof linkType === 'undefined' ?\n      React.PropTypes.any.isRequired :\n      linkType.isRequired,\n    requestChange: React.PropTypes.func.isRequired\n  };\n  return React.PropTypes.shape(shapes);\n}\n\nReactLink.PropTypes = {\n  link: createLinkTypeChecker\n};\n\nmodule.exports = ReactLink;\n\n},{\"./React\":301}],346:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n},{\"./adler32\":390}],347:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar containsNode = require(\"./containsNode\");\nvar getReactRootElementInContainer = require(\"./getReactRootElementInContainer\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !isValid(cached, id),\n          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',\n          ATTR_NAME, id\n        ) : invariant(!isValid(cached, id)));\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponent.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalGetID(node) === id,\n      'ReactMount: Unexpected modification of `%s`',\n      ATTR_NAME\n    ) : invariant(internalGetID(node) === id));\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(\n    targetID,\n    findDeepestCachedAncestorImpl\n  );\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup) {\n  var markup = ReactReconciler.mountComponent(\n    componentInstance, rootID, transaction, emptyObject\n  );\n  componentInstance._isTopLevel = true;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    shouldReuseMarkup) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  transaction.perform(\n    mountComponentIntoNode,\n    null,\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup\n  );\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function(container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function(\n      prevComponent,\n      nextElement,\n      container,\n      callback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    ReactMount.scrollMonitor(container, function() {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] =\n        getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function(nextComponent, container) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      '_registerComponent(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function(\n    nextElement,\n    container,\n    shouldReuseMarkup\n  ) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      '_renderNewRootComponent(): Render methods should be a pure function ' +\n      'of props and state; triggering nested component updates from ' +\n      'render is not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(\n      componentInstance,\n      container\n    );\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(\n      batchedMountComponentIntoNode,\n      componentInstance,\n      reactRootID,\n      container,\n      shouldReuseMarkup\n    );\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] =\n        getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function(nextElement, container, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactElement.isValidElement(nextElement),\n      'React.render(): Invalid component element.%s',\n      (\n        typeof nextElement === 'string' ?\n          ' Instead of passing an element string, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        typeof nextElement === 'function' ?\n          ' Instead of passing a component class, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        // Check if it quacks like an element\n        nextElement != null && nextElement.props !== undefined ?\n          ' This may be caused by unintentionally loading two independent ' +\n          'copies of React.' :\n          ''\n      )\n    ) : invariant(ReactElement.isValidElement(nextElement)));\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevElement = prevComponent._currentElement;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        return ReactMount._updateRootComponent(\n          prevComponent,\n          nextElement,\n          container,\n          callback\n        ).getPublicInstance();\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup =\n      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (ReactMount.isRenderedByReact(rootElementSibling)) {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.'\n            ) : null);\n            break;\n          }\n\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;\n\n    var component = ReactMount._renderNewRootComponent(\n      nextElement,\n      container,\n      shouldReuseMarkup\n    ).getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into the supplied `container`.\n   *\n   * @param {function} constructor React component constructor.\n   * @param {?object} props Initial props of the component instance.\n   * @param {DOMElement} container DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  constructAndRenderComponent: function(constructor, props, container) {\n    var element = ReactElement.createElement(constructor, props);\n    return ReactMount.render(element, container);\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into a container node identified by supplied `id`.\n   *\n   * @param {function} componentConstructor React component constructor\n   * @param {?object} props Initial props of the component instance.\n   * @param {string} id ID of the DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in the container node.\n   */\n  constructAndRenderComponentByID: function(constructor, props, id) {\n    var domNode = document.getElementById(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      domNode,\n      'Tried to get element with id of \"%s\" but it is not present on the page.',\n      id\n    ) : invariant(domNode));\n    return ReactMount.constructAndRenderComponent(constructor, props, domNode);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function(container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function(container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      'unmountComponentAtNode(): Render methods should be a pure function of ' +\n      'props and state; triggering nested component updates from render is ' +\n      'not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'unmountComponentAtNode(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      return false;\n    }\n    ReactMount.unmountComponentFromNode(component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (\"production\" !== process.env.NODE_ENV) {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Unmounts a component and removes it from the DOM.\n   *\n   * @param {ReactComponent} instance React component instance.\n   * @param {DOMElement} container DOM element to unmount from.\n   * @final\n   * @internal\n   * @see {ReactMount.unmountComponentAtNode}\n   */\n  unmountComponentFromNode: function(instance, container) {\n    ReactReconciler.unmountComponent(instance);\n\n    if (container.nodeType === DOC_NODE_TYPE) {\n      container = container.documentElement;\n    }\n\n    // http://jsperf.com/emptying-a-node\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function(id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          // Call internalGetID here because getID calls isValid which calls\n          // findReactContainerForID (this function).\n          internalGetID(rootElement) === reactRootID,\n          'ReactMount: Root element ID differed from reactRootID.'\n        ) : invariant(// Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID));\n\n        var containerChild = container.firstChild;\n        if (containerChild &&\n            reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'ReactMount: Root element has been removed from its original ' +\n            'container. New container:', rootElement.parentNode\n          ) : null);\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function(id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * True if the supplied `node` is rendered by React.\n   *\n   * @param {*} node DOM Element to check.\n   * @return {boolean} True if the DOM Element appears to be rendered by React.\n   * @internal\n   */\n  isRenderedByReact: function(node) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      return false;\n    }\n    var id = ReactMount.getID(node);\n    return id ? id.charAt(0) === SEPARATOR : false;\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function(node) {\n    var current = node;\n    while (current && current.parentNode !== current) {\n      if (ReactMount.isRenderedByReact(current)) {\n        return current;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function(ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'findComponentRoot(..., %s): Unable to find element. This probably ' +\n      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +\n      'usually due to forgetting a <tbody> when using tables, nesting tags ' +\n      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +\n      'parent. ' +\n      'Try inspecting the child nodes of the element with React ID `%s`.',\n      targetID,\n      ReactMount.getID(ancestorNode)\n    ) : invariant(false));\n  },\n\n  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'mountComponentIntoNode(...): Target container is not valid.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n        );\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,\n          checksum\n        );\n\n        var diffIndex = firstDifferenceIndex(markup, rootMarkup);\n        var difference = ' (client) ' +\n          markup.substring(diffIndex - 20, diffIndex + 20) +\n          '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          container.nodeType !== DOC_NODE_TYPE,\n          'You\\'re trying to render a component to the document using ' +\n          'server rendering but the checksum was invalid. This usually ' +\n          'means you rendered a different component type or props on ' +\n          'the client from the one on the server, or your render() ' +\n          'methods are impure. React cannot handle this case due to ' +\n          'cross-browser quirks by rendering at the document root. You ' +\n          'should look for environment dependent code in your components ' +\n          'and ensure the props are the same client and server side:\\n%s',\n          difference\n        ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'React attempted to reuse markup in a container but the ' +\n            'checksum was invalid. This generally means that you are ' +\n            'using server rendering and the markup generated on the ' +\n            'server was not what the client was expecting. React injected ' +\n            'new markup to compensate which works but you have lost many ' +\n            'of the benefits of server rendering. Instead, figure out ' +\n            'why the markup being generated is different on the client ' +\n            'or server:\\n%s',\n            difference\n          ) : null);\n        }\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container.nodeType !== DOC_NODE_TYPE,\n      'You\\'re trying to render a component to the document but ' +\n        'you didn\\'t use server rendering. We can\\'t do this ' +\n        'without using server rendering due to cross-browser quirks. ' +\n        'See React.renderToString() for server rendering.'\n    ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n    setInnerHTML(container, markup);\n  },\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n}).call(this,require('_process'))\n},{\"./DOMProperty\":281,\"./ReactBrowserEventEmitter\":303,\"./ReactCurrentOwner\":315,\"./ReactElement\":333,\"./ReactElementValidator\":334,\"./ReactEmptyComponent\":335,\"./ReactInstanceHandles\":342,\"./ReactInstanceMap\":343,\"./ReactMarkupChecksum\":346,\"./ReactPerf\":352,\"./ReactReconciler\":359,\"./ReactUpdateQueue\":369,\"./ReactUpdates\":370,\"./containsNode\":394,\"./emptyObject\":401,\"./getReactRootElementInContainer\":415,\"./instantiateReactComponent\":420,\"./invariant\":421,\"./setInnerHTML\":435,\"./shouldUpdateReactComponent\":438,\"./warning\":442,\"_process\":25}],348:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactChildReconciler = require(\"./ReactChildReconciler\");\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    textContent: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    textContent: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(\n      updateQueue,\n      markupQueue\n    );\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function(nestedChildren, transaction, context) {\n      var children = ReactChildReconciler.instantiateChildren(\n        nestedChildren, transaction, context\n      );\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(\n            child,\n            rootID,\n            transaction,\n            context\n          );\n          child._mountIndex = index;\n          mountImages.push(mountImage);\n          index++;\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function(nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function(nextNestedChildren, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildren, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function(nextNestedChildren, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = ReactChildReconciler.updateChildren(\n        prevChildren, nextNestedChildren, transaction, context\n      );\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChildByName(prevChild, name);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(\n            nextChild, name, nextIndex, transaction, context\n          );\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) &&\n            !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChildByName(prevChildren[name], name);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function() {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function(child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function(child, mountImage) {\n      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function(child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function(textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function(\n      child,\n      name,\n      index,\n      transaction,\n      context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(\n        child,\n        rootID,\n        transaction,\n        context\n      );\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child by name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @param {string} name Name of the child in `this._renderedChildren`.\n     * @private\n     */\n    _unmountChildByName: function(child, name) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n},{\"./ReactChildReconciler\":306,\"./ReactComponentEnvironment\":311,\"./ReactMultiChildUpdateTypes\":349,\"./ReactReconciler\":359}],349:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n},{\"./keyMirror\":427}],350:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./invariant\":421,\"_process\":25}],351:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function(object) {\n    return !!(\n      (object &&\n      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')\n    );\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to add a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to remove a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],352:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function(object, objectName, methodNames) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(\n          objectName,\n          methodNames[key],\n          object[key]\n        );\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var measuredFunc = null;\n      var wrapper = function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],353:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTransferer\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar joinClasses = require(\"./joinClasses\");\n\n/**\n * Creates a transfer strategy that will merge prop values using the supplied\n * `mergeStrategy`. If a prop was previously unset, this just sets it.\n *\n * @param {function} mergeStrategy\n * @return {function}\n */\nfunction createTransferStrategy(mergeStrategy) {\n  return function(props, key, value) {\n    if (!props.hasOwnProperty(key)) {\n      props[key] = value;\n    } else {\n      props[key] = mergeStrategy(props[key], value);\n    }\n  };\n}\n\nvar transferStrategyMerge = createTransferStrategy(function(a, b) {\n  // `merge` overrides the first object's (`props[key]` above) keys using the\n  // second object's (`value`) keys. An object's style's existing `propA` would\n  // get overridden. Flip the order here.\n  return assign({}, b, a);\n});\n\n/**\n * Transfer strategies dictate how props are transferred by `transferPropsTo`.\n * NOTE: if you add any more exceptions to this list you should be sure to\n * update `cloneWithProps()` accordingly.\n */\nvar TransferStrategies = {\n  /**\n   * Never transfer `children`.\n   */\n  children: emptyFunction,\n  /**\n   * Transfer the `className` prop by merging them.\n   */\n  className: createTransferStrategy(joinClasses),\n  /**\n   * Transfer the `style` prop (which is an object) by merging them.\n   */\n  style: transferStrategyMerge\n};\n\n/**\n * Mutates the first argument by transferring the properties from the second\n * argument.\n *\n * @param {object} props\n * @param {object} newProps\n * @return {object}\n */\nfunction transferInto(props, newProps) {\n  for (var thisKey in newProps) {\n    if (!newProps.hasOwnProperty(thisKey)) {\n      continue;\n    }\n\n    var transferStrategy = TransferStrategies[thisKey];\n\n    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\n      transferStrategy(props, thisKey, newProps[thisKey]);\n    } else if (!props.hasOwnProperty(thisKey)) {\n      props[thisKey] = newProps[thisKey];\n    }\n  }\n  return props;\n}\n\n/**\n * ReactPropTransferer are capable of transferring props to another component\n * using a `transferPropsTo` method.\n *\n * @class ReactPropTransferer\n */\nvar ReactPropTransferer = {\n\n  /**\n   * Merge two props objects using TransferStrategies.\n   *\n   * @param {object} oldProps original props (they take precedence)\n   * @param {object} newProps new props to merge in\n   * @return {object} a new object containing both sets of props merged.\n   */\n  mergeProps: function(oldProps, newProps) {\n    return transferInto(assign({}, oldProps), newProps);\n  }\n\n};\n\nmodule.exports = ReactPropTransferer;\n\n},{\"./Object.assign\":299,\"./emptyFunction\":400,\"./joinClasses\":426}],354:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],355:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n},{\"./keyMirror\":427}],356:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar elementTypeChecker = createElementTypeChecker();\nvar nodeTypeChecker = createNodeChecker();\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: elementTypeChecker,\n  instanceOf: createInstanceTypeChecker,\n  node: nodeTypeChecker,\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          (\"Required \" + locationName + \" `\" + propName + \"` was not specified in \") +\n          (\"`\" + componentName + \"`.\")\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + preciseType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `\" + expectedType + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\")\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactElement.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected instance of `\" + expectedClassName + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` of value `\" + propValue + \"` \") +\n      (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\")\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  function validate(props, propName, componentName, location) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n      (\"`\" + componentName + \"`.\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactNode.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `object`.\")\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n      propValue = ReactFragment.extractIfFragment(propValue);\n      for (var k in propValue) {\n        if (!isNode(propValue[k])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\nmodule.exports = ReactPropTypes;\n\n},{\"./ReactElement\":333,\"./ReactFragment\":339,\"./ReactPropTypeLocationNames\":354,\"./emptyFunction\":400}],357:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPutListenerQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar assign = require(\"./Object.assign\");\n\nfunction ReactPutListenerQueue() {\n  this.listenersToPut = [];\n}\n\nassign(ReactPutListenerQueue.prototype, {\n  enqueuePutListener: function(rootNodeID, propKey, propValue) {\n    this.listenersToPut.push({\n      rootNodeID: rootNodeID,\n      propKey: propKey,\n      propValue: propValue\n    });\n  },\n\n  putListeners: function() {\n    for (var i = 0; i < this.listenersToPut.length; i++) {\n      var listenerToPut = this.listenersToPut[i];\n      ReactBrowserEventEmitter.putListener(\n        listenerToPut.rootNodeID,\n        listenerToPut.propKey,\n        listenerToPut.propValue\n      );\n    }\n  },\n\n  reset: function() {\n    this.listenersToPut.length = 0;\n  },\n\n  destructor: function() {\n    this.reset();\n  }\n});\n\nPooledClass.addPoolingTo(ReactPutListenerQueue);\n\nmodule.exports = ReactPutListenerQueue;\n\n},{\"./Object.assign\":299,\"./PooledClass\":300,\"./ReactBrowserEventEmitter\":303}],358:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function() {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`\n   *   restores the previous value.\n   */\n  close: function(previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function() {\n    this.reactMountReady.notifyAll();\n  }\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: function() {\n    this.putListenerQueue.putListeners();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  SELECTION_RESTORATION,\n  EVENT_SUPPRESSION,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction() {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap proceedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n},{\"./CallbackQueue\":277,\"./Object.assign\":299,\"./PooledClass\":300,\"./ReactBrowserEventEmitter\":303,\"./ReactInputSelection\":341,\"./ReactPutListenerQueue\":357,\"./Transaction\":387}],359:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require(\"./ReactRef\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(\n        internalInstance._currentElement\n      );\n    }\n    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance, nextElement, transaction, context\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && nextElement._owner != null) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n      return;\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(\n      prevElement,\n      nextElement\n    );\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction\n  ) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n}).call(this,require('_process'))\n},{\"./ReactElementValidator\":334,\"./ReactRef\":360,\"_process\":25}],360:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require(\"./ReactOwner\");\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function(prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  return (\n    nextElement._owner !== prevElement._owner ||\n    nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n},{\"./ReactOwner\":351}],361:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function(_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n\n},{}],362:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactServerRenderingTransaction =\n  require(\"./ReactServerRenderingTransaction\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToString(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup =\n        componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToStaticMarkup(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./ReactInstanceHandles\":342,\"./ReactMarkupChecksum\":346,\"./ReactServerRenderingTransaction\":363,\"./emptyObject\":401,\"./instantiateReactComponent\":420,\"./invariant\":421,\"_process\":25}],363:[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n},{\"./CallbackQueue\":277,\"./Object.assign\":299,\"./PooledClass\":300,\"./ReactPutListenerQueue\":357,\"./Transaction\":387,\"./emptyFunction\":400}],364:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactStateSetters\n */\n\n'use strict';\n\nvar ReactStateSetters = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function(component, funcReturningState) {\n    return function(a, b, c, d, e, f) {\n      var partialState = funcReturningState.call(component, a, b, c, d, e, f);\n      if (partialState) {\n        component.setState(partialState);\n      }\n    };\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function(component, key) {\n    // Memoize the setters.\n    var cache = component.__keySetters || (component.__keySetters = {});\n    return cache[key] || (cache[key] = createStateKeySetter(component, key));\n  }\n};\n\nfunction createStateKeySetter(component, key) {\n  // Partial state is allocated outside of the function closure so it can be\n  // reused with every call, avoiding memory allocation when this function\n  // is called.\n  var partialState = {};\n  return function stateKeySetter(value) {\n    partialState[key] = value;\n    component.setState(partialState);\n  };\n}\n\nReactStateSetters.Mixin = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateSetter(function(xValue) {\n   *     return {x: xValue};\n   *   })(1);\n   *\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function(funcReturningState) {\n    return ReactStateSetters.createStateSetter(this, funcReturningState);\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateKeySetter('x')(1);\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function(key) {\n    return ReactStateSetters.createStateKeySetter(this, key);\n  }\n};\n\nmodule.exports = ReactStateSetters;\n\n},{}],365:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTestUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar React = require(\"./React\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar assign = require(\"./Object.assign\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction Event(suffix) {}\n\n/**\n * @class ReactTestUtils\n */\n\n/**\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\n * utilities will suffice for testing purposes.\n * @lends ReactTestUtils\n */\nvar ReactTestUtils = {\n  renderIntoDocument: function(instance) {\n    var div = document.createElement('div');\n    // None of our tests actually require attaching the container to the\n    // DOM, and doing so creates a mess that we rely on test isolation to\n    // clean up, so we're going to stop honoring the name of this method\n    // (and probably rename it eventually) if no problems arise.\n    // document.documentElement.appendChild(div);\n    return React.render(instance, div);\n  },\n\n  isElement: function(element) {\n    return ReactElement.isValidElement(element);\n  },\n\n  isElementOfType: function(inst, convenienceConstructor) {\n    return (\n      ReactElement.isValidElement(inst) &&\n      inst.type === convenienceConstructor\n    );\n  },\n\n  isDOMComponent: function(inst) {\n    // TODO: Fix this heuristic. It's just here because composites can currently\n    // pretend to be DOM components.\n    return !!(inst && inst.tagName && inst.getDOMNode);\n  },\n\n  isDOMComponentElement: function(inst) {\n    return !!(inst &&\n              ReactElement.isValidElement(inst) &&\n              !!inst.tagName);\n  },\n\n  isCompositeComponent: function(inst) {\n    return typeof inst.render === 'function' &&\n           typeof inst.setState === 'function';\n  },\n\n  isCompositeComponentWithType: function(inst, type) {\n    return !!(ReactTestUtils.isCompositeComponent(inst) &&\n             (inst.constructor === type));\n  },\n\n  isCompositeComponentElement: function(inst) {\n    if (!ReactElement.isValidElement(inst)) {\n      return false;\n    }\n    // We check the prototype of the type that will get mounted, not the\n    // instance itself. This is a future proof way of duck typing.\n    var prototype = inst.type.prototype;\n    return (\n      typeof prototype.render === 'function' &&\n      typeof prototype.setState === 'function'\n    );\n  },\n\n  isCompositeComponentElementWithType: function(inst, type) {\n    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&\n             (inst.constructor === type));\n  },\n\n  getRenderedChildOfCompositeComponent: function(inst) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return null;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    return internalInstance._renderedComponent.getPublicInstance();\n  },\n\n  findAllInRenderedTree: function(inst, test) {\n    if (!inst) {\n      return [];\n    }\n    var ret = test(inst) ? [inst] : [];\n    if (ReactTestUtils.isDOMComponent(inst)) {\n      var internalInstance = ReactInstanceMap.get(inst);\n      var renderedChildren = internalInstance\n        ._renderedComponent\n        ._renderedChildren;\n      var key;\n      for (key in renderedChildren) {\n        if (!renderedChildren.hasOwnProperty(key)) {\n          continue;\n        }\n        if (!renderedChildren[key].getPublicInstance) {\n          continue;\n        }\n        ret = ret.concat(\n          ReactTestUtils.findAllInRenderedTree(\n            renderedChildren[key].getPublicInstance(),\n            test\n          )\n        );\n      }\n    } else if (ReactTestUtils.isCompositeComponent(inst)) {\n      ret = ret.concat(\n        ReactTestUtils.findAllInRenderedTree(\n          ReactTestUtils.getRenderedChildOfCompositeComponent(inst),\n          test\n        )\n      );\n    }\n    return ret;\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the class name matching `className`.\n   * @return an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithClass: function(root, className) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      var instClassName = inst.props.className;\n      return ReactTestUtils.isDOMComponent(inst) && (\n        (instClassName && (' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1)\n      );\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithClass: function(root, className) {\n    var all =\n      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match ' +\n        '(found: ' + all.length + ') for class:' + className\n      );\n    }\n    return all[0];\n  },\n\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the tag name matching `tagName`.\n   * @return an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithTag: function(root, tagName) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      return ReactTestUtils.isDOMComponent(inst) &&\n            inst.tagName === tagName.toUpperCase();\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithTag: function(root, tagName) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for tag:' + tagName);\n    }\n    return all[0];\n  },\n\n\n  /**\n   * Finds all instances of components with type equal to `componentType`.\n   * @return an array of all the matches.\n   */\n  scryRenderedComponentsWithType: function(root, componentType) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      return ReactTestUtils.isCompositeComponentWithType(\n        inst,\n        componentType\n      );\n    });\n  },\n\n  /**\n   * Same as `scryRenderedComponentsWithType` but expects there to be one result\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactComponent} The one match.\n   */\n  findRenderedComponentWithType: function(root, componentType) {\n    var all = ReactTestUtils.scryRenderedComponentsWithType(\n      root,\n      componentType\n    );\n    if (all.length !== 1) {\n      throw new Error(\n        'Did not find exactly one match for componentType:' + componentType\n      );\n    }\n    return all[0];\n  },\n\n  /**\n   * Pass a mocked component module to this method to augment it with\n   * useful methods that allow it to be used as a dummy React component.\n   * Instead of rendering as usual, the component will become a simple\n   * <div> containing any provided children.\n   *\n   * @param {object} module the mock function object exported from a\n   *                        module that defines the component to be mocked\n   * @param {?string} mockTagName optional dummy root tag name to return\n   *                              from render method (overrides\n   *                              module.mockTagName if provided)\n   * @return {object} the ReactTestUtils object (for chaining)\n   */\n  mockComponent: function(module, mockTagName) {\n    mockTagName = mockTagName || module.mockTagName || \"div\";\n\n    module.prototype.render.mockImplementation(function() {\n      return React.createElement(\n        mockTagName,\n        null,\n        this.props.children\n      );\n    });\n\n    return this;\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occured\n   * on an `Element` node.\n   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`\n   * @param {!Element} node The dom to simulate an event occurring on.\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnNode: function(topLevelType, node, fakeNativeEvent) {\n    fakeNativeEvent.target = node;\n    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(\n      topLevelType,\n      fakeNativeEvent\n    );\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occured\n   * on the `ReactDOMComponent` `comp`.\n   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`.\n   * @param comp {!ReactDOMComponent}\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnDOMComponent: function(\n      topLevelType,\n      comp,\n      fakeNativeEvent) {\n    ReactTestUtils.simulateNativeEventOnNode(\n      topLevelType,\n      comp.getDOMNode(),\n      fakeNativeEvent\n    );\n  },\n\n  nativeTouchData: function(x, y) {\n    return {\n      touches: [\n        {pageX: x, pageY: y}\n      ]\n    };\n  },\n\n  createRenderer: function() {\n    return new ReactShallowRenderer();\n  },\n\n  Simulate: null,\n  SimulateNative: {}\n};\n\n/**\n * @class ReactShallowRenderer\n */\nvar ReactShallowRenderer = function() {\n  this._instance = null;\n};\n\nReactShallowRenderer.prototype.getRenderOutput = function() {\n  return (\n    (this._instance && this._instance._renderedComponent &&\n     this._instance._renderedComponent._renderedOutput)\n    || null\n  );\n};\n\nvar NoopInternalComponent = function(element) {\n  this._renderedOutput = element;\n  this._currentElement = element === null || element === false ?\n    ReactEmptyComponent.emptyElement :\n    element;\n};\n\nNoopInternalComponent.prototype = {\n\n  mountComponent: function() {\n  },\n\n  receiveComponent: function(element) {\n    this._renderedOutput = element;\n    this._currentElement = element === null || element === false ?\n      ReactEmptyComponent.emptyElement :\n      element;\n  },\n\n  unmountComponent: function() {\n  }\n\n};\n\nvar ShallowComponentWrapper = function() { };\nassign(\n  ShallowComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin, {\n    _instantiateReactComponent: function(element) {\n      return new NoopInternalComponent(element);\n    },\n    _replaceNodeWithMarkupByID: function() {},\n    _renderValidatedComponent:\n      ReactCompositeComponent.Mixin.\n        _renderValidatedComponentWithoutOwnerOrContext\n  }\n);\n\nReactShallowRenderer.prototype.render = function(element, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  this._render(element, transaction, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n};\n\nReactShallowRenderer.prototype.unmount = function() {\n  if (this._instance) {\n    this._instance.unmountComponent();\n  }\n};\n\nReactShallowRenderer.prototype._render = function(element, transaction, context) {\n  if (!this._instance) {\n    var rootID = ReactInstanceHandles.createReactRootID();\n    var instance = new ShallowComponentWrapper(element.type);\n    instance.construct(element);\n\n    instance.mountComponent(rootID, transaction, context);\n\n    this._instance = instance;\n  } else {\n    this._instance.receiveComponent(element, transaction, context);\n  }\n};\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`\n * - ... (All keys from event plugin `eventTypes` objects)\n */\nfunction makeSimulator(eventType) {\n  return function(domComponentOrNode, eventData) {\n    var node;\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      node = domComponentOrNode.getDOMNode();\n    } else if (domComponentOrNode.tagName) {\n      node = domComponentOrNode;\n    }\n\n    var fakeNativeEvent = new Event();\n    fakeNativeEvent.target = node;\n    // We don't use SyntheticEvent.getPooled in order to not have to worry about\n    // properly destroying any properties assigned from `eventData` upon release\n    var event = new SyntheticEvent(\n      ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],\n      ReactMount.getID(node),\n      fakeNativeEvent\n    );\n    assign(event, eventData);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n\n    ReactUpdates.batchedUpdates(function() {\n      EventPluginHub.enqueueEvents(event);\n      EventPluginHub.processEventQueue();\n    });\n  };\n}\n\nfunction buildSimulators() {\n  ReactTestUtils.Simulate = {};\n\n  var eventType;\n  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {\n    /**\n     * @param {!Element || ReactDOMComponent} domComponentOrNode\n     * @param {?object} eventData Fake event data to use in SyntheticEvent.\n     */\n    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);\n  }\n}\n\n// Rebuild ReactTestUtils.Simulate whenever event plugins are injected\nvar oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;\nEventPluginHub.injection.injectEventPluginOrder = function() {\n  oldInjectEventPluginOrder.apply(this, arguments);\n  buildSimulators();\n};\nvar oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;\nEventPluginHub.injection.injectEventPluginsByName = function() {\n  oldInjectEventPlugins.apply(this, arguments);\n  buildSimulators();\n};\n\nbuildSimulators();\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`\n * - ... (All keys from `EventConstants.topLevelTypes`)\n *\n * Note: Top level event types are a subset of the entire set of handler types\n * (which include a broader set of \"synthetic\" events). For example, onDragDone\n * is a synthetic event. Except when testing an event plugin or React's event\n * handling code specifically, you probably want to use ReactTestUtils.Simulate\n * to dispatch synthetic events.\n */\n\nfunction makeNativeSimulator(eventType) {\n  return function(domComponentOrNode, nativeEventData) {\n    var fakeNativeEvent = new Event(eventType);\n    assign(fakeNativeEvent, nativeEventData);\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      ReactTestUtils.simulateNativeEventOnDOMComponent(\n        eventType,\n        domComponentOrNode,\n        fakeNativeEvent\n      );\n    } else if (!!domComponentOrNode.tagName) {\n      // Will allow on actual dom nodes.\n      ReactTestUtils.simulateNativeEventOnNode(\n        eventType,\n        domComponentOrNode,\n        fakeNativeEvent\n      );\n    }\n  };\n}\n\nvar eventType;\nfor (eventType in topLevelTypes) {\n  // Event type is stored as 'topClick' - we transform that to 'click'\n  var convenienceName = eventType.indexOf('top') === 0 ?\n    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;\n  /**\n   * @param {!Element || ReactDOMComponent} domComponentOrNode\n   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.\n   */\n  ReactTestUtils.SimulateNative[convenienceName] =\n    makeNativeSimulator(eventType);\n}\n\nmodule.exports = ReactTestUtils;\n\n},{\"./EventConstants\":286,\"./EventPluginHub\":288,\"./EventPropagators\":291,\"./Object.assign\":299,\"./React\":301,\"./ReactBrowserEventEmitter\":303,\"./ReactCompositeComponent\":313,\"./ReactElement\":333,\"./ReactEmptyComponent\":335,\"./ReactInstanceHandles\":342,\"./ReactInstanceMap\":343,\"./ReactMount\":347,\"./ReactUpdates\":370,\"./SyntheticEvent\":379}],366:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactTransitionChildMapping\n */\n\n'use strict';\n\nvar ReactChildren = require(\"./ReactChildren\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar ReactTransitionChildMapping = {\n  /**\n   * Given `this.props.children`, return an object mapping key to child. Just\n   * simple syntactic sugar around ReactChildren.map().\n   *\n   * @param {*} children `this.props.children`\n   * @return {object} Mapping of key to child\n   */\n  getChildMapping: function(children) {\n    if (!children) {\n      return children;\n    }\n    return ReactFragment.extract(ReactChildren.map(children, function(child) {\n      return child;\n    }));\n  },\n\n  /**\n   * When you're adding or removing children some may be added or removed in the\n   * same render pass. We want to show *both* since we want to simultaneously\n   * animate elements in and out. This function takes a previous set of keys\n   * and a new set of keys and merges them with its best guess of the correct\n   * ordering. In the future we may expose some of the utilities in\n   * ReactMultiChild to make this easy, but for now React itself does not\n   * directly have this concept of the union of prevChildren and nextChildren\n   * so we implement it here.\n   *\n   * @param {object} prev prev children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @param {object} next next children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @return {object} a key set that contains all keys in `prev` and all keys\n   * in `next` in a reasonable order.\n   */\n  mergeChildMappings: function(prev, next) {\n    prev = prev || {};\n    next = next || {};\n\n    function getValueForKey(key) {\n      if (next.hasOwnProperty(key)) {\n        return next[key];\n      } else {\n        return prev[key];\n      }\n    }\n\n    // For each key of `next`, the list of keys to insert before that key in\n    // the combined list\n    var nextKeysPending = {};\n\n    var pendingKeys = [];\n    for (var prevKey in prev) {\n      if (next.hasOwnProperty(prevKey)) {\n        if (pendingKeys.length) {\n          nextKeysPending[prevKey] = pendingKeys;\n          pendingKeys = [];\n        }\n      } else {\n        pendingKeys.push(prevKey);\n      }\n    }\n\n    var i;\n    var childMapping = {};\n    for (var nextKey in next) {\n      if (nextKeysPending.hasOwnProperty(nextKey)) {\n        for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n          var pendingNextKey = nextKeysPending[nextKey][i];\n          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(\n            pendingNextKey\n          );\n        }\n      }\n      childMapping[nextKey] = getValueForKey(nextKey);\n    }\n\n    // Finally, add the keys which didn't appear before any key in `next`\n    for (i = 0; i < pendingKeys.length; i++) {\n      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n    }\n\n    return childMapping;\n  }\n};\n\nmodule.exports = ReactTransitionChildMapping;\n\n},{\"./ReactChildren\":307,\"./ReactFragment\":339}],367:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionEvents\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\n/**\n * EVENT_NAME_MAP is used to determine which event fired when a\n * transition/animation ends, based on the style property used to\n * define that event.\n */\nvar EVENT_NAME_MAP = {\n  transitionend: {\n    'transition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'mozTransitionEnd',\n    'OTransition': 'oTransitionEnd',\n    'msTransition': 'MSTransitionEnd'\n  },\n\n  animationend: {\n    'animation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'MozAnimation': 'mozAnimationEnd',\n    'OAnimation': 'oAnimationEnd',\n    'msAnimation': 'MSAnimationEnd'\n  }\n};\n\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are useable, and if not remove them\n  // from the map\n  if (!('AnimationEvent' in window)) {\n    delete EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  for (var baseEventName in EVENT_NAME_MAP) {\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\n    for (var styleName in baseEvents) {\n      if (styleName in style) {\n        endEvents.push(baseEvents[styleName]);\n        break;\n      }\n    }\n  }\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  detectEvents();\n}\n\n// We use the raw {add|remove}EventListener() call because EventListener\n// does not know how to remove event listeners and we really should\n// clean up. Also, these events are not triggered in older browsers\n// so we should be A-OK here.\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar ReactTransitionEvents = {\n  addEndEventListener: function(node, eventListener) {\n    if (endEvents.length === 0) {\n      // If CSS transitions are not supported, trigger an \"end animation\"\n      // event immediately.\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function(endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n\n  removeEndEventListener: function(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function(endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nmodule.exports = ReactTransitionEvents;\n\n},{\"./ExecutionEnvironment\":292}],368:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = require(\"./React\");\nvar ReactTransitionChildMapping = require(\"./ReactTransitionChildMapping\");\n\nvar assign = require(\"./Object.assign\");\nvar cloneWithProps = require(\"./cloneWithProps\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n\n  getDefaultProps: function() {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n\n  componentWillMount: function() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n\n  componentDidMount: function() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(\n      nextProps.children\n    );\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(\n        prevChildMapping,\n        nextChildMapping\n      )\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function() {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n\n  performAppear: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(\n        this._handleDoneAppearing.bind(this, key)\n      );\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(\n        this._handleDoneEntering.bind(this, key)\n      );\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n\n  _handleDoneEntering: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performLeave: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n\n  _handleDoneLeaving: function(key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      var newChildren = assign({}, this.state.children);\n      delete newChildren[key];\n      this.setState({children: newChildren});\n    }\n  },\n\n  render: function() {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(cloneWithProps(\n          this.props.childFactory(child),\n          {ref: key, key: key}\n        ));\n      }\n    }\n    return React.createElement(\n      this.props.component,\n      this.props,\n      childrenToRender\n    );\n  }\n});\n\nmodule.exports = ReactTransitionGroup;\n\n},{\"./Object.assign\":299,\"./React\":301,\"./ReactTransitionChildMapping\":366,\"./cloneWithProps\":393,\"./emptyFunction\":400}],369:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction enqueueUpdate(internalInstance) {\n  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {\n    // If we're in a componentWillMount handler, don't enqueue a rerender\n    // because ReactUpdates assumes we're in a browser context (which is\n    // wrong for server rendering) and we're about to do a render anyway.\n    // See bug in #1740.\n    ReactUpdates.enqueueUpdate(internalInstance);\n  }\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactCurrentOwner.current == null,\n    '%s(...): Cannot update during an existing state transition ' +\n    '(such as within `render`). Render methods should be a pure function ' +\n    'of props and state.',\n    callerName\n  ) : invariant(ReactCurrentOwner.current == null));\n\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !callerName,\n        '%s(...): Can only update a mounted or mounting component. ' +\n        'This usually means you called %s() on an unmounted ' +\n        'component. This is a no-op.',\n        callerName,\n        callerName\n      ) : null);\n    }\n    return null;\n  }\n\n  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {\n    return null;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function(publicInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance ||\n        internalInstance === ReactLifeCycle.currentlyMountingInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function(internalInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldUpdateComponent`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'forceUpdate'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function(publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function(publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue =\n      internalInstance._pendingStateQueue ||\n      (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function(publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'setProps(...): You called `setProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    var props = assign({}, element.props, partialProps);\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function(publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'replaceProps(...): You called `replaceProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function(internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./ReactCurrentOwner\":315,\"./ReactElement\":333,\"./ReactInstanceMap\":343,\"./ReactLifeCycle\":344,\"./ReactUpdates\":370,\"./invariant\":421,\"./warning\":442,\"_process\":25}],370:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactUpdates.ReactReconcileTransaction && batchingStrategy,\n    'ReactUpdates: must inject a reconcile transaction class and batching ' +\n    'strategy'\n  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));\n}\n\nvar NESTED_UPDATES = {\n  initialize: function() {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function() {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function() {\n    this.callbackQueue.reset();\n  },\n  close: function() {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction =\n    ReactUpdates.ReactReconcileTransaction.getPooled();\n}\n\nassign(\n  ReactUpdatesFlushTransaction.prototype,\n  Transaction.Mixin, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function() {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function(method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(\n      this,\n      this.reconcileTransaction.perform,\n      this.reconcileTransaction,\n      method,\n      scope,\n      a\n    );\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    len === dirtyComponents.length,\n    'Expected flush transaction\\'s stored dirty-components length (%s) to ' +\n    'match dirty-components array length (%s).',\n    len,\n    dirtyComponents.length\n  ) : invariant(len === dirtyComponents.length));\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(\n      component,\n      transaction.reconcileTransaction\n    );\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(\n          callbacks[j],\n          component.getPublicInstance()\n        );\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function() {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure(\n  'ReactUpdates',\n  'flushBatchedUpdates',\n  flushBatchedUpdates\n);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    ReactCurrentOwner.current == null,\n    'enqueueUpdate(): Render methods should be a pure function of props ' +\n    'and state; triggering nested component updates from render is not ' +\n    'allowed. If necessary, trigger nested updates in ' +\n    'componentDidUpdate.'\n  ) : null);\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    batchingStrategy.isBatchingUpdates,\n    'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' +\n    'updates are not being batched.'\n  ) : invariant(batchingStrategy.isBatchingUpdates));\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function(ReconcileTransaction) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReconcileTransaction,\n      'ReactUpdates: must provide a reconcile transaction class'\n    ) : invariant(ReconcileTransaction));\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function(_batchingStrategy) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      _batchingStrategy,\n      'ReactUpdates: must provide a batching strategy'\n    ) : invariant(_batchingStrategy));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.batchedUpdates === 'function',\n      'ReactUpdates: must provide a batchedUpdates() function'\n    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.isBatchingUpdates === 'boolean',\n      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'\n    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n}).call(this,require('_process'))\n},{\"./CallbackQueue\":277,\"./Object.assign\":299,\"./PooledClass\":300,\"./ReactCurrentOwner\":315,\"./ReactPerf\":352,\"./ReactReconciler\":359,\"./Transaction\":387,\"./invariant\":421,\"./warning\":442,\"_process\":25}],371:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactWithAddons\n */\n\n/**\n * This module exists purely in the open source project, and is meant as a way\n * to create a separate standalone build of React. This build has \"addons\", or\n * functionality we've built and think might be useful but doesn't have a good\n * place to live inside React core.\n */\n\n'use strict';\n\nvar LinkedStateMixin = require(\"./LinkedStateMixin\");\nvar React = require(\"./React\");\nvar ReactComponentWithPureRenderMixin =\n  require(\"./ReactComponentWithPureRenderMixin\");\nvar ReactCSSTransitionGroup = require(\"./ReactCSSTransitionGroup\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactTransitionGroup = require(\"./ReactTransitionGroup\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar cx = require(\"./cx\");\nvar cloneWithProps = require(\"./cloneWithProps\");\nvar update = require(\"./update\");\n\nReact.addons = {\n  CSSTransitionGroup: ReactCSSTransitionGroup,\n  LinkedStateMixin: LinkedStateMixin,\n  PureRenderMixin: ReactComponentWithPureRenderMixin,\n  TransitionGroup: ReactTransitionGroup,\n\n  batchedUpdates: ReactUpdates.batchedUpdates,\n  classSet: cx,\n  cloneWithProps: cloneWithProps,\n  createFragment: ReactFragment.create,\n  update: update\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  React.addons.Perf = require(\"./ReactDefaultPerf\");\n  React.addons.TestUtils = require(\"./ReactTestUtils\");\n}\n\nmodule.exports = React;\n\n}).call(this,require('_process'))\n},{\"./LinkedStateMixin\":295,\"./React\":301,\"./ReactCSSTransitionGroup\":304,\"./ReactComponentWithPureRenderMixin\":312,\"./ReactDefaultPerf\":331,\"./ReactFragment\":339,\"./ReactTestUtils\":365,\"./ReactTransitionGroup\":368,\"./ReactUpdates\":370,\"./cloneWithProps\":393,\"./cx\":398,\"./update\":441,\"_process\":25}],372:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n\n},{\"./DOMProperty\":281}],373:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topContextMenu,\n      topLevelTypes.topFocus,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topMouseDown,\n      topLevelTypes.topMouseUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown ||\n      activeElement == null ||\n      activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      case topLevelTypes.topSelectionChange:\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent);\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n},{\"./EventConstants\":286,\"./EventPropagators\":291,\"./ReactInputSelection\":341,\"./SyntheticEvent\":379,\"./getActiveElement\":407,\"./isTextInputElement\":424,\"./keyOf\":428,\"./shallowEqual\":437}],374:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function() {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n\n},{}],375:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticClipboardEvent = require(\"./SyntheticClipboardEvent\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\nvar SyntheticFocusEvent = require(\"./SyntheticFocusEvent\");\nvar SyntheticKeyboardEvent = require(\"./SyntheticKeyboardEvent\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\nvar SyntheticDragEvent = require(\"./SyntheticDragEvent\");\nvar SyntheticTouchEvent = require(\"./SyntheticTouchEvent\");\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar SyntheticWheelEvent = require(\"./SyntheticWheelEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\nvar invariant = require(\"./invariant\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBlur: true}),\n      captured: keyOf({onBlurCapture: true})\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onClick: true}),\n      captured: keyOf({onClickCapture: true})\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onContextMenu: true}),\n      captured: keyOf({onContextMenuCapture: true})\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCopy: true}),\n      captured: keyOf({onCopyCapture: true})\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCut: true}),\n      captured: keyOf({onCutCapture: true})\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDoubleClick: true}),\n      captured: keyOf({onDoubleClickCapture: true})\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrag: true}),\n      captured: keyOf({onDragCapture: true})\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnd: true}),\n      captured: keyOf({onDragEndCapture: true})\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnter: true}),\n      captured: keyOf({onDragEnterCapture: true})\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragExit: true}),\n      captured: keyOf({onDragExitCapture: true})\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragLeave: true}),\n      captured: keyOf({onDragLeaveCapture: true})\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragOver: true}),\n      captured: keyOf({onDragOverCapture: true})\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragStart: true}),\n      captured: keyOf({onDragStartCapture: true})\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrop: true}),\n      captured: keyOf({onDropCapture: true})\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onFocus: true}),\n      captured: keyOf({onFocusCapture: true})\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onInput: true}),\n      captured: keyOf({onInputCapture: true})\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyDown: true}),\n      captured: keyOf({onKeyDownCapture: true})\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyPress: true}),\n      captured: keyOf({onKeyPressCapture: true})\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyUp: true}),\n      captured: keyOf({onKeyUpCapture: true})\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onLoad: true}),\n      captured: keyOf({onLoadCapture: true})\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onError: true}),\n      captured: keyOf({onErrorCapture: true})\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseDown: true}),\n      captured: keyOf({onMouseDownCapture: true})\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseMove: true}),\n      captured: keyOf({onMouseMoveCapture: true})\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOut: true}),\n      captured: keyOf({onMouseOutCapture: true})\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOver: true}),\n      captured: keyOf({onMouseOverCapture: true})\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseUp: true}),\n      captured: keyOf({onMouseUpCapture: true})\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onPaste: true}),\n      captured: keyOf({onPasteCapture: true})\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onReset: true}),\n      captured: keyOf({onResetCapture: true})\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onScroll: true}),\n      captured: keyOf({onScrollCapture: true})\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSubmit: true}),\n      captured: keyOf({onSubmitCapture: true})\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchCancel: true}),\n      captured: keyOf({onTouchCancelCapture: true})\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchEnd: true}),\n      captured: keyOf({onTouchEndCapture: true})\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchMove: true}),\n      captured: keyOf({onTouchMoveCapture: true})\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchStart: true}),\n      captured: keyOf({onTouchStartCapture: true})\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onWheel: true}),\n      captured: keyOf({onWheelCapture: true})\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topBlur:        eventTypes.blur,\n  topClick:       eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy:        eventTypes.copy,\n  topCut:         eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag:        eventTypes.drag,\n  topDragEnd:     eventTypes.dragEnd,\n  topDragEnter:   eventTypes.dragEnter,\n  topDragExit:    eventTypes.dragExit,\n  topDragLeave:   eventTypes.dragLeave,\n  topDragOver:    eventTypes.dragOver,\n  topDragStart:   eventTypes.dragStart,\n  topDrop:        eventTypes.drop,\n  topError:       eventTypes.error,\n  topFocus:       eventTypes.focus,\n  topInput:       eventTypes.input,\n  topKeyDown:     eventTypes.keyDown,\n  topKeyPress:    eventTypes.keyPress,\n  topKeyUp:       eventTypes.keyUp,\n  topLoad:        eventTypes.load,\n  topMouseDown:   eventTypes.mouseDown,\n  topMouseMove:   eventTypes.mouseMove,\n  topMouseOut:    eventTypes.mouseOut,\n  topMouseOver:   eventTypes.mouseOver,\n  topMouseUp:     eventTypes.mouseUp,\n  topPaste:       eventTypes.paste,\n  topReset:       eventTypes.reset,\n  topScroll:      eventTypes.scroll,\n  topSubmit:      eventTypes.submit,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd:    eventTypes.touchEnd,\n  topTouchMove:   eventTypes.touchMove,\n  topTouchStart:  eventTypes.touchStart,\n  topWheel:       eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * Same as the default implementation, except cancels the event when return\n   * value is false. This behavior will be disabled in a future release.\n   *\n   * @param {object} Event to be dispatched.\n   * @param {function} Application-level callback.\n   * @param {string} domID DOM ID to pass to the callback.\n   */\n  executeDispatch: function(event, listener, domID) {\n    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);\n\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof returnValue !== 'boolean',\n      'Returning `false` from an event handler is deprecated and will be ' +\n      'ignored in a future release. Instead, manually call ' +\n      'e.stopPropagation() or e.preventDefault(), as appropriate.'\n    ) : null);\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topError:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSubmit:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      EventConstructor,\n      'SimpleEventPlugin: Unhandled event type, `%s`.',\n      topLevelType\n    ) : invariant(EventConstructor));\n    var event = EventConstructor.getPooled(\n      dispatchConfig,\n      topLevelTargetID,\n      nativeEvent\n    );\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n}).call(this,require('_process'))\n},{\"./EventConstants\":286,\"./EventPluginUtils\":290,\"./EventPropagators\":291,\"./SyntheticClipboardEvent\":376,\"./SyntheticDragEvent\":378,\"./SyntheticEvent\":379,\"./SyntheticFocusEvent\":380,\"./SyntheticKeyboardEvent\":382,\"./SyntheticMouseEvent\":383,\"./SyntheticTouchEvent\":384,\"./SyntheticUIEvent\":385,\"./SyntheticWheelEvent\":386,\"./getEventCharCode\":408,\"./invariant\":421,\"./keyOf\":428,\"./warning\":442,\"_process\":25}],376:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function(event) {\n    return (\n      'clipboardData' in event ?\n        event.clipboardData :\n        window.clipboardData\n    );\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n},{\"./SyntheticEvent\":379}],377:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticCompositionEvent,\n  CompositionEventInterface\n);\n\nmodule.exports = SyntheticCompositionEvent;\n\n},{\"./SyntheticEvent\":379}],378:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n},{\"./SyntheticMouseEvent\":383}],379:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n},{\"./Object.assign\":299,\"./PooledClass\":300,\"./emptyFunction\":400,\"./getEventTarget\":411}],380:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n},{\"./SyntheticUIEvent\":385}],381:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticInputEvent,\n  InputEventInterface\n);\n\nmodule.exports = SyntheticInputEvent;\n\n},{\"./SyntheticEvent\":379}],382:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\nvar getEventKey = require(\"./getEventKey\");\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n},{\"./SyntheticUIEvent\":385,\"./getEventCharCode\":408,\"./getEventKey\":409,\"./getEventModifierState\":410}],383:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n},{\"./SyntheticUIEvent\":385,\"./ViewportMetrics\":388,\"./getEventModifierState\":410}],384:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n},{\"./SyntheticUIEvent\":385,\"./getEventModifierState\":410}],385:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function(event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function(event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n},{\"./SyntheticEvent\":379,\"./getEventTarget\":411}],386:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function(event) {\n    return (\n      'deltaX' in event ? event.deltaX :\n      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event ? -event.wheelDeltaX : 0\n    );\n  },\n  deltaY: function(event) {\n    return (\n      'deltaY' in event ? event.deltaY :\n      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event ? -event.wheelDeltaY :\n      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event ? -event.wheelDelta : 0\n    );\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n},{\"./SyntheticMouseEvent\":383}],387:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function() {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (!this.wrapperInitData) {\n      this.wrapperInitData = [];\n    } else {\n      this.wrapperInitData.length = 0;\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function() {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} args... Arguments to pass to the method (optional).\n   *                           Helps prevent need to bind in many cases.\n   * @return Return value from `method`.\n   */\n  perform: function(method, scope, a, b, c, d, e, f) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !this.isInTransaction(),\n      'Transaction.perform(...): Cannot initialize a transaction when there ' +\n      'is already an outstanding transaction.'\n    ) : invariant(!this.isInTransaction()));\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {\n          }\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function(startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ?\n          wrapper.initialize.call(this) :\n          null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function(startIndex) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isInTransaction(),\n      'Transaction.closeAll(): Cannot close transaction when none are open.'\n    ) : invariant(this.isInTransaction()));\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {\n          }\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occured.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],388:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function(scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n},{}],389:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.'\n  ) : invariant(next != null));\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],390:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n/* jslint bitwise:true */\n\n'use strict';\n\nvar MOD = 65521;\n\n// This is a clean-room implementation of adler32 designed for detecting\n// if markup is not what we expect it to be. It does not need to be\n// cryptographically strong, only reasonably good at detecting if markup\n// generated on the server is different than that on the client.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  for (var i = 0; i < data.length; i++) {\n    a = (a + data.charCodeAt(i)) % MOD;\n    b = (b + a) % MOD;\n  }\n  return a | (b << 16);\n}\n\nmodule.exports = adler32;\n\n},{}],391:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function(_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n},{}],392:[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar camelize = require(\"./camelize\");\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n},{\"./camelize\":391}],393:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule cloneWithProps\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactPropTransferer = require(\"./ReactPropTransferer\");\n\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar CHILDREN_PROP = keyOf({children: null});\n\n/**\n * Sometimes you want to change the props of a child passed to you. Usually\n * this is to add a CSS class.\n *\n * @param {ReactElement} child child element you'd like to clone\n * @param {object} props props you'd like to modify. className and style will be\n * merged automatically.\n * @return {ReactElement} a clone of child with props merged in.\n */\nfunction cloneWithProps(child, props) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !child.ref,\n      'You are calling cloneWithProps() on a child with a ref. This is ' +\n      'dangerous because you\\'re creating a new child which will not be ' +\n      'added as a ref to its parent.'\n    ) : null);\n  }\n\n  var newProps = ReactPropTransferer.mergeProps(props, child.props);\n\n  // Use `child.props.children` if it is provided.\n  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&\n      child.props.hasOwnProperty(CHILDREN_PROP)) {\n    newProps.children = child.props.children;\n  }\n\n  // The current API doesn't retain _owner and _context, which is why this\n  // doesn't use ReactElement.cloneAndReplaceProps.\n  return ReactElement.createElement(child.type, newProps);\n}\n\nmodule.exports = cloneWithProps;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./ReactPropTransferer\":353,\"./keyOf\":428,\"./warning\":442,\"_process\":25}],394:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = require(\"./isTextNode\");\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n},{\"./isTextNode\":425}],395:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\nvar toArray = require(\"./toArray\");\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj &&\n    // arrays are objects, NodeLists are functions in Safari\n    (typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    ('length' in obj) &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    (typeof obj.nodeType != 'number') &&\n    (\n      // a real array\n      (// HTMLCollection/NodeList\n      (Array.isArray(obj) ||\n      // arguments\n      ('callee' in obj) || 'item' in obj))\n    )\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n},{\"./toArray\":439}],396:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n'use strict';\n\n// Defeat circular references by requiring this directly.\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactClass.createClass({\n    tagName: tag.toUpperCase(),\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n\n}).call(this,require('_process'))\n},{\"./ReactClass\":308,\"./ReactElement\":333,\"./invariant\":421,\"_process\":25}],397:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*jslint evil: true, sub: true */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    ) : invariant(handleScript));\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":292,\"./createArrayFromMixed\":395,\"./getMarkupWrap\":413,\"./invariant\":421,\"_process\":25}],398:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cx\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\n\n'use strict';\nvar warning = require(\"./warning\");\n\nvar warned = false;\n\nfunction cx(classNames) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      warned,\n      'React.addons.classSet will be deprecated in a future version. See ' +\n      'http://fb.me/react-addons-classset'\n    ) : null);\n    warned = true;\n  }\n\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function(className) {\n      return classNames[className];\n    }).join(' ');\n  } else {\n    return Array.prototype.join.call(arguments, ' ');\n  }\n}\n\nmodule.exports = cx;\n\n}).call(this,require('_process'))\n},{\"./warning\":442,\"_process\":25}],399:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 ||\n      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n},{\"./CSSProperty\":275}],400:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n},{}],401:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],402:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n},{}],403:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\nvar isNode = require(\"./isNode\");\nvar warning = require(\"./warning\");\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n\n}).call(this,require('_process'))\n},{\"./ReactCurrentOwner\":315,\"./ReactInstanceMap\":343,\"./ReactMount\":347,\"./invariant\":421,\"./isNode\":423,\"./warning\":442,\"_process\":25}],404:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n}).call(this,require('_process'))\n},{\"./traverseAllChildren\":440,\"./warning\":442,\"_process\":25}],405:[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n\"use strict\";\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch(e) {\n  }\n}\n\nmodule.exports = focusNode;\n\n},{}],406:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n\n},{}],407:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document body is not yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/ {\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n},{}],408:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n},{}],409:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n},{\"./getEventCharCode\":408}],410:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  /*jshint validthis:true */\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n},{}],411:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n},{}],412:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n},{}],413:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n\n}).call(this,require('_process'))\n},{\"./ExecutionEnvironment\":292,\"./invariant\":421,\"_process\":25}],414:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n},{}],415:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getReactRootElementInContainer\n */\n\n'use strict';\n\nvar DOC_NODE_TYPE = 9;\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n *                                           a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nmodule.exports = getReactRootElementInContainer;\n\n},{}],416:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ?\n      'textContent' :\n      'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n},{\"./ExecutionEnvironment\":292}],417:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n},{}],418:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n},{}],419:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar hyphenate = require(\"./hyphenate\");\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n},{\"./hyphenate\":418}],420:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./ReactCompositeComponent\":313,\"./ReactEmptyComponent\":335,\"./ReactNativeComponent\":350,\"./invariant\":421,\"./warning\":442,\"_process\":25}],421:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n}).call(this,require('_process'))\n},{\"_process\":25}],422:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM ||\n      capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n},{\"./ExecutionEnvironment\":292}],423:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (\n    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&\n    typeof object.nodeType === 'number' &&\n    typeof object.nodeName === 'string'))\n  ));\n}\n\nmodule.exports = isNode;\n\n},{}],424:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  return elem && (\n    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')\n  );\n}\n\nmodule.exports = isTextInputElement;\n\n},{}],425:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\nvar isNode = require(\"./isNode\");\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n},{\"./isNode\":423}],426:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule joinClasses\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} classes\n * @return {string}\n */\nfunction joinClasses(className/*, ... */) {\n  if (!className) {\n    className = '';\n  }\n  var nextClass;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n  return className;\n}\n\nmodule.exports = joinClasses;\n\n},{}],427:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    obj instanceof Object && !Array.isArray(obj),\n    'keyMirror(...): Argument must be an object.'\n  ) : invariant(obj instanceof Object && !Array.isArray(obj)));\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],428:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n\n},{}],429:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n\n},{}],430:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function(string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n},{}],431:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(children),\n    'onlyChild must be passed a children with exactly one child.'\n  ) : invariant(ReactElement.isValidElement(children)));\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./invariant\":421,\"_process\":25}],432:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance =\n    window.performance ||\n    window.msPerformance ||\n    window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n\n},{\"./ExecutionEnvironment\":292}],433:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\nvar performance = require(\"./performance\");\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!performance || !performance.now) {\n  performance = Date;\n}\n\nvar performanceNow = performance.now.bind(performance);\n\nmodule.exports = performanceNow;\n\n},{\"./performance\":432}],434:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n},{\"./escapeTextContentForBrowser\":402}],435:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function(node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function(node, html) {\n    MSApp.execUnsafeLocalFunction(function() {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function(node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) ||\n          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        node.innerHTML = '\\uFEFF' + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n\n},{\"./ExecutionEnvironment\":292}],436:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function(node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function(node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n},{\"./ExecutionEnvironment\":292,\"./escapeTextContentForBrowser\":402,\"./setInnerHTML\":435}],437:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n},{}],438:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n}).call(this,require('_process'))\n},{\"./warning\":442,\"_process\":25}],439:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n}).call(this,require('_process'))\n},{\"./invariant\":421,\"_process\":25}],440:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} key Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(\n    userProvidedKeyEscapeRegex,\n    userProvidedKeyEscaper\n  );\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!number} indexSoFar Number of children encountered until this point.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  indexSoFar,\n  callback,\n  traverseContext\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null ||\n      type === 'string' ||\n      type === 'number' ||\n      ReactElement.isValidElement(children)) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n      indexSoFar\n    );\n    return 1;\n  }\n\n  var child, nextName, nextIndex;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = (\n        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n        getComponentKey(child, i)\n      );\n      nextIndex = indexSoFar + subtreeCount;\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        nextIndex,\n        callback,\n        traverseContext\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            getComponentKey(child, ii++)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      } else {\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnAboutMaps,\n            'Using Maps as children is not yet fully supported. It is an ' +\n            'experimental feature that might be removed. Convert it to a ' +\n            'sequence / iterable of keyed ReactElements instead.'\n          ) : null);\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = (\n              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +\n              getComponentKey(child, 0)\n            );\n            nextIndex = indexSoFar + subtreeCount;\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              nextIndex,\n              callback,\n              traverseContext\n            );\n          }\n        }\n      }\n    } else if (type === 'object') {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        children.nodeType !== 1,\n        'traverseAllChildren(...): Encountered an invalid child; DOM ' +\n        'elements are not valid children of React components.'\n      ) : invariant(children.nodeType !== 1));\n      var fragment = ReactFragment.extract(children);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          child = fragment[key];\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            wrapUserProvidedKey(key) + SUBSEPARATOR +\n            getComponentKey(child, 0)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n}).call(this,require('_process'))\n},{\"./ReactElement\":333,\"./ReactFragment\":339,\"./ReactInstanceHandles\":342,\"./getIteratorFn\":412,\"./invariant\":421,\"./warning\":442,\"_process\":25}],441:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule update\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar keyOf = require(\"./keyOf\");\nvar invariant = require(\"./invariant\");\n\nfunction shallowCopy(x) {\n  if (Array.isArray(x)) {\n    return x.concat();\n  } else if (x && typeof x === 'object') {\n    return assign(new x.constructor(), x);\n  } else {\n    return x;\n  }\n}\n\nvar COMMAND_PUSH = keyOf({$push: null});\nvar COMMAND_UNSHIFT = keyOf({$unshift: null});\nvar COMMAND_SPLICE = keyOf({$splice: null});\nvar COMMAND_SET = keyOf({$set: null});\nvar COMMAND_MERGE = keyOf({$merge: null});\nvar COMMAND_APPLY = keyOf({$apply: null});\n\nvar ALL_COMMANDS_LIST = [\n  COMMAND_PUSH,\n  COMMAND_UNSHIFT,\n  COMMAND_SPLICE,\n  COMMAND_SET,\n  COMMAND_MERGE,\n  COMMAND_APPLY\n];\n\nvar ALL_COMMANDS_SET = {};\n\nALL_COMMANDS_LIST.forEach(function(command) {\n  ALL_COMMANDS_SET[command] = true;\n});\n\nfunction invariantArrayCase(value, spec, command) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  ) : invariant(Array.isArray(value)));\n  var specValue = spec[command];\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  ) : invariant(Array.isArray(specValue)));\n}\n\nfunction update(value, spec) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec === 'object',\n    'update(): You provided a key path to update() that did not contain one ' +\n    'of %s. Did you forget to include {%s: ...}?',\n    ALL_COMMANDS_LIST.join(', '),\n    COMMAND_SET\n  ) : invariant(typeof spec === 'object'));\n\n  if (spec.hasOwnProperty(COMMAND_SET)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Object.keys(spec).length === 1,\n      'Cannot have more than one key in an object with %s',\n      COMMAND_SET\n    ) : invariant(Object.keys(spec).length === 1));\n\n    return spec[COMMAND_SET];\n  }\n\n  var nextValue = shallowCopy(value);\n\n  if (spec.hasOwnProperty(COMMAND_MERGE)) {\n    var mergeObj = spec[COMMAND_MERGE];\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      mergeObj && typeof mergeObj === 'object',\n      'update(): %s expects a spec of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      mergeObj\n    ) : invariant(mergeObj && typeof mergeObj === 'object'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      nextValue && typeof nextValue === 'object',\n      'update(): %s expects a target of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      nextValue\n    ) : invariant(nextValue && typeof nextValue === 'object'));\n    assign(nextValue, spec[COMMAND_MERGE]);\n  }\n\n  if (spec.hasOwnProperty(COMMAND_PUSH)) {\n    invariantArrayCase(value, spec, COMMAND_PUSH);\n    spec[COMMAND_PUSH].forEach(function(item) {\n      nextValue.push(item);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_UNSHIFT)) {\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\n    spec[COMMAND_UNSHIFT].forEach(function(item) {\n      nextValue.unshift(item);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_SPLICE)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Array.isArray(value),\n      'Expected %s target to be an array; got %s',\n      COMMAND_SPLICE,\n      value\n    ) : invariant(Array.isArray(value)));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Array.isArray(spec[COMMAND_SPLICE]),\n      'update(): expected spec of %s to be an array of arrays; got %s. ' +\n      'Did you forget to wrap your parameters in an array?',\n      COMMAND_SPLICE,\n      spec[COMMAND_SPLICE]\n    ) : invariant(Array.isArray(spec[COMMAND_SPLICE])));\n    spec[COMMAND_SPLICE].forEach(function(args) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        Array.isArray(args),\n        'update(): expected spec of %s to be an array of arrays; got %s. ' +\n        'Did you forget to wrap your parameters in an array?',\n        COMMAND_SPLICE,\n        spec[COMMAND_SPLICE]\n      ) : invariant(Array.isArray(args)));\n      nextValue.splice.apply(nextValue, args);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_APPLY)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof spec[COMMAND_APPLY] === 'function',\n      'update(): expected spec of %s to be a function; got %s.',\n      COMMAND_APPLY,\n      spec[COMMAND_APPLY]\n    ) : invariant(typeof spec[COMMAND_APPLY] === 'function'));\n    nextValue = spec[COMMAND_APPLY](nextValue);\n  }\n\n  for (var k in spec) {\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\n      nextValue[k] = update(value[k], spec[k]);\n    }\n  }\n\n  return nextValue;\n}\n\nmodule.exports = update;\n\n}).call(this,require('_process'))\n},{\"./Object.assign\":299,\"./invariant\":421,\"./keyOf\":428,\"_process\":25}],442:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n}).call(this,require('_process'))\n},{\"./emptyFunction\":400,\"_process\":25}],443:[function(require,module,exports){\nmodule.exports = require('./lib/React');\n\n},{\"./lib/React\":301}]},{},[1]);\n"],"file":"search.js","sourceRoot":"/source/"}