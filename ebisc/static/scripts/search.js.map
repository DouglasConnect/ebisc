{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/scripts/search/actions.cjsx","assets/scripts/search/components/celllines.cjsx","assets/scripts/search/components/dropdown-multi-select.cjsx","assets/scripts/search/components/filter.cjsx","assets/scripts/search/components/search.cjsx","assets/scripts/search/components/table.cjsx","assets/scripts/search/components/total-count.cjsx","assets/scripts/search/config.cjsx","assets/scripts/search/elastic.cjsx","assets/scripts/search/main.cjsx","assets/scripts/search/state.cjsx","node_modules/baobab/defaults.js","search.js","node_modules/baobab/index.js","node_modules/baobab/src/baobab.js","node_modules/baobab/src/combination.js","node_modules/baobab/src/cursor.js","node_modules/baobab/src/helpers.js","node_modules/baobab/src/merge.js","node_modules/baobab/src/mixins.js","node_modules/baobab/src/type.js","node_modules/baobab/src/update.js","node_modules/classnames/index.js","node_modules/emmett/emmett.js","node_modules/typology/typology.js","node_modules/xregexp/xregexp-all.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Config","State","initFilter","loadFilter","orderBy","saveFilter","setFilter","updateFacetTermFilter","updateQueryFilter","select","set","facets","filter","JSON","parse","sessionStorage","getItem","setItem","stringify","get","query","edit","facetName","term","state","selectedTerms","_","findIndex","name","value","./config","./state","2","Actions","Celllines","Table","React","createClass","displayName","mixins","mixin","cursors","isLoaded","celllines","render","buildCell","buildRow","row","rows","_source","createElement","href","join","class","cols","col","len","results","push","ref","this","fields","onOrderBy","../actions","../config","../state","./table","3","DropdownMultiSelect","Item","classNames","getInitialState","showMenu","setState","window","addEventListener","hideMenu","target","$","getDOMNode","stopPropagation","removeEventListener","has","componentWillUnmount","item","className","dropdown","two-cols","props","items","has-selection","hasSelection","onClick","label","dropdown-menu","checkbox","show-menu","key","action","handleOnClick","selected","classnames","4","Facets","ReactCSSTransitionGroup","SelectedTerms","indexOf","addons","CSSTransitionGroup","facetTerms","facet","size","j","getSelectedTerms","getFacetTerms","partial","terms","clearFilters","sort","buckets","doc_count","transitionName","createHandleOnRemove","_this","./dropdown-multi-select","5","Input","Search","type","placeholder","onChange","handleChange","6","Tbody","Th","Thead","renderTh","field","direction","k","len1","results1","7","TotalCount","modulo","b","8","config","query_fields","9","XRegExp","buildAggregation","buildAggregations","buildFacetFilters","buildFilter","buildFilteredQuery","buildQuery","elastic","search","elasticsearch","Client","host","protocol","location","hostname","port","path","body","obj","aggs","order","index","then","bucket","changed","facetFilter","matchingTerms","hits","aggregations","error","console","alert","filtered","buildQueryMultiMatch","queryString","w","word","words","trim","toLowerCase","replace","split","multi_match","bool","must","match_all","filters","buildTerms","global","object","match","otherFilters","_term","min_doc_count","xregexp","10","Elastic","Filter","onFilterUpdate","on","debounce","document","getElementById","./actions","./components/celllines","./components/filter","./components/search","./components/total-count","./elastic","11","Baobab","options","shiftReferences","PureRenderMixin","baobab","12","autoCommit","asynchronous","clone","cloningFunction","cursorSingletons","maxHistory","typology","validate","13","helpers","Object","defineProperty","getIn","./src/baobab.js","./src/helpers.js","14","complexHash","Date","getTime","Math","random","initialData","opts","arguments","Array","EventEmitter","shallowMerge","defaults","_cloner","deepClone","_transaction","_future","undefined","_history","_cursors","Typology","check","message","data","Cursor","update","merge","inherits","prototype","_archive","record","pop","unshift","commit","referenceRecord","log","shallowClone","d","errors","concat","emit","clearTimeout","arrayOf","Path","solvedPath","complex","ComplexPath","solvePath","hash","map","step","Function","cursor","root","reference","String","Number","apply","val","spec","pathObject","$set","unset","$unset","self","setTimeout","bind","hasHistory","getHistory","undo","lastRecord","shift","release","kill","toJSON","../defaults.js","./cursor.js","./helpers.js","./merge.js","./mixins.js","./type.js","./update.js","emmett","15","bindCursor","c","cursorListener","tree","off","treeListener","Combination","operator","first","rest","slice","operators","updates","shouldFire","bound","regularOn","regularOnce","once","lazyBind","forEach","makeOperator","16","relevant","complexPath","updateHandler","p","m","outer","isRoot","isLeaf","Primitive","isBranch","up","left","last","isNaN","leftmost","right","rightmost","list","down","Step","remove","fn","$apply","chain","$chain","$push","$unshift","$merge","or","otherCursor","and","./combination.js","17","o1","o2","cloneRegexp","re","pattern","source","flags","multiline","ignoreCase","sticky","unicode","RegExp","deep","ArrayBuffer","constructor","create","hasOwnProperty","compose","fn1","fn2","arg","compare","ok","firstByComparison","indexByComparison","idx","ctor","superCtor","super_","TempCtor","18","hasKey","conflict","current","next","res","19","__type","__updateHandler","__getCursorData","MixinCursor","MixinCursors","componentDidMount","__combination","keys","20","isArray","Boolean","valueType","notValid","types","x","allowedValues","complexTypes","21","makeError","toString","mutator","parent","h","v","COMMANDS","splice","22","classes","substr","define","amd","23","mapHandlers","handler","__allowedOptions","scope","Emitter","_enabled","_children","_handlers","_handlersAll","event","eArray","bindingObject","events","unbindAll","z","child","handlers","eventName","listeners","disable","enable","version","24","defs","_scan","subError","hasStar","hasTypeOf","optional","exclusive","typeOf","_self","__nativeTypes","_customTypes","expected","add","a1","a2","id","tmp","proto","isValid","__class2type","throws","result","25","undef","augment","regex","captureNames","isNative","getNativeFlags","extended","copy","addFlags","removeFlags","isRegExp","TypeError","nativ","duplicateFlags","lastIndexOf","array","isType","prepareOptions","all","natives","extensibility","runTokens","pos","context","tokens","isInsideConstructor","trigger","lastIndex","fixed","exec","output","err","setExtensibility","addToken","features","setNatives","test","cache","defaultScope","classScope","nativeTokens","default","replacementToken","quantifier","compliantExecNpcg","hasNativeY","registeredFlags","tokenResult","chr","tokenContext","hasNamedCapture","hasFlag","flag","SyntaxError","$0","$1","charAt","customFlags","escape","str","r2","callback","globalize","install","isInstalled","feature","matchChain","recurseChain","values","level","matches","addMatch","backref","replacement","isRegex","search2","separator","limit","uninstall","union","patterns","numPriorCaptures","parts","numCaptures","rewrite","paren","origLastIndex","args","$2","lastLength","lastLastIndex","input","endIndex","slug","expand","pad4","dec","hex","parseInt","invert","range","start","lastEnd","cacheInversion","addUnicodePackage","pack","aliases","L","inv","ReferenceError","Ll","Lu","Lt","Lm","Lo","M","Mn","Mc","Me","N","Nd","Nl","No","P","Pd","Ps","Pe","Pi","Pf","Pc","Po","S","Sm","Sc","Sk","So","Z","Zs","Zl","Zp","C","Cc","Cf","Co","Cs","Cn","Arabic","Armenian","Balinese","Bamum","Batak","Bengali","Bopomofo","Braille","Buginese","Buhid","Canadian_Aboriginal","Cham","Cherokee","Common","Coptic","Cyrillic","Devanagari","Ethiopic","Georgian","Glagolitic","Greek","Gujarati","Gurmukhi","Han","Hangul","Hanunoo","Hebrew","Hiragana","Inherited","Javanese","Kannada","Katakana","Kayah_Li","Khmer","Lao","Latin","Lepcha","Limbu","Lisu","Malayalam","Mandaic","Meetei_Mayek","Mongolian","Myanmar","New_Tai_Lue","Nko","Ogham","Ol_Chiki","Oriya","Phags_Pa","Rejang","Runic","Samaritan","Saurashtra","Sinhala","Sundanese","Syloti_Nagri","Syriac","Tagalog","Tagbanwa","Tai_Le","Tai_Tham","Tai_Viet","Tamil","Telugu","Thaana","Thai","Tibetan","Tifinagh","Vai","Yi","InBasic_Latin","InLatin_1_Supplement","InLatin_Extended_A","InLatin_Extended_B","InIPA_Extensions","InSpacing_Modifier_Letters","InCombining_Diacritical_Marks","InGreek_and_Coptic","InCyrillic","InCyrillic_Supplement","InArmenian","InHebrew","InArabic","InSyriac","InArabic_Supplement","InThaana","InNKo","InSamaritan","InMandaic","InArabic_Extended_A","InDevanagari","InBengali","InGurmukhi","InGujarati","InOriya","InTamil","InTelugu","InKannada","InMalayalam","InSinhala","InThai","InLao","InTibetan","InMyanmar","InGeorgian","InHangul_Jamo","InEthiopic","InEthiopic_Supplement","InCherokee","InUnified_Canadian_Aboriginal_Syllabics","InOgham","InRunic","InTagalog","InHanunoo","InBuhid","InTagbanwa","InKhmer","InMongolian","InUnified_Canadian_Aboriginal_Syllabics_Extended","InLimbu","InTai_Le","InNew_Tai_Lue","InKhmer_Symbols","InBuginese","InTai_Tham","InBalinese","InSundanese","InBatak","InLepcha","InOl_Chiki","InSundanese_Supplement","InVedic_Extensions","InPhonetic_Extensions","InPhonetic_Extensions_Supplement","InCombining_Diacritical_Marks_Supplement","InLatin_Extended_Additional","InGreek_Extended","InGeneral_Punctuation","InSuperscripts_and_Subscripts","InCurrency_Symbols","InCombining_Diacritical_Marks_for_Symbols","InLetterlike_Symbols","InNumber_Forms","InArrows","InMathematical_Operators","InMiscellaneous_Technical","InControl_Pictures","InOptical_Character_Recognition","InEnclosed_Alphanumerics","InBox_Drawing","InBlock_Elements","InGeometric_Shapes","InMiscellaneous_Symbols","InDingbats","InMiscellaneous_Mathematical_Symbols_A","InSupplemental_Arrows_A","InBraille_Patterns","InSupplemental_Arrows_B","InMiscellaneous_Mathematical_Symbols_B","InSupplemental_Mathematical_Operators","InMiscellaneous_Symbols_and_Arrows","InGlagolitic","InLatin_Extended_C","InCoptic","InGeorgian_Supplement","InTifinagh","InEthiopic_Extended","InCyrillic_Extended_A","InSupplemental_Punctuation","InCJK_Radicals_Supplement","InKangxi_Radicals","InIdeographic_Description_Characters","InCJK_Symbols_and_Punctuation","InHiragana","InKatakana","InBopomofo","InHangul_Compatibility_Jamo","InKanbun","InBopomofo_Extended","InCJK_Strokes","InKatakana_Phonetic_Extensions","InEnclosed_CJK_Letters_and_Months","InCJK_Compatibility","InCJK_Unified_Ideographs_Extension_A","InYijing_Hexagram_Symbols","InCJK_Unified_Ideographs","InYi_Syllables","InYi_Radicals","InLisu","InVai","InCyrillic_Extended_B","InBamum","InModifier_Tone_Letters","InLatin_Extended_D","InSyloti_Nagri","InCommon_Indic_Number_Forms","InPhags_pa","InSaurashtra","InDevanagari_Extended","InKayah_Li","InRejang","InHangul_Jamo_Extended_A","InJavanese","InCham","InMyanmar_Extended_A","InTai_Viet","InMeetei_Mayek_Extensions","InEthiopic_Extended_A","InMeetei_Mayek","InHangul_Syllables","InHangul_Jamo_Extended_B","InHigh_Surrogates","InHigh_Private_Use_Surrogates","InLow_Surrogates","InPrivate_Use_Area","InCJK_Compatibility_Ideographs","InAlphabetic_Presentation_Forms","InArabic_Presentation_Forms_A","InVariation_Selectors","InVertical_Forms","InCombining_Half_Marks","InCJK_Compatibility_Forms","InSmall_Form_Variants","InArabic_Presentation_Forms_B","InHalfwidth_and_Fullwidth_Forms","InSpecials","Alphabetic","Uppercase","Lowercase","White_Space","Noncharacter_Code_Point","Default_Ignorable_Code_Point","Any","Ascii","Assigned","end","matchRecursive","outerStart","innerStart","leftMatch","rightMatch","esc","basicFlags","escapeChar","vN","valueNames","openTokens","delimStart","delimEnd","lastOuterEnd","deanchor","startAnchor","endAnchor","asXRegExp","subparts","build","subs","numPriorCaps","outerCapNames","sub","inlineFlags","numCaps","numOuterCaps","outerCapsMap","names","$3","$4","capName","intro","subName","extend","xexec","xtest"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,GAAAK,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAEAP,GAAAZ,EAAA,WAEAW,EAAAX,EAAA,YAEAa,EAAA,WACA,MAAAD,GAAAQ,OAAA,UAAAC,IAAA,SAAAV,EAAAW,SAGAL,EAAA,SAAAM,GACA,MAAAX,GAAAS,IAAA,SAAAE,IAGAT,EAAA,WACA,MAAAG,GAAAO,KAAAC,MAAAC,eAAAC,QAAA,aAGAX,EAAA,WACA,MAAAU,gBAAAE,QAAA,SAAAJ,KAAAK,UAAAjB,EAAAQ,OAAA,UAAAU,SAGAX,EAAA,SAAAY,GACA,MAAAnB,GAAAQ,OAAA,SAAA,SAAAY,KAAAD,IAGAb,EAAA,SAAAe,EAAAC,EAAAC,GACA,GAAAC,EAIA,OAHAA,GAAAxB,EAAAQ,OAAA,SAAA,SAAAiB,EAAAC,UAAA1B,EAAAQ,OAAA,SAAA,UAAAU,OACAS,KAAAN,IACA,iBACAG,EAAAf,IAAAa,EAAAC,IAGApB,EAAA,SAAAyB,GACA,MAAA5B,GAAAQ,OAAA,UAAAC,IAAA,UAAAmB,IAGA9B,EAAAJ,SACAO,WAAAA,EACAI,UAAAA,EACAH,WAAAA,EACAE,WAAAA,EACAG,kBAAAA,EACAD,sBAAAA,EACAH,QAAAA,KAIA0B,WAAA,EAAAC,UAAA,KAAAC,GAAA,SAAA3C,EAAAU,EAAAJ,GCjDA,GAAAsC,GAAAC,EAAAlC,EAAAC,EAAAkC,CAEAnC,GAAAX,EAAA,aAEAY,EAAAZ,EAAA,YAEA8C,EAAA9C,EAAA,WAEA4C,EAAA5C,EAAA,cAEA6C,EAAAE,MAAAC,aAAAC,YAAA,YACAC,QAAAtC,EAAAuC,OACAC,SACAC,UAAA,YACAC,WAAA,aACAvC,SAAA,SAAA,YAEAwC,OAAA,WACA,GAAAC,GAAAC,EAAAC,EAAAC,CAyCA,OAxCAH,GAAA,SAAAjB,EAAAmB,GACA,GAAAlB,EAEA,OADAA,GAAAkB,EAAAE,QAAArB,GACA,SAAAA,EACAQ,MAAAc,cAAA,KACAC,KAAA,KAAAtB,EAAA,KACAA,GACA,kBAAAD,EACAC,EAAAuB,KAAA,MACA,iCAAAxB,EACA,MAAAC,EACAO,MAAAc,cAAA,QACAG,QAAA,WACAxB,GAEAA,EAAAuB,KAAA,MAGAvB,GAGAiB,EAAA,SAAAC,EAAAO,GACA,GAAAC,GAAAjE,EAAAkE,EAAAC,CAEA,KADAA,KACAnE,EAAA,EAAAkE,EAAAF,EAAAzD,OAAAP,EAAAkE,EAAAlE,IACAiE,EAAAD,EAAAhE,GACAmE,EAAAC,KAAAb,EAAAU,EAAA3B,KAAAmB,GAEA,OAAAU,IAEAT,EAAA,WACA,GAAA1D,GAAAkE,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAApC,MAAAiB,QAAAE,UACAc,KACAnE,EAAA,EAAAkE,EAAAG,EAAA9D,OAAAP,EAAAkE,EAAAlE,IACAyD,EAAAY,EAAArE,GACAmE,EAAAC,KAAAZ,EAAAC,EAAA/C,EAAA6D,QAEA,OAAAJ,IACA7D,KAAAgE,MACAxB,MAAAc,cAAA,MAAA,KAAAU,KAAApC,MAAAiB,QAAAC,SAAAN,MAAAc,cAAAf,GACAmB,KAAAtD,EAAA6D,OACAb,KAAAA,EACA5C,QAAAwD,KAAApC,MAAAiB,QAAArC,QACA0D,UAAA7B,EAAA7B,UACA,WAIAL,EAAAJ,QAAAuC,IAGA6B,aAAA,EAAAC,YAAA,EAAAC,WAAA,GAAAC,UAAA,IAAAC,GAAA,SAAA9E,EAAAU,EAAAJ,GCvEA,GAAAyE,GAAAC,EAAAC,CAEAA,GAAAjF,EAAA,cAEA+E,EAAAhC,MAAAC,aAAAC,YAAA,sBACAiC,gBAAA,WACA,OACAC,UAAA,IAGAA,SAAA,WAIA,MAHAZ,MAAAa,UACAD,UAAA,IAEAE,OAAAC,iBAAA,QAAAf,KAAAgB,UAAA,IAEAA,SAAA,SAAA/F,GACA,MAAAA,GAAAgG,SAAAC,EAAA,mBAAAlB,KAAAmB,cAAA,IACAlG,EAAAmG,kBACApB,KAAAa,UACAD,UAAA,IAEAE,OAAAO,oBAAA,QAAArB,KAAAgB,UAAA,IACAE,EAAAlB,KAAAmB,cAAAG,IAAAJ,EAAAjG,EAAAgG,SAAAhF,OAAA,QACA+D,KAAAa,UACAD,UAAA,IAEAE,OAAAO,oBAAA,QAAArB,KAAAgB,UAAA,KAGAO,qBAAA,WACA,MAAAT,QAAAO,oBAAA,QAAArB,KAAAgB,UAAA,IAEAhC,OAAA,WACA,GAAAwC,EACA,OAAAhD,OAAAc,cAAA,OACAmC,UAAAf,GACAgB,UAAA,EACAC,WAAA3B,KAAA4B,MAAAC,MAAA5F,QAAA,GACA6F,gBAAA9B,KAAA4B,MAAAG,gBAEAvD,MAAAc,cAAA,OACAmC,UAAA,sBACAjD,MAAAc,cAAA,OACAmC,UAAA,kBACAO,QAAAhC,KAAAY,UACAZ,KAAA4B,MAAAK,OAAAzD,MAAAc,cAAA,MACAmC,UAAAf,GACAwB,iBAAA,EACAC,UAAA,EACAC,YAAApC,KAAApC,MAAAgD,YAEA,WACA,GAAAlF,GAAAkE,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAA4B,MAAAC,MACAhC,KACAnE,EAAA,EAAAkE,EAAAG,EAAA9D,OAAAP,EAAAkE,EAAAlE,IACA8F,EAAAzB,EAAArE,GACAmE,EAAAC,KAAAtB,MAAAc,cAAAmB,GACA4B,IAAAb,EAAAxD,KACAwD,KAAAA,EACAc,OAAAtC,KAAA4B,MAAAU,SAGA,OAAAzC,IACA7D,KAAAgE,YAIAS,EAAAjC,MAAAC,aAAAC,YAAA,OACA6D,cAAA,WACA,MAAAvC,MAAA4B,MAAAU,OAAAtC,KAAA4B,MAAAJ,KAAAxD,MAAAgC,KAAA4B,MAAAJ,KAAAgB,WAEAxD,OAAA,WACA,MAAAR,OAAAc,cAAA,MACA0C,QAAAhC,KAAAuC,cACAd,UAAAf,GACA8B,SAAA,SAAAxC,KAAA4B,MAAAJ,KAAAgB,UAAAxC,KAAA4B,MAAAJ,KAAAgB,WAAA,KAEAhE,MAAAc,cAAA,OACAmC,UAAA,aACAjD,MAAAc,cAAA,QAAA,KAAAU,KAAA4B,MAAAJ,KAAAS,WAIA9F,EAAAJ,QAAAyE,IAGAiC,WAAA,KAAAC,GAAA,SAAAjH,EAAAU,EAAAJ,GCxFA,GAAAsC,GAAAmC,EAAAmC,EAAAC,EAAAC,EAAAxG,EACAyG,KAAAA,SAAA,SAAAtB,GAAA,IAAA,GAAA9F,GAAA,EAAAI,EAAAkE,KAAA/D,OAAAP,EAAAI,EAAAJ,IAAA,GAAAA,IAAAsE,OAAAA,KAAAtE,KAAA8F,EAAA,MAAA9F,EAAA,UAEAkH,GAAApE,MAAAuE,OAAAC,mBAEA3G,EAAAZ,EAAA,YAEA4C,EAAA5C,EAAA,cAEA+E,EAAA/E,EAAA,2BAEAkH,EAAAnE,MAAAC,aAAAC,YAAA,SACAC,QAAAtC,EAAAuC,OACAC,SACA9B,QAAA,SAAA,UACAkG,YAAA,eAEAjE,OAAA,WACA,GAAAkE,GAAAxH,EAAAmC,CACA,OAAAW,OAAAc,cAAA,OAAA,KAAAd,MAAAc,cAAA,OAAA,KAAAxB,EAAAqF,KAAAnD,KAAApC,MAAAiB,QAAAoE,YAAAzE,MAAAc,cAAA,OACAmC,UAAA,gBACA,WACA,GAAA2B,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAApC,MAAAiB,QAAA9B,OACA8C,KACAnE,EAAA0H,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAlE,IAAA0H,EACAF,EAAAnD,EAAArE,GACAmC,EAAAmC,KAAAqD,iBAAAH,EAAAlF,MACA6B,EAAAC,KAAAtB,MAAAc,cAAA,OACA+C,IAAAa,EAAAlF,KACAyD,UAAA,UACAjD,MAAAc,cAAAkB,GACAxC,KAAAkF,EAAAlF,KACAiE,MAAAiB,EAAAjB,MACAF,aAAAlE,EAAA5B,OAAA,EACA4F,MAAA7B,KAAAsD,cAAAJ,EAAAlF,KAAAH,GACAyE,OAAAxE,EAAAyF,QAAAlF,EAAA1B,sBAAAuG,EAAAlF,QACAQ,MAAAc,cAAAuD,GACAK,MAAAA,EACAM,MAAA3F,KAGA,OAAAgC,IACA7D,KAAAgE,OAAA,QAAAxB,MAAAc,cAAA,OAAA,KAAAxB,EAAAqF,KAAAnD,KAAApC,MAAAiB,QAAAoE,aAAAH,EAAA9G,KAAA,WACA,GAAAoH,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAApC,MAAAiB,QAAA9B,OACA8C,KACAuD,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAF,EAAAnD,EAAAqD,GACAvD,EAAAC,KAAAE,KAAAqD,iBAAAH,EAAAlF,MAAA/B,OAAA,EAEA,OAAA4D,IACA7D,KAAAgE,OAAA,IAAA,EAAAxB,MAAAc,cAAA,OACAmC,UAAA,oBACAO,QAAAhC,KAAAyD,cACAjF,MAAAc,cAAA,QACAmC,UAAA,oCACA,sBAAA,UAEAgC,aAAA,WACA,MAAApF,GAAA/B,cAEA+G,iBAAA,SAAAH,GACA,GAAAb,GAAAmB,EAAAvF,CAIA,OAHAuF,GAAAxD,KAAApC,MAAAiB,QAAA9B,OAAAe,EAAAC,UAAAiC,KAAApC,MAAAiB,QAAA9B,QACAiB,KAAAkF,KACArF,cACA,WACA,GAAAgC,EACAA,KACA,KAAAwC,IAAAmB,GACAvF,EAAAuF,EAAAnB,GACApE,KAAA,GACA4B,EAAAC,KAAAuC,EAGA,OAAAxC,MACA6D,QAEAJ,cAAA,SAAAJ,EAAArF,GACA,GAAAuF,GAAAxD,EAAAG,EAAAF,EAAAlC,EAAA6F,CAEAA,GADA,WAAAxD,MAAApC,MAAAiB,QAAAoE,WAAAC,GACAlD,KAAApC,MAAAiB,QAAAoE,WAAAC,GAAAS,QAEA3D,KAAApC,MAAAiB,QAAAoE,WAAAC,GAAA,MAAAS,QAEA9D,IACA,KAAAuD,EAAA,EAAAxD,EAAA4D,EAAAvH,OAAAmH,EAAAxD,EAAAwD,IACAzF,EAAA6F,EAAAJ,GACAvD,EAAAC,MACA9B,KAAAL,EAAA0E,IACAJ,MAAAtE,EAAA0E,IAAA,KAAA1E,EAAAiG,UAAA,IACApB,UAAAzC,EAAApC,EAAA0E,IAAAS,EAAA9G,KAAA6B,EAAAkC,IAAA,IAGA,OAAAF,MAIAgD,EAAArE,MAAAC,aAAAC,YAAA,gBACAM,OAAA,WACA,GAAArB,EACA,OAAAa,OAAAc,cAAA,MACAmC,UAAA,kBACAjD,MAAAc,cAAAsD,GACAiB,eAAA,sBACA,WACA,GAAAT,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAA4B,MAAA4B,MACA3D,KACAuD,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAzF,EAAAoC,EAAAqD,GACAvD,EAAAC,KAAAtB,MAAAc,cAAA,MACA+C,IAAA1E,EACA8D,UAAA,QACAjD,MAAAc,cAAA,QACAmC,UAAA,yCACAO,QAAAhC,KAAA8D,qBAAAnG,KACA,IAAAA,GAEA,OAAAkC,IACA7D,KAAAgE,SAEA8D,qBAAA,SAAAnG,GACA,MAAA,UAAAoG,GACA,MAAA,YACA,MAAA1F,GAAA1B,sBAAAoH,EAAAnC,MAAAsB,MAAAlF,KAAAL,GAAA,KAEAqC,SAIA7D,EAAAJ,QAAA4G,IAGAxC,aAAA,EAAAE,WAAA,GAAA2D,0BAAA,IAAAC,GAAA,SAAAxI,EAAAU,EAAAJ,GCvIA,GAAAsC,GAAA6F,EAAAC,EAAA9H,CAEAA,GAAAZ,EAAA,YAEA4C,EAAA5C,EAAA,cAEA0I,EAAA3F,MAAAC,aAAAC,YAAA,SACAC,QAAAtC,EAAAuC,OACAC,SACAC,UAAA,YACAtB,OAAA,SAAA,UAEAwB,OAAA,WACA,MAAAR,OAAAc,cAAA,MAAA,KAAAU,KAAApC,MAAAiB,QAAAC,SAAAN,MAAAc,cAAA4E,GACA1G,MAAAwC,KAAApC,MAAAiB,QAAArB,QACA,WAIA0G,EAAA1F,MAAAC,aAAAC,YAAA,QACAiC,gBAAA,WACA,OACAnD,MAAAwC,KAAA4B,MAAApE,QAGAwB,OAAA,WACA,MAAAR,OAAAc,cAAA,SACA8E,KAAA,OACAC,YAAA,oBACApG,MAAA+B,KAAApC,MAAAJ,MACA8G,SAAAtE,KAAAuE,gBAGAA,aAAA,SAAAtJ,GAIA,MAHA+E,MAAAa,UACArD,MAAAvC,EAAAgG,OAAAhD,QAEAI,EAAAzB,kBAAA3B,EAAAgG,OAAAhD,UAIA9B,EAAAJ,QAAAoI,IAGAhE,aAAA,EAAAE,WAAA,KAAAmE,GAAA,SAAA/I,EAAAU,EAAAJ,GC5CA,GAAAwC,GAAAkG,EAAAC,EAAAC,CAEApG,GAAAC,MAAAC,aAAAC,YAAA,QACAM,OAAA,WACA,MAAAR,OAAAc,cAAA,SACAmC,UAAA,WACAjD,MAAAc,cAAAqF,GACAjF,KAAAM,KAAA4B,MAAAlC,KACAlD,QAAAwD,KAAA4B,MAAApF,QACA0D,UAAAF,KAAA4B,MAAA1B,YACA1B,MAAAc,cAAAmF,GACA/E,KAAAM,KAAA4B,MAAAlC,KACAN,KAAAY,KAAA4B,MAAAxC,WAKAuF,EAAAnG,MAAAC,aAAAC,YAAA,QACAM,OAAA,WACA,GAAAW,EACA,OAAAnB,OAAAc,cAAA,QAAA,KAAAd,MAAAc,cAAA,KAAA,KAAA,WACA,GAAA8D,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAA4B,MAAAlC,KACAG,KACAuD,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAzD,EAAAI,EAAAqD,GACAvD,EAAAC,KAAAtB,MAAAc,cAAAoF,GACArC,IAAA1C,EAAA3B,KACA2B,IAAAA,EACAnD,QAAAwD,KAAA4B,MAAApF,QACA0D,UAAAF,KAAA4B,MAAA1B,YAGA,OAAAL,IACA7D,KAAAgE,SAEA4E,SAAA,SAAAjF,EAAAjE,OAGAgJ,EAAAlG,MAAAC,aAAAC,YAAA,KACAM,OAAA,WACA,MAAA,QAAAgB,KAAA4B,MAAApF,SAAAwD,KAAA4B,MAAAjC,IAAA3B,OAAAgC,KAAA4B,MAAApF,QAAAqI,MACArG,MAAAc,cAAA,MACA0C,QAAAhC,KAAAuC,cACAd,UAAA,YAAAzB,KAAA4B,MAAApF,QAAAsI,WACAtG,MAAAc,cAAA,QACAmC,UAAA,QACAzB,KAAA4B,MAAAjC,IAAAsC,QAEAzD,MAAAc,cAAA,MACA0C,QAAAhC,KAAAuC,eACA/D,MAAAc,cAAA,QACAmC,UAAA,QACAzB,KAAA4B,MAAAjC,IAAAsC,SAGAM,cAAA,WACA,MAAA,QAAAvC,KAAA4B,MAAApF,SAAAwD,KAAA4B,MAAApF,QAAAqI,QAAA7E,KAAA4B,MAAAjC,IAAA3B,KACA,QAAAgC,KAAA4B,MAAApF,QAAAsI,UACA9E,KAAA4B,MAAA1B,WACA2E,MAAA7E,KAAA4B,MAAAjC,IAAA3B,KACA8G,UAAA,SAGA9E,KAAA4B,MAAA1B,UAAA,MAGAF,KAAA4B,MAAA1B,WACA2E,MAAA7E,KAAA4B,MAAAjC,IAAA3B,KACA8G,UAAA,WAMAL,EAAAjG,MAAAC,aAAAC,YAAA,QACAM,OAAA,WACA,GAAAW,GAAAjE,EAAAyD,CACA,OAAAX,OAAAc,cAAA,QAAA,KAAA,WACA,GAAA8D,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAAC,KAAA4B,MAAAxC,KACAS,KACAnE,EAAA0H,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAlE,IAAA0H,EACAjE,EAAAY,EAAArE,GACAmE,EAAAC,KAAAtB,MAAAc,cAAA,MACA+C,IAAA3G,GACA,WACA,GAAAqJ,GAAAC,EAAAC,CAEA,KADAA,KACAvJ,EAAAqJ,EAAA,EAAAC,EAAA7F,EAAAlD,OAAA8I,EAAAC,EAAAtJ,IAAAqJ,EACApF,EAAAR,EAAAzD,GACAuJ,EAAAnF,KAAAtB,MAAAc,cAAA,MACA+C,IAAA3G,GACAiE,GAEA,OAAAsF,OAGA,OAAApF,IACA7D,KAAAgE,UAIA7D,EAAAJ,QAAAwC,OAGA2G,GAAA,SAAAzJ,EAAAU,EAAAJ,GC1GA,GAAAM,GAAA8I,EACAC,EAAA,SAAA5J,EAAA6J,GAAA,QAAA7J,GAAA6J,GAAAA,GAAAA,GAAAA,EAEAhJ,GAAAZ,EAAA,YAEA0J,EAAA3G,MAAAC,aAAAC,YAAA,aACAC,QAAAtC,EAAAuC,OACAC,SACAC,UAAA,YACAC,WAAA,cAEAC,OAAA,WACA,MAAAR,OAAAc,cAAA,MAAA,KAAAU,KAAApC,MAAAiB,QAAAC,SAAAN,MAAAc,cAAA,MAAA,KAAAd,MAAAc,cAAA,QACAmC,UAAA,SACAzB,KAAApC,MAAAiB,QAAAE,UAAA9C,QAAAuC,MAAAc,cAAA,QACAmC,UAAA,QACA,IAAA2D,EAAApF,KAAApC,MAAAiB,QAAAE,UAAA9C,OAAA,MAAA,aAAA,eAAA,WAIAE,EAAAJ,QAAAoJ,IAGA9E,WAAA,KAAAiF,GAAA,SAAA7J,EAAAU,EAAAJ,GCvBA,GAAAwJ,EAEAA,IACAtF,SAEAjC,KAAA,OACAiE,MAAA,SAEAjE,KAAA,gBACAiE,MAAA,yBAEAjE,KAAA,+BACAiE,MAAA,yBAEAjE,KAAA,YACAiE,MAAA,cAEAjE,KAAA,YACAiE,MAAA,cAEAjE,KAAA,oBACAiE,MAAA,sBAGAuD,cAAA,yBAAA,gBAAA,6BAAA,qBAAA,6BAAA,yBAAA,wCAAA,2BAAA,yCAAA,6CAAA,qBAAA,qBAAA,sBACAzI,SAEAiB,KAAA,eACAiE,MAAA,UACApE,mBAEAG,KAAA,oBACAiE,MAAA,oBACApE,mBAEAG,KAAA,YACAiE,MAAA,YACApE,mBAEAG,KAAA,YACAiE,MAAA,YACApE,oBAKA1B,EAAAJ,QAAAwJ,OAGAE,GAAA,SAAAhK,EAAAU,EAAAJ,GCjDA,GAAAK,GAAAC,EAAAqJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACApD,KAAAA,SAAA,SAAAtB,GAAA,IAAA,GAAA9F,GAAA,EAAAI,EAAAkE,KAAA/D,OAAAP,EAAAI,EAAAJ,IAAA,GAAAA,IAAAsE,OAAAA,KAAAtE,KAAA8F,EAAA,MAAA9F,EAAA,UAEAgK,GAAAjK,EAAA,WAAAiK,QAEArJ,EAAAZ,EAAA,WAEAW,EAAAX,EAAA,YAEAwK,EAAAnF,OAAAqF,cAAAC,QACAC,MACAC,SAAAxF,OAAAyF,SAAAD,SACAD,KAAAvF,OAAAyF,SAAAC,SACAC,KAAA3F,OAAAyF,SAAAE,MAAA3F,OAAAyF,SAAAE,MAAA,WAAA3F,OAAAyF,SAAAD,UAAA,KAAA,GACAI,KAAA,SAIAR,EAAA,WACA,GAAAS,GAAAC,EAAApK,CAkBA,OAjBAmK,IACAxD,KAAA,IACA3F,MAAAuI,IACAc,KAAAjB,KAEApJ,EAAAH,EAAAQ,OAAA,SAAA,WAAAU,MACA,OAAAf,IACAmK,EAAAjD,OAEAkD,KACAA,EAAA,GAAApK,EAAAqI,QACAiC,MAAAtK,EAAAsI,WAEA8B,KAIAX,EAAAC,QACAa,MAAA,QACA3C,KAAA,WACAuC,KAAAA,IACAK,KAAA,SAAAL,GACA,GAAAM,GAAAC,EAAAhE,EAAAiE,EAAAzL,EAAA0H,EAAAxD,EAAAwH,EAAArH,EAAAyC,EAAA7E,CAQA,KAPAtB,EAAAS,IAAA,YAAA6J,EAAAU,KAAAA,MACAV,EAAAW,cACAjL,EAAAS,IAAA,aAAA6J,EAAAW,aAAAvK,QAEAV,EAAAS,IAAA,YAAA,GACAoK,GAAA,EACAC,EAAA9K,EAAAQ,OAAA,SAAA,UAAAU,MACA7B,EAAA0H,EAAA,EAAAxD,EAAAuH,EAAAlL,OAAAmH,EAAAxD,EAAAlE,IAAA0H,EAAA,CACAF,EAAAiE,EAAAzL,GAEA0L,EADAT,EAAAW,aAAAvK,OAAAmG,EAAAlF,MAAA2F,QACA,WACA,GAAAoB,GAAAC,EAAAjF,EAAAF,CAGA,KAFAE,EAAA4G,EAAAW,aAAAvK,OAAAmG,EAAAlF,MAAA2F,QACA9D,KACAkF,EAAA,EAAAC,EAAAjF,EAAA9D,OAAA8I,EAAAC,EAAAD,IACAkC,EAAAlH,EAAAgF,GACAlF,EAAAC,KAAAmH,EAAA5E,IAEA,OAAAxC,MAGA,WACA,GAAAkF,GAAAC,EAAAjF,EAAAF,CAGA,KAFAE,EAAA4G,EAAAW,aAAAvK,OAAAmG,EAAAlF,MAAAkF,MAAAS,QACA9D,KACAkF,EAAA,EAAAC,EAAAjF,EAAA9D,OAAA8I,EAAAC,EAAAD,IACAkC,EAAAlH,EAAAgF,GACAlF,EAAAC,KAAAmH,EAAA5E,IAEA,OAAAxC,MAGAE,EAAAmD,EAAArF,aACA,KAAAF,IAAAoC,GACAyC,EAAAzC,EAAApC,GACA6E,GAAAM,EAAA9G,KAAAoL,EAAAzJ,GAAA,IAGAuJ,GAAA,EACAhE,EAAArF,cAAAF,IAAA,GAGA,GAAAuJ,EACA,MAAA7K,GAAAQ,OAAA,UAAAC,IAAA,SAAAqK,KAEAI,MAAA,SAAAA,GAEA,MADAC,SAAAD,MAAAtK,KAAAK,UAAAiK,EAAA,KAAA,OACAE,MAAA,0BAIA1B,EAAA,WACA,OACA2B,UACAlK,MAAAwI,IACAhJ,OAAA8I,OAKAE,EAAA,WACA,GAAA2B,GAAAC,EAAAC,EAAAC,EAAAC,CAGA,OAFAH,GAAA9J,EAAAkK,KAAA3L,EAAAQ,OAAA,SAAA,SAAAU,MAAA0K,eACAL,EAAAlC,EAAAwC,QAAAN,EAAAlC,EAAA,0BAAA,GAAA,OACAkC,GAKAG,EAAA,WACA,GAAA3E,GAAAxD,EAAAG,EAAAF,CAGA,KAFAE,EAAA2F,EAAAyC,MAAAP,EAAAlC,EAAA,WACA7F,KACAuD,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAyE,EAAA9H,EAAAqD,GACA,KAAAyE,GACAhI,EAAAC,KAAA+H,EAGA,OAAAhI,MAEA8H,EAAA,SAAAG,EAAA7H,GACA,OACAmI,aACA5K,MAAAsK,EACA1D,KAAA,cACAnE,OAAAA,MAKAoI,MACAC,KAAA,WACA,GAAAlF,GAAAxD,EAAAC,CAEA,KADAA,KACAuD,EAAA,EAAAxD,EAAAmI,EAAA9L,OAAAmH,EAAAxD,EAAAwD,IACA0E,EAAAC,EAAA3E,GACAvD,EAAAC,KAAA6H,EAAAG,EAAA1L,EAAAoJ,cAEA,OAAA3F,UAjCA0I,eAwCAzC,EAAA,WACA,GAAA0C,EAEA,OADAA,GAAA3C,IACA2C,GAIAH,MACAC,KAAAE,QAMA3C,EAAA,WACA,GAAA4C,GAAAvF,EAAAE,EAAAxD,EAAAgH,EAAA7G,EAAAF,CAcA,KAbA4I,EAAA,SAAAjF,GACA,GAAA3D,GAAA2C,EAAA7E,CACAkC,KACA,KAAAlC,IAAA6F,GACAhB,EAAAgB,EAAA7F,GACA6E,KAAA,GACA3C,EAAAC,KAAAnC,EAGA,OAAAkC,IAEAE,EAAA1D,EAAAQ,OAAA,SAAA,UAAAU,MACAsC,KACAuD,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAF,EAAAnD,EAAAqD,GACAqF,EAAAvF,EAAArF,eAAA5B,QACA4D,EAAAC,MACA0D,OACAoD,KACAA,EAAA,GAAA1D,EAAAlF,MAAAyK,EAAAvF,EAAArF,eACA+I,IAKA,OAAA/G,IAGA+F,EAAA,WACA,GAAA1C,GAAAnG,EAAAyL,CAEA,OADAzL,GAAAV,EAAAQ,OAAA,SAAA,UAAAU,MACAR,EAAAd,QAGAuM,EAAA3C,KAEA9I,QACA2L,UACA7B,KAAA/I,EAAA6K,OAAA,WACA,GAAAvF,GAAAxD,EAAAC,CAEA,KADAA,KACAuD,EAAA,EAAAxD,EAAA7C,EAAAd,OAAAmH,EAAAxD,EAAAwD,IACAF,EAAAnG,EAAAqG,GACAvD,EAAAC,MAAAoD,EAAAlF,KAAA2H,EAAAzC,EAAAsF,IAEA,OAAA3I,cAOA8F,EAAA,SAAAzC,EAAAsF,GACA,GAAAxL,GAAAoG,EAAAxD,EAAAgJ,EAAAC,EAAArL,EAAAuC,EAAAyD,CAaA,IAZAqF,EAAA,WACA,GAAAzF,GAAAxD,EAAAC,CAEA,KADAA,KACAuD,EAAA,EAAAxD,EAAA4I,EAAAvM,OAAAmH,EAAAxD,EAAAwD,IACApG,EAAAwL,EAAApF,GACAF,EAAAlF,OAAAhB,GAAAwG,OACA3D,EAAAC,KAAA9C,EAGA,OAAA6C,MAEArC,EAAAwI,IACA,QAAAxI,GAEA,IADAuC,EAAAvC,EAAA6K,KAAAC,KACAlF,EAAA,EAAAxD,EAAAG,EAAA9D,OAAAmH,EAAAxD,EAAAwD,IACAwF,EAAA7I,EAAAqD,GACAyF,EAAA/I,MACAtC,MAAAoL,GAYA,OARApF,IACAqB,MAAA3B,EAAAlF,KACA8I,OACAgC,MAAA,OAEAC,cAAA,EACA5F,KAAA,GAEA0F,EAAA5M,QAMAe,QACAqL,MACAC,KAAAO,IAGAhC,MACA3D,OACAM,MAAAA,MAXAA,MAAAA,IAkBArH,EAAAJ,SACAmK,OAAAA,KAIAhI,WAAA,EAAAC,UAAA,GAAA6K,QAAA,KAAAC,IAAA,SAAAxN,EAAAU,EAAAJ,GCjRA,GAAAsC,GAAAC,EAAA4K,EAAAC,EAAAhF,EAAA9H,EAAA8I,EAAAiE,CAEAF,GAAAzN,EAAA,aAEAY,EAAAZ,EAAA,WAEA4C,EAAA5C,EAAA,aAEA0N,EAAA1N,EAAA,uBAEA0I,EAAA1I,EAAA,uBAEA6C,EAAA7C,EAAA,0BAEA0J,EAAA1J,EAAA,4BAEA0B,eAAAC,QAAA,UACAiB,EAAA9B,aAEA8B,EAAA/B,aAGA8M,EAAA,WAEA,MADA/K,GAAA5B,aACAyM,EAAAhD,UAGA7J,EAAAQ,OAAA,UAAAwM,GAAA,SAAAvL,EAAAwL,SAAAF,EAAA,MAEA5K,MAAAQ,OAAAR,MAAAc,cAAA6F,EAAA,MAAAoE,SAAAC,eAAA,gBAEAhL,MAAAQ,OAAAR,MAAAc,cAAA6J,EAAA,MAAAI,SAAAC,eAAA,WAEAhL,MAAAQ,OAAAR,MAAAc,cAAA6E,EAAA,MAAAoF,SAAAC,eAAA,WAEAhL,MAAAQ,OAAAR,MAAAc,cAAAhB,EAAA,MAAAiL,SAAAC,eAAA,gBAGAC,YAAA,EAAAC,yBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,2BAAA,EAAAC,YAAA,EAAA3L,UAAA,KAAA4L,IAAA,SAAAtO,EAAAU,EAAAJ,GCtCA,GAAAiO,GAAAC,EAAArM,CAEAoM,GAAAvO,EAAA,UAEAmC,GACAZ,QACAQ,MAAA,GACAT,UACAP,QAAA,MAEAyG,cACAlE,aACAD,UAAA,GAGAmL,GACAC,iBAAA,EACAvL,QAAAH,MAAAuE,OAAAoH,kBAGAhO,EAAAJ,QAAA,GAAAiO,GAAApM,EAAAqM,KAGAG,OAAA,KAAAC,IAAA,SAAA5O,EAAAU,EAAAJ,GClBAI,EAAAJ,SAGAuO,YAAA,EAGAC,cAAA,EAGAC,OAAA,EAGAC,gBAAA,KAGAC,kBAAA,EAGAC,WAAA,EAGAhM,UAGAuL,iBAAA,EAGAU,SAAA,KAGAC,SAAA,WCk5BMC,IAAI,SAASrP,EAAQU,EAAOJ,GC/6BlC,GAAAiO,GAAAvO,EAAA,mBACAsP,EAAAtP,EAAA,mBAGAuP,QAAAC,eAAAjB,EAAA,WACA/L,MAAA,UAIA+L,EAAAkB,MAAAH,EAAAG,MAGA/O,EAAAJ,QAAAiO,IDw7BGmB,kBAAkB,GAAGC,mBAAmB,KAAKC,IAAI,SAAS5P,EAAQU,EAAOJ,GE17B5E,QAAAuP,GAAAlH,GACA,MAAAA,GAAA,KACA,GAAAmH,OAAAC,WAAA,GAAAC,KAAAC,UAAAxD,QAAA,KAAA,IAMA,QAAA8B,GAAA2B,EAAAC,GAKA,GAJAC,UAAA5P,OAAA,IACA0P,QAGA3L,eAAAgK,IACA,MAAA,IAAAA,GAAA2B,EAAAC,EAEA,KAAAxH,EAAA4G,OAAAW,KAAAvH,EAAA0H,MAAAH,GACA,KAAA/P,OAAA,wBAyBA,IAtBAmQ,EAAA/P,KAAAgE,MAGAA,KAAAiK,QAAAc,EAAAiB,aAAAC,EAAAL,GACA5L,KAAAkM,QAAAlM,KAAAiK,QAAAQ,iBAAAM,EAAAoB,UAGAnM,KAAAoM,gBACApM,KAAAqM,QAAAC,OACAtM,KAAAuM,YACAvM,KAAAwM,YAGAxM,KAAA4K,SAAA5K,KAAAiK,QAAAW,SACA5K,KAAAiK,QAAAW,mBAAA6B,GACAzM,KAAAiK,QAAAW,SACA,GAAA6B,GAAAzM,KAAAiK,QAAAW,UACA,GAAA6B,GAGAzM,KAAA6K,SAAA7K,KAAAiK,QAAAY,UAAA,KAEA7K,KAAA6K,SACA,IACA7K,KAAA4K,SAAA8B,MAAAf,EAAA3L,KAAA6K,UAAA,GAEA,MAAA5P,GAEA,KADAA,GAAA0R,QAAA,IAAA1R,EAAAyL,KAAAlH,KAAA,KAAA,KAAAvE,EAAA0R,QACA1R,EAIA+E,KAAA4M,KAAA5M,KAAAkM,QAAAP,GAGA3L,KAAApB,MAAAD,EAAAyL,OAAApK,MAjEA,GAAA6M,GAAApR,EAAA,eACAsQ,EAAAtQ,EAAA,UACAgR,EAAAhR,EAAA,YACAsP,EAAAtP,EAAA,gBACAqR,EAAArR,EAAA,eACAsR,EAAAtR,EAAA,cACAkD,EAAAlD,EAAA,eACAwQ,EAAAxQ,EAAA,kBACA2I,EAAA3I,EAAA,YA4DAsP,GAAAiC,SAAAhD,EAAA+B,GAKA/B,EAAAiD,UAAAC,SAAA,WACA,KAAAlN,KAAAiK,QAAAU,YAAA,GAAA,CAGA,GAAAwC,IACAP,KAAA5M,KAAAkM,QAAAlM,KAAA4M,MASA,OALA5M,MAAAuM,SAAAtQ,SAAA+D,KAAAiK,QAAAU,YACA3K,KAAAuM,SAAAa,MAEApN,KAAAuM,SAAAc,QAAAF,GAEAA,IAMAnD,EAAAiD,UAAAK,OAAA,SAAAC,GACA,GACAC,EAEA,IAAAD,EAGAvN,KAAA4M,KAAAW,EAAAX,KACAY,EAAAD,EAAAC,QAEA,CAGAxN,KAAAiK,QAAAC,kBACAlK,KAAA4M,KAAA7B,EAAA0C,aAAAzN,KAAA4M,MAGA,IAAAO,GAAAnN,KAAAkN,UACAM,GAAAV,EAAA9M,KAAA4M,KAAA5M,KAAAoM,aAAApM,KAAAiK,SAEAkD,IACAA,EAAAK,IAAAA,GAGA,GAAAxN,KAAA6K,SAAA,CACA,GAEA6C,GACAhS,EAHAiS,KACA7R,EAAA0R,EAAAvR,MAIA,KAAAP,EAAA,EAAAA,EAAAI,EAAAJ,IAGA,GAFAgS,EAAA3C,EAAAG,MAAAlL,KAAA6K,SAAA2C,EAAA9R,IAKA,IACAsE,KAAA4K,SAAA8B,MAAA1M,KAAAzC,IAAAiQ,EAAA9R,IAAAgS,GAAA,GAEA,MAAAzS,GACAA,EAAAyL,KAAA8G,EAAA9R,GAAAkS,OAAA3S,EAAAyL,UACAiH,EAAA7N,KAAA7E,GAIA0S,EAAA1R,QACA+D,KAAA6N,KAAA,WAAAF,OAAAA,IAcA,MAVA3N,MAAAoM,gBAEApM,KAAAqM,UACArM,KAAAqM,QAAAyB,aAAA9N,KAAAqM,UAGArM,KAAA6N,KAAA,UACAL,IAAAA,IAGAxN,MAGAgK,EAAAiD,UAAApQ,OAAA,SAAA6J,GACA,IAAAA,EACA,KAAA9K,OAAA,+BAKA,IAHAiQ,UAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,aAEAzH,EAAA4J,KAAAtH,GACA,KAAA9K,OAAA,+BAGA8K,GAAAtC,EAAA0H,MAAApF,GAAAA,GAAAA,EAGA,IAEAuH,GAFAC,EAAA9J,EAAA+J,YAAAzH,EAQA,IAJAwH,IACAD,EAAAlD,EAAAqD,UAAApO,KAAA4M,KAAAlG,IAGA1G,KAAAiK,QAAAS,iBAGA,CACA,GAAA2D,GAAA3H,EAAA4H,IAAA,SAAAC,GACA,MAAAnK,GAAAoK,SAAAD,GACAjD,EAAA,MACAlH,EAAA4G,OAAAuD,GACAjD,EAAA,MAEAiD,IACA/O,KAAA,IAEA,IAAAQ,KAAAwM,SAAA6B,GAMA,MAAArO,MAAAwM,SAAA6B,EALA,IAAAI,GAAA,GAAA5B,GAAA7M,KAAA0G,EAAAuH,EAAAI,EAEA,OADArO,MAAAwM,SAAA6B,GAAAI,EACAA,EAfA,MAAA,IAAA5B,GAAA7M,KAAA0G,IAuBAsD,EAAAiD,UAAAyB,KAAA,WACA,MAAA1O,MAAAnD,YAGAmN,EAAAiD,UAAA0B,UAAA,SAAAjI,GAMA,GAHAmF,UAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,aAEAzH,EAAA4J,KAAAtH,GACA,KAAA9K,OAAA,4BAEA,OAAAmP,GAAAG,MACAlL,KAAA4M,KAAAxI,EAAAwK,OAAAlI,IAAAtC,EAAAyK,OAAAnI,IAAAA,GAAAA,IAIAsD,EAAAiD,UAAA1P,IAAA,WACA,GAAAwC,GAAAC,KAAA2O,UAAAG,MAAA9O,KAAA6L,UAEA,OAAA7L,MAAAiK,QAAAO,MAAAxK,KAAAkM,QAAAnM,GAAAA,GAGAiK,EAAAiD,UAAAzC,MAAA,SAAA9D,GACA,MAAA1G,MAAAkM,QAAAlM,KAAA2O,UAAAG,MAAA9O,KAAA6L,aAGA7B,EAAAiD,UAAAnQ,IAAA,SAAAuF,EAAA0M,GAEA,GAAAlD,UAAA5P,OAAA,EACA,KAAAL,OAAA,yCAEA,IAAAoT,KAEA,IAAA5K,EAAA0H,MAAAzJ,GAAA,CACA,GAAAqE,GAAAqE,EAAAqD,UAAApO,KAAA4M,KAAAvK,EAEA,KAAAqE,EACA,KAAA9K,OAAA,4CAEAoT,GAAAjE,EAAAkE,WAAAvI,GAAAwI,KAAAH,QAGAC,GAAA3M,IAAA6M,KAAAH,EAGA,OAAA/O,MAAA8M,OAAAkC,IAGAhF,EAAAiD,UAAAkC,MAAA,SAAA9M,GACA,IAAAA,GAAA,IAAAA,EACA,KAAAzG,OAAA,8CAEA,IAAAoT,KAGA,OAFAA,GAAA3M,IAAA+M,QAAA,GAEApP,KAAA8M,OAAAkC,IAGAhF,EAAAiD,UAAAH,OAAA,SAAAkC,GACA,GAAAK,GAAArP,IAEA,KAAAoE,EAAA4G,OAAAgE,GACA,KAAApT,OAAA,sCAKA,OAHAoE,MAAAoM,aAAAW,EAAAiC,EAAAhP,KAAAoM,cAGApM,KAAAiK,QAAAK,WAIAtK,KAAAiK,QAAAM,cAIAvK,KAAAqM,UACArM,KAAAqM,QAAAiD,WAAAD,EAAA/B,OAAAiC,KAAAF,EAAA,MAAA,IAEArP,MANAA,KAAAsN,SAJAtN,MAaAgK,EAAAiD,UAAAuC,WAAA,WACA,QAAAxP,KAAAuM,SAAAtQ,QAGA+N,EAAAiD,UAAAwC,WAAA,WACA,MAAAzP,MAAAuM,UAGAvC,EAAAiD,UAAAyC,KAAA,WACA,IAAA1P,KAAAwP,aACA,KAAA5T,OAAA,iDAEA,IAAA+T,GAAA3P,KAAAuM,SAAAqD,OACA5P,MAAAsN,OAAAqC,IAGA3F,EAAAiD,UAAA4C,QAAA,iBAEA7P,MAAA4M,WACA5M,MAAAoM,mBACApM,MAAAuM,QAGA,KAAA,GAAAxH,KAAA/E,MAAAwM,SACAxM,KAAAwM,SAAAzH,GAAA8K,gBACA7P,MAAAwM,SAGAxM,KAAA8P,QAMA9F,EAAAiD,UAAA8C,OAAA,WACA,MAAA/P,MAAA2O,aAMAxS,EAAAJ,QAAAiO,IF68BGgG,iBAAiB,GAAGC,cAAc,GAAGC,eAAe,GAAGC,aAAa,GAAGC,cAAc,GAAGC,YAAY,GAAGC,cAAc,GAAGC,OAAS,GAAG3F,SAAW,KAAK4F,IAAI,SAAS/U,EAAQU,EAAOJ,GG5wCnL,QAAA0U,GAAAC,EAAAjC,GACAA,EAAApF,GAAA,SAAAqH,EAAAC,gBACAD,EAAAE,KAAAC,IAAA,SAAAH,EAAAI,cACAJ,EAAAE,KAAAvH,GAAA,SAAAqH,EAAAI,cAMA,QAAAC,GAAAC,GACA,GAAA3B,GAAArP,IAGA,IAAA6L,UAAA5P,OAAA,EACA,KAAAL,OAAA,4CAEA,IAAAqV,GAAApF,UAAA,GACAqF,EAAAnG,EAAAgD,QAAAlC,WAAAsF,MAAA,EAOA,IALAF,YAAAnF,SACAoF,EAAAD,EAAAE,MAAA,GACAF,EAAAA,EAAA,KAGA7M,EAAAyI,OAAAoE,GACA,KAAArV,OAAA,mDAEA,IAAA,OAAAoV,GAAA,QAAAA,EACA,KAAApV,OAAA,wCAGAmQ,GAAA/P,KAAAgE,MAGAA,KAAAnB,SAAAoS,GACAjR,KAAAoR,aACApR,KAAA4Q,KAAAK,EAAAL,KAGA5Q,KAAAqR,QAAA,GAAAvF,OAAA9L,KAAAnB,QAAA5C,QAGA+D,KAAA2Q,eAAA,WACAtB,EAAAgC,QAAAhC,EAAAxQ,QAAAiE,QAAA9C,QAAA,GAGAA,KAAA8Q,aAAA,WACA,GACApV,GACAI,EAFAwV,EAAAjC,EAAAgC,QAAA,EAIA,KAAA3V,EAAA,EAAAI,EAAAuT,EAAAxQ,QAAA5C,OAAAP,EAAAI,EAAAJ,IACA4V,EAAA,OAAAjC,EAAA+B,UAAA1V,EAAA,GACA4V,GAAAjC,EAAAgC,QAAA3V,GACA4V,GAAAjC,EAAAgC,QAAA3V,EAGA4V,IACAjC,EAAAxB,KAAA,UAGAwB,EAAAgC,QAAA,GAAAvF,OAAAuD,EAAAxQ,QAAA5C,SAIA+D,KAAAuR,OAAA,CAEA,IAAAC,GAAAxR,KAAAqJ,GACAoI,EAAAzR,KAAA0R,KAEAC,EAAA,WACAtC,EAAAkC,QAEAlC,EAAAkC,OAAA,EACAlC,EAAAxQ,QAAA+S,QAAA,SAAAnD,GACAgC,EAAApB,EAAAZ,MAIAzO,MAAAqJ,GAAA,WAEA,MADAsI,KACAH,EAAA1C,MAAA9O,KAAA6L,YAGA7L,KAAA0R,KAAA,WAEA,MADAC,KACAF,EAAA3C,MAAA9O,KAAA6L,YAIAqF,EAAAU,QAAA,SAAAnD,GACAzO,KAAAgR,GAAAvC,IACAzO,MAQA,QAAA6R,GAAAb,GACAD,EAAA9D,UAAA+D,GAAA,SAAAvC,GAGA,IAAArK,EAAAyI,OAAA4B,GAEA,KADAzO,MAAA6P,UACAjU,MAAA,sBAAAoV,EAAA,iCAGA,KAAAhR,KAAAnB,QAAAiE,QAAA2L,GAEA,KADAzO,MAAA6P,UACAjU,MAAA,sBAAAoV,EAAA,mCAUA,OAPAhR,MAAAnB,QAAAiB,KAAA2O,GACAzO,KAAAoR,UAAAtR,KAAAkR,GACAhR,KAAAqR,QAAApV,SAEA+D,KAAAuR,OACAd,EAAAzQ,KAAAyO,GAEAzO,MAhIA,GAAA+L,GAAAtQ,EAAA,UACAsP,EAAAtP,EAAA,gBACA2I,EAAA3I,EAAA,YAoGAsP,GAAAiC,SAAA+D,EAAAhF,GA8BA8F,EAAA,MACAA,EAAA,OAEAd,EAAA9D,UAAA4C,QAAA,WAGA7P,KAAAnB,QAAA+S,QAAA,SAAAnD,GACAA,EAAAoC,IAAA,SAAA7Q,KAAA2Q,iBACA3Q,MAGAA,KAAA4Q,KAAAC,IAAA,SAAA7Q,KAAA8Q,cAGA9Q,KAAAnB,QAAA,KACAmB,KAAAoR,UAAA,KACApR,KAAA4Q,KAAA,KACA5Q,KAAAqR,QAAA,KAGArR,KAAA8P,QAMA3T,EAAAJ,QAAAgV,IH4xCGb,eAAe,GAAGG,YAAY,GAAGE,OAAS,KAAKuB,IAAI,SAASrW,EAAQU,EAAOJ,GIj7C9E,QAAA8Q,GAAA+D,EAAAlK,EAAAuH,EAAAI,GACA,GAAAgB,GAAArP,IAGA+L,GAAA/P,KAAAgE,MAGA0G,EAAAA,MAGA1G,KAAA4Q,KAAAA,EACA5Q,KAAA0G,KAAAA,EACA1G,KAAAqO,KAAAA,EACArO,KAAA+R,SAAAzF,SAAAtM,KAAA2O,YAGA3O,KAAAgS,cAAA/D,EACAjO,KAAAiO,WAAAjO,KAAAgS,YAAA/D,EAAAjO,KAAA0G,KAGA1G,KAAAiS,cAAA,SAAAhX,GACA,GAEAyV,GAAAwB,EAAApW,EAAAqW,EAAAzW,EAAA0H,EAFAoK,EAAAvS,EAAA2R,KAAAY,IACA8D,GAAA,CAQA,IAJAjC,EAAA2C,cACA3C,EAAApB,WAAAlD,EAAAqD,UAAAiB,EAAAuB,KAAAhE,KAAAyC,EAAA3I,QAGA2I,EAAA3I,KAAAzK,OACA,MAAAoT,GAAAxB,KAAA,SAGAuE,GACA,IAAA1W,EAAA,EAAAI,EAAA0R,EAAAvR,OAAAP,EAAAI,EAAAJ,IAGA,IAFAgV,EAAAlD,EAAA9R,GAEA0H,EAAA,EAAA+O,EAAAzB,EAAAzU,OAAAmH,EAAA+O,IACAD,EAAAxB,EAAAtN,GAGA8O,IAAA,GAAA7C,EAAApB,WAAA7K,IAJAA,IAQA,GAAAA,EAAA,IAAA+O,GAAA/O,EAAA,IAAAiM,EAAApB,WAAAhS,OAAA,CACAqV,GAAA,CACA,MAAAc,GAMA,GAAAxF,GAAAN,SAAA+C,EAAAV,WAEAU,GAAA0C,SACAnF,GAAA0E,EACAjC,EAAAxB,KAAA,UAEAjB,IACAyC,EAAAxB,KAAA,cACAwB,EAAA0C,UAAA,GAIAnF,GAAA0E,IACAjC,EAAAxB,KAAA,YACAwB,EAAAxB,KAAA,UACAwB,EAAA0C,UAAA,IAMA/R,KAAApB,MAAAD,EAAA8P,OAAAzO,KAGA,IAAAuR,IAAA,EACAC,EAAAxR,KAAAqJ,GACAoI,EAAAzR,KAAA0R,KAEAC,EAAA,WACAJ,IAEAA,GAAA,EACAlC,EAAAuB,KAAAvH,GAAA,SAAAgG,EAAA4C,gBAGAjS,MAAAqJ,GAAA,WAEA,MADAsI,KACAH,EAAA1C,MAAA9O,KAAA6L,YAGA7L,KAAA0R,KAAA,WAEA,MADAC,KACAF,EAAA3C,MAAA9O,KAAA6L,YAzGA,GAAAE,GAAAtQ,EAAA,UACAsV,EAAAtV,EAAA,oBACAkD,EAAAlD,EAAA,eACAsP,EAAAtP,EAAA,gBACA2I,EAAA3I,EAAA,YAyGAsP,GAAAiC,SAAAH,EAAAd,GAKAc,EAAAI,UAAAoF,OAAA,WACA,OAAArS,KAAA0G,KAAAzK,QAGA4Q,EAAAI,UAAAqF,OAAA,WACA,MAAAlO,GAAAmO,UAAAvS,KAAA2O,cAGA9B,EAAAI,UAAAuF,SAAA,WACA,OAAAxS,KAAAsS,WAAAtS,KAAAqS,UAMAxF,EAAAI,UAAAyB,KAAA,WACA,MAAA1O,MAAA4Q,KAAAlC,QAGA7B,EAAAI,UAAApQ,OAAA,SAAA6J,GAIA,GAHAmF,UAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,aAEAzH,EAAA4J,KAAAtH,GACA,KAAA9K,OAAA,sCACA,OAAAoE,MAAA4Q,KAAA/T,OAAAmD,KAAA0G,KAAAkH,OAAAlH,KAGAmG,EAAAI,UAAAwF,GAAA,WACA,MAAAzS,MAAAiO,YAAAjO,KAAAiO,WAAAhS,OACA+D,KAAA4Q,KAAA/T,OAAAmD,KAAA0G,KAAAyK,MAAA,OAEA,MAGAtE,EAAAI,UAAAyF,KAAA,WACA,GAAAC,IAAA3S,KAAAiO,WAAAjO,KAAAiO,WAAAhS,OAAA,EAEA,IAAA2W,MAAAD,GACA,KAAA/W,OAAA,yDAEA,OAAA+W,GACA3S,KAAA4Q,KAAA/T,OAAAmD,KAAAiO,WAAAkD,MAAA,MAAAvD,OAAA+E,EAAA,IACA,MAGA9F,EAAAI,UAAA4F,SAAA,WACA,GAAAF,IAAA3S,KAAAiO,WAAAjO,KAAAiO,WAAAhS,OAAA,EAEA,IAAA2W,MAAAD,GACA,KAAA/W,OAAA,6DAEA,OAAAoE,MAAA4Q,KAAA/T,OAAAmD,KAAAiO,WAAAkD,MAAA,MAAAvD,OAAA,KAGAf,EAAAI,UAAA6F,MAAA,WACA,GAAAH,IAAA3S,KAAAiO,WAAAjO,KAAAiO,WAAAhS,OAAA,EAEA,IAAA2W,MAAAD,GACA,KAAA/W,OAAA,2DAEA,OAAA+W,GAAA,IAAA3S,KAAAyS,KAAA9D,YAAA1S,OACA,KAEA+D,KAAA4Q,KAAA/T,OAAAmD,KAAAiO,WAAAkD,MAAA,MAAAvD,OAAA+E,EAAA,KAGA9F,EAAAI,UAAA8F,UAAA,WACA,GAAAJ,IAAA3S,KAAAiO,WAAAjO,KAAAiO,WAAAhS,OAAA,EAEA,IAAA2W,MAAAD,GACA,KAAA/W,OAAA,2DAEA,IAAAoX,GAAAhT,KAAAyS,KAAA9D,WAEA,OAAA3O,MAAA4Q,KAAA/T,OAAAmD,KAAAiO,WAAAkD,MAAA,MAAAvD,OAAAoF,EAAA/W,OAAA,KAGA4Q,EAAAI,UAAAgG,KAAA,YACAjT,KAAAiO,WAAAjO,KAAAiO,WAAAhS,OAAA,EAEA,OAAA+D,MAAA2O,qBAAA7C,OAGA9L,KAAA4Q,KAAA/T,OAAAmD,KAAAiO,WAAAL,OAAA,IAFA,MAQAf,EAAAI,UAAA1P,IAAA,SAAAmJ,GAIA,MAHAmF,WAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,YAEAzH,EAAA8O,KAAAxM,GACA1G,KAAA4Q,KAAArT,IAAAyC,KAAAiO,WAAAL,OAAAlH,IAEA1G,KAAA4Q,KAAArT,IAAAyC,KAAAiO,aAGApB,EAAAI,UAAA0B,UAAA,SAAAjI,GAIA,MAHAmF,WAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,YAEAzH,EAAA8O,KAAAxM,GACA1G,KAAA4Q,KAAAjC,UAAA3O,KAAAiO,WAAAL,OAAAlH,IAEA1G,KAAA4Q,KAAAjC,UAAA3O,KAAAiO,aAGApB,EAAAI,UAAAzC,MAAA,SAAA9D,GAIA,MAHAmF,WAAA5P,OAAA,IACAyK,EAAAqE,EAAAgD,QAAAlC,YAEAzH,EAAA8O,KAAAxM,GACA1G,KAAA4Q,KAAApG,MAAAxK,KAAAiO,WAAAL,OAAAlH,IAEA1G,KAAA4Q,KAAApG,MAAAxK,KAAAiO,aAMApB,EAAAI,UAAAnQ,IAAA,SAAAuF,EAAA0M,GACA,GAAAlD,UAAA5P,OAAA,EACA,KAAAL,OAAA,mDAEA,IAAAgR,GAAA5M,KAAA2O,WAEA,IAAA,gBAAA/B,GACA,KAAAhR,OAAA,wDAEA,IAAAoT,KAEA,IAAA5K,EAAA0H,MAAAzJ,GAAA,CACA,GAAAqE,GAAAqE,EAAAqD,UAAAxB,EAAAvK,EAEA,KAAAqE,EACA,KAAA9K,OAAA,mDAEAoT,GAAAjE,EAAAkE,WAAAvI,GAAAwI,KAAAH,QAGAC,GAAA3M,IAAA6M,KAAAH,EAGA,OAAA/O,MAAA8M,OAAAkC,IAGAnC,EAAAI,UAAAxP,KAAA,SAAAsR,GACA,MAAA/O,MAAA8M,QAAAoC,KAAAH,KAGAlC,EAAAI,UAAAkC,MAAA,SAAA9M,GACA,IAAAA,GAAA,IAAAA,EACA,KAAAzG,OAAA,qDAEA,IAAA,gBAAAoE,MAAA2O,YACA,KAAA/S,OAAA,wDAEA,IAAAoT,KAEA,OADAA,GAAA3M,IAAA+M,QAAA,GACApP,KAAA8M,OAAAkC,IAGAnC,EAAAI,UAAAkG,OAAA,WACA,GAAAnT,KAAAqS,SACA,KAAAzW,OAAA,iDAEA,OAAAoE,MAAA8M,QAAAsC,QAAA,KAGAvC,EAAAI,UAAA6B,MAAA,SAAAsE,GACA,GAAA,kBAAAA,GACA,KAAAxX,OAAA,mDAEA,OAAAoE,MAAA8M,QAAAuG,OAAAD,KAGAvG,EAAAI,UAAAqG,MAAA,SAAAF,GACA,GAAA,kBAAAA,GACA,KAAAxX,OAAA,mDAEA,OAAAoE,MAAA8M,QAAAyG,OAAAH,KAGAvG,EAAAI,UAAAnN,KAAA,SAAA7B,GACA,KAAA+B,KAAA2O,qBAAA7C,QACA,KAAAlQ,OAAA,yDAEA,OAAAiQ,WAAA5P,OAAA,EACA+D,KAAA8M,QAAA0G,MAAAzI,EAAAgD,QAAAlC,aAEA7L,KAAA8M,QAAA0G,MAAAvV,KAGA4O,EAAAI,UAAAI,QAAA,SAAApP,GACA,KAAA+B,KAAA2O,qBAAA7C,QACA,KAAAlQ,OAAA,yDAEA,OAAAiQ,WAAA5P,OAAA,EACA+D,KAAA8M,QAAA2G,SAAA1I,EAAAgD,QAAAlC,aAEA7L,KAAA8M,QAAA2G,SAAAxV,KAGA4O,EAAAI,UAAAF,MAAA,SAAAzR,GACA,IAAA8I,EAAA4G,OAAA1P,GACA,KAAAM,OAAA,qDAEA,KAAAwI,EAAA4G,OAAAhL,KAAA2O,aACA,KAAA/S,OAAA,0DAEAoE,MAAA8M,QAAA4G,OAAApY,KAGAuR,EAAAI,UAAAH,OAAA,SAAAkC,GAEA,MADAhP,MAAA4Q,KAAA9D,OAAA/B,EAAAkE,WAAAjP,KAAAiO,WAAAe,IACAhP,MAMA6M,EAAAI,UAAA0G,GAAA,SAAAC,GACA,MAAA,IAAA7C,GAAA,KAAA/Q,KAAA4T,IAGA/G,EAAAI,UAAA4G,IAAA,SAAAD,GACA,MAAA,IAAA7C,GAAA,MAAA/Q,KAAA4T,IAMA/G,EAAAI,UAAA4C,QAAA,WAGA7P,KAAA4Q,KAAAC,IAAA,SAAA7Q,KAAAiS,eAGAjS,KAAAqO,YACArO,MAAA4Q,KAAApE,SAAAxM,KAAAqO,YAGArO,MAAA4Q,WACA5Q,MAAA0G,WACA1G,MAAAiO,WAGAjO,KAAA8P,QAMAjD,EAAAI,UAAA8C,OAAA,WACA,MAAA/P,MAAA2O,aAGAvK,EAAAyI,OAAA,SAAA5O,GACA,MAAAA,aAAA4O,IAMA1Q,EAAAJ,QAAA8Q,IJm8CGiH,mBAAmB,GAAG5D,eAAe,GAAGE,cAAc,GAAGC,YAAY,GAAGE,OAAS,KAAKwD,IAAI,SAAStY,EAAQU,EAAOJ,IACrH,SAAW2M,GK9zDX,QAAAqF,GAAAzS,GACA,MAAAwQ,OAAAmB,UAAAkE,MAAAnV,KAAAV,GAIA,QAAA0Q,GAAAgI,EAAAC,GACA,GACAlP,GADAzJ,IAGA,KAAAyJ,IAAAiP,GAAA1Y,EAAAyJ,GAAAiP,EAAAjP,EACA,KAAAA,IAAAkP,GAAA3Y,EAAAyJ,GAAAkP,EAAAlP,EAEA,OAAAzJ,GAIA,QAAA4Y,GAAAC,GACA,GAAAC,GAAAD,EAAAE,OACAC,EAAA,EAQA,OANAH,GAAAzL,SAAA4L,GAAA,KACAH,EAAAI,YAAAD,GAAA,KACAH,EAAAK,aAAAF,GAAA,KACAH,EAAAM,SAAAH,GAAA,KACAH,EAAAO,UAAAJ,GAAA,KAEA,GAAAK,QAAAP,EAAAE,GAIA,QAAA9J,GAAAoK,EAAApT,GACA,IAAAA,GACA,gBAAAA,IACAA,YAAA5F,QACA,eAAA8M,IAAAlH,YAAAqT,aACA,MAAArT,EAGA,IAAA4C,EAAA0H,MAAAtK,GAAA,CACA,GAAAoT,EAAA,CACA,GAAAlZ,GAAAI,EAAAN,IACA,KAAAE,EAAA,EAAAI,EAAA0F,EAAAvF,OAAAP,EAAAI,EAAAJ,IACAF,EAAAsE,KAAAqM,EAAA3K,EAAA9F,IACA,OAAAF,GAGA,MAAAgG,GAAA2P,MAAA,GAKA,GAAA/M,EAAAmH,KAAA/J,GACA,MAAA,IAAA+J,MAAA/J,EAAAgK,UAGA,IAAAhK,YAAAmT,QACA,MAAAT,GAAA1S,EAGA,IAAA4C,EAAA4G,OAAAxJ,GAAA,CACA,GAAAuD,GAAAzJ,IAEAkG,GAAAsT,aAAAtT,EAAAsT,cAAA9J,SACA1P,EAAA0P,OAAA+J,OAAAvT,EAAAsT,YAAA7H,WAEA,KAAAlI,IAAAvD,GACAA,EAAAwT,eAAAjQ,KACAzJ,EAAAyJ,GAAA6P,EAAAzI,EAAA3K,EAAAuD,IAAAvD,EAAAuD,GACA,OAAAzJ,GAGA,MAAAkG,GAQA,QAAAyT,GAAAC,EAAAC,GACA,MAAA,UAAAC,GACA,MAAAD,GAAAD,EAAAE,KAKA,QAAAnE,GAAAzV,EAAA4X,GACA,GAAA1X,GAAAI,CACA,KAAAJ,EAAA,EAAAI,EAAAN,EAAAS,OAAAP,EAAAI,EAAAJ,IACA,GAAA0X,EAAA5X,EAAAE,IACA,MAAAF,GAAAE,GAKA,QAAAqL,GAAAvL,EAAA4X,GACA,GAAA1X,GAAAI,CACA,KAAAJ,EAAA,EAAAI,EAAAN,EAAAS,OAAAP,EAAAI,EAAAJ,IACA,GAAA0X,EAAA5X,EAAAE,IACA,MAAAA,EAEA,UAIA,QAAA2Z,GAAA1M,EAAAqG,GACA,GACAjK,GADAuQ,GAAA,CAKA,KAAA3M,EACA,OAAA,CAGA,KAAA5D,IAAAiK,GACA,GAAA5K,EAAA4G,OAAAgE,EAAAjK,IACAuQ,EAAAA,GAAAD,EAAA1M,EAAA5D,GAAAiK,EAAAjK,QAEA,IAAAX,EAAA0H,MAAAkD,EAAAjK,IACAuQ,EAAAA,MAAAtG,EAAAjK,GAAAjC,QAAA6F,EAAA5D,QAGA,IAAA4D,EAAA5D,KAAAiK,EAAAjK,GACA,OAAA,CAIA,OAAAuQ,GAGA,QAAAC,GAAA5M,EAAAqG,GACA,MAAAiC,GAAAtI,EAAA,SAAA1N,GACA,MAAAoa,GAAApa,EAAA+T,KAIA,QAAAwG,GAAA7M,EAAAqG,GACA,MAAAjI,GAAA4B,EAAA,SAAA1N,GACA,MAAAoa,GAAApa,EAAA+T,KAKA,QAAA9D,GAAAvC,EAAAjC,GACAA,EAAAA,KAEA,IACAhL,GACAI,EAFA4U,EAAA/H,CAIA,KAAAjN,EAAA,EAAAI,EAAA4K,EAAAzK,OAAAP,EAAAI,EAAAJ,IAAA,CACA,IAAAgV,EACA,MAEA,IAAA,kBAAAhK,GAAAhL,GAAA,CACA,IAAA0I,EAAA0H,MAAA4E,GACA,MAEAA,GAAAO,EAAAP,EAAAhK,EAAAhL,QAEA,IAAA,gBAAAgL,GAAAhL,GAAA,CACA,IAAA0I,EAAA0H,MAAA4E,GACA,MAEAA,GAAA6E,EAAA7E,EAAAhK,EAAAhL,QAGAgV,GAAAA,EAAAhK,EAAAhL,IAIA,MAAAgV,GAIA,QAAAtC,GAAAzF,EAAAjC,GACA,GAEA+O,GACA/Z,EACAI,EAJAmS,KACAyC,EAAA/H,CAKA,KAAAjN,EAAA,EAAAI,EAAA4K,EAAAzK,OAAAP,EAAAI,EAAAJ,IAAA,CACA,IAAAgV,EACA,MAAA,KAEA,IAAA,kBAAAhK,GAAAhL,GAAA,CACA,IAAA0I,EAAA0H,MAAA4E,GACA,MAEA+E,GAAA1O,EAAA2J,EAAAhK,EAAAhL,IACAuS,EAAAnO,KAAA2V,GACA/E,EAAAA,EAAA+E,OAEA,IAAA,gBAAA/O,GAAAhL,GAAA,CACA,IAAA0I,EAAA0H,MAAA4E,GACA,MAEA+E,GAAAD,EAAA9E,EAAAhK,EAAAhL,IACAuS,EAAAnO,KAAA2V,GACA/E,EAAAA,EAAA+E,OAGAxH,GAAAnO,KAAA4G,EAAAhL,IACAgV,EAAAA,EAAAhK,EAAAhL,QAIA,MAAAuS,GAIA,QAAAgB,GAAAvI,EAAAsI,GACA,GAGAtT,GAHAI,EAAA4K,EAAAzK,OACAX,KACAoV,EAAApV,CAMA,KAHAQ,IACAR,EAAA0T,GAEAtT,EAAA,EAAAA,EAAAI,EAAAJ,IACAgV,EAAAhK,EAAAhL,IAAAA,EAAA,IAAAI,EAAAkT,KACA0B,EAAAA,EAAAhK,EAAAhL,GAGA,OAAAJ,GAGA,QAAA0R,GAAA0I,EAAAC,GACAD,EAAAE,OAAAD,CACA,IAAAE,GAAA,YACAA,GAAA5I,UAAA0I,EAAA1I,UACAyI,EAAAzI,UAAA,GAAA4I,GACAH,EAAAzI,UAAA6H,YAAAY,EA9OA,GAAAtR,GAAA3I,EAAA,aA8EAgS,EAAAjD,EAAA+E,KAAA,MAAA,GACApD,EAAA3B,EAAA+E,KAAA,MAAA,EAkKApT,GAAAJ,SACAgS,QAAAA,EACA5B,UAAAA,EACAsB,aAAAA,EACAzB,aAAAA,EACAiJ,QAAAA,EACA/J,MAAAA,EACA8B,SAAAA,EACAiC,WAAAA,EACAb,UAAAA,KL20DGpS,KAAKgE,KAAuB,mBAAX0I,QAAyBA,OAAyB,mBAAT2G,MAAuBA,KAAyB,mBAAXvO,QAAyBA,aAExHuP,YAAY,KAAKyF,IAAI,SAASra,EAAQU,EAAOJ,GMnkEhD,QAAAga,GAAAza,EAAA+G,GACA,MAAAA,MAAA/G,OAGA,QAAA0a,GAAAxa,EAAA6J,EAAAhD,GACA,MAAA0T,GAAAva,EAAA6G,IAAA0T,EAAA1Q,EAAAhD,GAIA,QAAA0K,KACA,GACAkJ,GACAC,EAEAxa,EACAqJ,EALAoR,KAGAra,EAAA+P,UAAA5P,MAIA,KAAAP,EAAAI,EAAA,EAAAJ,GAAA,EAAAA,IAAA,CASA,GAAAmQ,UAAAnQ,GAAA0T,aACA+G,GAAAjH,WACAiH,GAAA9C,aACA8C,GAAAzC,OACAyC,EAAA/G,OAAAvD,UAAAnQ,GAAA0T,WAEA,CAAA,GAAAvD,UAAAnQ,GAAAwT,KAAA,OACAiH,GAAA9C,aACA8C,GAAAzC,aACAyC,GAAA/G,OACA+G,EAAAjH,KAAArD,UAAAnQ,GAAAwT,IACA,UAEA,GAAArD,UAAAnQ,GAAAgY,OAAA,OACAyC,GAAAjH,WACAiH,GAAA9C,aACA8C,GAAA/G,OACA+G,EAAAzC,OAAA7H,UAAAnQ,GAAAgY,MACA,UAEA,GAAA7H,UAAAnQ,GAAA2X,OAAA,OACA8C,GAAAjH,WACAiH,GAAAzC,aACAyC,GAAA/G,OACA+G,EAAA9C,OAAAxH,UAAAnQ,GAAA2X,MACA,UAEA,GAAAxH,UAAAnQ,GAAA6X,OAAA,OACA4C,GAAAjH,WACAiH,GAAAzC,aACAyC,GAAA/G,OAEA+G,EAAA9C,OACA8C,EAAA9C,OAAAtI,EAAAkK,QAAAkB,EAAA9C,OAAAxH,UAAAnQ,GAAA6X,QAEA4C,EAAA9C,OAAAxH,UAAAnQ,GAAA6X,MACA,WAGA,IAAAxO,IAAA8G,WAAAnQ,GACAua,EAAAE,EAAApR,GACAmR,EAAArK,UAAAnQ,GAAAqJ,GAEAkR,GAAA7R,EAAA4G,OAAAkL,GAGAF,EAAAC,EAAAC,EAAA,SACA9R,EAAA0H,MAAAmK,EAAAzC,OACAyC,EAAAzC,MAAAyC,EAAAzC,MAAA5F,OAAAsI,EAAA1C,OAEAyC,EAAAzC,OAAAyC,EAAAzC,OAAA5F,OAAAsI,EAAA1C,OAIAwC,EAAAC,EAAAC,EAAA,YACA9R,EAAA0H,MAAAoK,EAAAzC,UACAwC,EAAAxC,SAAAyC,EAAAzC,SAAA7F,OAAAqI,EAAAxC,UAEAwC,EAAAxC,UAAAyC,EAAAzC,UAAA7F,OAAAqI,EAAAxC,UAKA0C,EAAApR,GAAAgI,EAAAmJ,EAAAD,GAIAE,EAAApR,GAAAmR,EAKA,MAAAC,GAtGA,GAAApL,GAAAtP,EAAA,gBACA2I,EAAA3I,EAAA,YAwGAU,GAAAJ,QAAAgR,INglEGmD,eAAe,GAAGG,YAAY,KAAK+F,IAAI,SAAS3a,EAAQU,EAAOJ,GOzrElE,GAAAgV,GAAAtV,EAAA,oBACA2I,EAAA3I,EAAA,YAEAU,GAAAJ,SACAqO,OAAA,SAAAA,GACA,OAGAzL,SACAgC,gBAAA,WAMA,GAHAX,KAAA4Q,KAAAxG,GAGApK,KAAAyO,SAAAzO,KAAAnB,QACA,QAGA,IAAAmB,KAAAyO,QAAAzO,KAAAnB,QACA,KAAAjD,OAAA,2GAYA,IAPAoE,KAAAqW,OAAA,KAGArW,KAAAsW,gBAAA,WACAtW,KAAAa,SAAAb,KAAAuW,oBACAhH,KAAAvP,MAEAA,KAAAyO,OAAA,CACA,IAAArK,EAAAoS,YAAAxW,KAAAyO,QACA,KAAA7S,OAAA,yEAGAwI,GAAAoK,SAAAxO,KAAAyO,UACAzO,KAAAyO,OAAAzO,KAAAyO,UAEArK,EAAAyI,OAAA7M,KAAAyO,UACAzO,KAAAyO,OAAArE,EAAAvN,OAAAmD,KAAAyO,SAEAzO,KAAAuW,gBAAA,WACA,OAAA9H,OAAAzO,KAAAyO,OAAAlR,QACAgS,KAAAvP,MACAA,KAAAqW,OAAA,aAEA,IAAArW,KAAAnB,QAAA,CACA,IAAAuF,EAAAqS,aAAAzW,KAAAnB,SACA,KAAAjD,OAAA,iEAKA,IAHAwI,EAAAoK,SAAAxO,KAAAnB,WACAmB,KAAAnB,QAAAmB,KAAAnB,WAEAuF,EAAA0H,MAAA9L,KAAAnB,SACAmB,KAAAnB,QAAAmB,KAAAnB,QAAAyP,IAAA,SAAA5H,GACA,MAAAtC,GAAAyI,OAAAnG,GAAAA,EAAA0D,EAAAvN,OAAA6J,KAGA1G,KAAAuW,gBAAA,WACA,OAAA1X,QAAAmB,KAAAnB,QAAAyP,IAAA,SAAAG,GACA,MAAAA,GAAAlR,UAEAgS,KAAAvP,MACAA,KAAAqW,OAAA,YAEA,CACA,IAAA,GAAAtR,KAAA/E,MAAAnB,QACAuF,EAAAyI,OAAA7M,KAAAnB,QAAAkG,MACA/E,KAAAnB,QAAAkG,GAAAqF,EAAAvN,OAAAmD,KAAAnB,QAAAkG,IAGA/E,MAAAuW,gBAAA,WACA,GAAA7I,KACA,KAAA3I,IAAA/E,MAAAnB,QACA6O,EAAA3I,GAAA/E,KAAAnB,QAAAkG,GAAAxH,KACA,QAAAsB,QAAA6O,IACA6B,KAAAvP,MACAA,KAAAqW,OAAA,UAIA,MAAArW,MAAAuW,mBAEAG,kBAAA,WACA,WAAA1W,KAAAqW,QACArW,KAAA2W,cAAA,GAAA5F,GAAA,MAAA/Q,KAAAyO,SACAzO,KAAA2W,cAAAtN,GAAA,SAAArJ,KAAAsW,kBAEA,UAAAtW,KAAAqW,QACArW,KAAA2W,cAAA,GAAA5F,GAAA,KAAA/Q,KAAAnB,SACAmB,KAAA2W,cAAAtN,GAAA,SAAArJ,KAAAsW,kBAEA,WAAAtW,KAAAqW,SACArW,KAAA2W,cAAA,GAAA5F,GACA,KACA/F,OAAA4L,KAAA5W,KAAAnB,SAAAyP,IAAA,SAAAvJ;AACA,MAAA/E,MAAAnB,QAAAkG,IACA/E,OAEAA,KAAA2W,cAAAtN,GAAA,SAAArJ,KAAAsW,mBAGA/U,qBAAA,WACAvB,KAAA2W,eACA3W,KAAA2W,cAAA9G,aAEAjC,OAAAxD,EAAAH,QAAAtL,UAGA8P,OAAA,SAAAA,GACA,OAGA9P,SACAgC,gBAAA,WAUA,MAPAX,MAAAyO,OAAAA,EAGAzO,KAAAsW,gBAAA,WACAtW,KAAAa,UAAA4N,OAAAzO,KAAAyO,OAAAlR,SACAgS,KAAAvP,OAEAyO,OAAAzO,KAAAyO,OAAAlR,QAEAmZ,kBAAA,WAGA1W,KAAAyO,OAAApF,GAAA,SAAArJ,KAAAsW,kBAEA/U,qBAAA,WAGAvB,KAAAyO,OAAAoC,IAAA,SAAA7Q,KAAAsW,oBAEA1I,OAAAa,EAAAmC,KAAA3G,QAAAtL,aPqsEGmV,mBAAmB,GAAGzD,YAAY,KAAKwG,IAAI,SAASpb,EAAQU,EAAOJ,GQz0EtE,GAAAqI,GAAA,SAAAnG,GACA,MAAA6N,OAAAgL,QAAA7Y,GACA,QACA,gBAAAA,IAAA,OAAAA,EACA,SACA,gBAAAA,GACA,SACA,gBAAAA,GACA,SACA,iBAAAA,GACA,UACA,kBAAAA,GACA,WACA,OAAAA,EACA,OACAqO,SAAArO,EACA,YACAA,YAAAsN,MACA,OAEA,UAIAnH,GAAA0H,MAAA,SAAA7N,GACA,MAAA6N,OAAAgL,QAAA7Y,IAGAmG,EAAA4G,OAAA,SAAA/M,GACA,OAAA6N,MAAAgL,QAAA7Y,IAAA,gBAAAA,IAAA,OAAAA,GAGAmG,EAAAwK,OAAA,SAAA3Q,GACA,MAAA,gBAAAA,IAGAmG,EAAAyK,OAAA,SAAA5Q,GACA,MAAA,gBAAAA,IAGAmG,EAAA2S,QAAA,SAAA9Y,GACA,MAAA,iBAAAA,IAGAmG,EAAAoK,SAAA,SAAAvQ,GACA,MAAA,kBAAAA,IAGAmG,EAAAmO,UAAA,SAAAtU,GACA,MAAA,gBAAAA,IAAA,gBAAAA,IAAA,iBAAAA,IAGAmG,EAAAmH,KAAA,SAAAtN,GACA,MAAAA,aAAAsN,OAGAnH,EAAA8O,KAAA,SAAAjV,GACA,GAAA+Y,GAAA5S,EAAAnG,GACAgZ,GAAA,OAAA,YAAA,UAAA,OACA,OAAAA,GAAAnU,QAAAkU,SAIA5S,EAAA4J,KAAA,SAAA/P,GACA,GAAAiZ,IAAA,SAAA,SAAA,SAAA,WAAA,YACA,KAAA9S,EAAA0H,MAAA7N,GAOA,MAAAiZ,GAAApU,QAAAsB,EAAAnG,KAAA,CANA,KAAA,GAAAkZ,GAAA,EAAAA,EAAAlZ,EAAAhC,OAAAkb,IACA,GAAAD,EAAApU,QAAAsB,EAAAnG,EAAAkZ,UACA,OAAA,CAMA,QAAA,GAKA/S,EAAAoS,YAAA,SAAAvY,GACA,GAAAmZ,IAAA,SAAA,SAAA,QAAA,WACA,OAAAA,GAAAtU,QAAAsB,EAAAnG,KAAA,GAAAmG,EAAAyI,OAAA5O,IAIAmG,EAAAqS,aAAA,SAAAxY,GACA,GAAAmZ,IAAA,QAAA,SAAA,WACA,OAAAA,GAAAtU,QAAAsB,EAAAnG,KAAA,GAIAmG,EAAA+J,YAAA,SAAAlQ,GAEA,IAAA,GADAoZ,IAAA,SAAA,YACAF,EAAA,EAAAA,EAAAlZ,EAAAhC,OAAAkb,IACA,GAAAE,EAAAvU,QAAAsB,EAAAnG,EAAAkZ,MAAA,EACA,OAAA,CAGA,QAAA,GAGAhb,EAAAJ,QAAAqI,ORw1EMkT,IAAI,SAAS7b,EAAQU,EAAOJ,GSn7ElC,QAAAwb,GAAA7Q,EAAAiG,GACA,GAAA1R,GAAA,GAAAW,OAAA,kBAAA+Q,EAAA,aACAjG,EAAA8Q,WAGA,OADAvc,GAAAyL,KAAAA,EACAzL,EAIA,QAAA6R,GAAA7L,EAAA+N,EAAApD,GACAA,EAAAA,IAAA1B,iBAAA,EACA,IAAAsD,KAqIA,OAlIA,SAAAiK,GAAAnc,EAAA0T,EAAAtI,EAAAgR,GACAhR,EAAAA,KAEA,IACA0M,GACAuE,EACA5S,EACA6S,EAJAvJ,EAAA3H,EAAAlH,KAAA,IAMA,KAAAuF,IAAAiK,GACA,GAAA6I,EAAA9S,GAQA,OAPA6S,EAAA5I,EAAAjK,GAGAyI,EAAAa,IAAA,EAIAtJ,GACA,IAAA,QACA,IAAAX,EAAA0H,MAAAxQ,GACA,KAAAic,GAAA7Q,EAAA,qCAEAtC,GAAA0H,MAAA8L,GAGAtc,EAAAwE,KAAAgP,MAAAxT,EAAAsc,GAFAtc,EAAAwE,KAAA8X,EAGA,MACA,KAAA,WACA,IAAAxT,EAAA0H,MAAAxQ,GACA,KAAAic,GAAA7Q,EAAA,wCAEAtC,GAAA0H,MAAA8L,GAGAtc,EAAA+R,QAAAyB,MAAAxT,EAAAsc,GAFAtc,EAAA+R,QAAAuK,OASA,IAFAD,EAAAtJ,EAAAA,EAAA,IAAAtJ,EAAAA,EAEA,WAAAiK,EAAAjK,QAGAyI,EAAAmK,IAAA,EAEAvT,EAAA0H,MAAAxQ,GACAsQ,EAAA1B,gBAGAwN,EAAAhR,EAAAA,EAAAzK,OAAA,IAAAX,EAAA6V,MAAA,GAAApM,GAAA6I,OAAAtS,EAAA6V,OAAApM,EAAA,IAFAzJ,EAAAwc,OAAA/S,EAAA,SAKAzJ,GAAAyJ,OAGA,IAAA,SAAAiK,EAAAjK,QACA6S,EAAA5I,EAAAjK,GAAAmK,KAGA1B,EAAAmK,IAAA,EACArc,EAAAyJ,GAAA6S,MAEA,IAAA,WAAA5I,EAAAjK,SAAA,WAAAiK,EAAAjK,QAAA,CAKA,GAFAqO,EAAApE,EAAAjK,GAAAsO,QAAArE,EAAAjK,GAAAwO,OAEA,kBAAAH,GACA,KAAAmE,GAAA7Q,EAAAkH,OAAA7I,GAAA,2CAGAyI,GAAAmK,IAAA,EACArc,EAAAyJ,GAAAqO,EAAApX,KAAA,KAAAV,EAAAyJ,QAEA,IAAA,WAAAiK,EAAAjK,QAAA,CAGA,GAFA6S,EAAA5I,EAAAjK,GAAA2O,QAEAtP,EAAA4G,OAAA1P,EAAAyJ,IACA,KAAAwS,GAAA7Q,EAAAkH,OAAA7I,GAAA,uCAGAyI,GAAAmK,IAAA,EACArc,EAAAyJ,GAAAgG,EAAAiB,aAAA1Q,EAAAyJ,GAAA6S,OAEA,IAAAhM,EAAA1B,kBACA,UAAA8E,EAAAjK,SACA,aAAAiK,EAAAjK,SAAA,CACA,GAAA,UAAAiK,EAAAjK,QAAA,CAGA,GAFA6S,EAAA5I,EAAAjK,GAAAyO,OAEApP,EAAA0H,MAAAxQ,EAAAyJ,IACA,KAAAwS,GAAA7Q,EAAAkH,OAAA7I,GAAA,qCACAzJ,GAAAyJ,GAAAzJ,EAAAyJ,GAAA6I,OAAAgK,GAEA,GAAA,aAAA5I,EAAAjK,QAAA,CAGA,GAFA6S,EAAA5I,EAAAjK,GAAA0O,UAEArP,EAAA0H,MAAAxQ,EAAAyJ,IACA,KAAAwS,GAAA7Q,EAAAkH,OAAA7I,GAAA,wCACAzJ,GAAAyJ,IAAA6S,YAAA9L,OAAA8L,GAAAA,IAAAhK,OAAAtS,EAAAyJ,IAIAyI,EAAAmK,IAAA,MAKA,mBAAArc,GAAAyJ,KACAzJ,EAAAyJ,OAGA6G,EAAA1B,kBACA5O,EAAAyJ,GAAAgG,EAAA0C,aAAAnS,EAAAyJ,KAIA0S,EACAnc,EAAAyJ,GACAiK,EAAAjK,GACA2B,EAAAkH,OAAA7I,GACAzJ,IAKA2F,EAAA+N,GAEAhE,OAAA4L,KAAApJ,GAAAc,IAAA,SAAAD,GACA,MAAAA,GAAAlG,MAAA,OAhKA,GAAA4C,GAAAtP,EAAA,gBACA2I,EAAA3I,EAAA,aAEAoc,MAEA,OACA,QACA,WACA,SACA,UACAjG,QAAA,SAAAlB,GACAmH,EAAAnH,IAAA,IA0JAvU,EAAAJ,QAAA+Q,IT48EGoD,eAAe,GAAGG,YAAY,KAAK0H,IAAI,SAAStc,EAAQU,EAAOJ,GUlnFlE,QAAA2E,KAIA,IAAA,GAFA0U,GADA4C,EAAA,GAGAtc,EAAA,EAAAA,EAAAmQ,UAAA5P,OAAAP,IAEA,GADA0Z,EAAAvJ,UAAAnQ,GAKA,GAAA,gBAAA0Z,IAAA,gBAAAA,GACA4C,GAAA,IAAA5C,MACA,IAAA,mBAAApK,OAAAiC,UAAAuK,SAAAxb,KAAAoZ,GACA4C,GAAA,IAAAtX,EAAAoO,MAAA,KAAAsG,OACA,IAAA,gBAAAA,GACA,IAAA,GAAA/S,KAAA+S,GACAA,EAAAJ,eAAA3S,IAAA+S,EAAA/S,KAGA2V,GAAA,IAAA3V,EAIA,OAAA2V,GAAAC,OAAA,GAIA,mBAAA9b,IAAAA,EAAAJ,UACAI,EAAAJ,QAAA2E,GAIA,mBAAAwX,SAAAA,OAAAC,KACAD,OAAA,gBAAA,WACA,MAAAxX,UV6nFM0X,IAAI,SAAS3c,EAAQU,EAAOJ,IWrqFlC,WACA,YAqbA,SAAAsc,GAAA7c,GACA,GAAAE,GAAAI,EAAA6b,IAEA,KAAAjc,EAAA,EAAAI,EAAAN,EAAAS,OAAAP,EAAAI,EAAAJ,IACAic,EAAA7X,KAAAtE,EAAAE,GAAA4c,QAEA,OAAAX,GArbA,GAAAY,IACA7G,KAAA,UACA8G,MAAA,UAaAC,EAAA,WACAzY,KAAA0Y,UAAA,EACA1Y,KAAA2Y,aACA3Y,KAAA4Y,aACA5Y,KAAA6Y,gBA0EAJ,GAAAxL,UAAA5D,GAAA,SAAA7N,EAAA6J,EAAAqL,GACA,GAAAhV,GACAI,EACAiJ,EACA+T,EACAC,EACAC,CAGA,IAAA,kBAAA3T,IAKA,IAJA0T,EAAA,gBAAAvd,IACAA,GACAA,EAEAE,EAAA,EAAAI,EAAAid,EAAA9c,OAAAP,IAAAI,EAAAJ,GAAA,EAIA,GAHAod,EAAAC,EAAArd,GAGA,CAGAsE,KAAA4Y,UAAAE,KACA9Y,KAAA4Y,UAAAE,OAEAE,GACAV,QAAAjT,EAGA,KAAAN,IAAA2L,OACA,CAAA,IAAA6H,EAAAxT,GAGA,KAAA,IAAAnJ,OACA,eAAAmJ,EAAA,iCAHAiU,GAAAjU,GAAA2L,EAAA3L,GAMA/E,KAAA4Y,UAAAE,GAAAhZ,KAAAkZ,QAIA,IAAAxd,GAAA,gBAAAA,KAAAsQ,MAAAgL,QAAAtb,GACA,IAAAsd,IAAAtd,GACAid,EAAAxL,UAAA5D,GAAArN,KAAAgE,KAAA8Y,EAAAtd,EAAAsd,GAAAzT,OAGA,CAAA,GAAA,kBAAA7J,GAkBA,KAAA,IAAAI,OAAA,mBAjBAod,IACAV,QAAA9c,EAGA,KAAAuJ,IAAA2L,OACA,CAAA,IAAA6H,EAAAxT,GAGA,KAAA,IAAAnJ,OACA,eAAAmJ,EAAA,iCAHAiU,GAAAjU,GAAA2L,EAAA3L,GAMA/E,KAAA6Y,aAAA/Y,KAAAkZ,GAOA,MAAAhZ,OAUAyY,EAAAxL,UAAAyE,KAAA,SAAAlW,EAAA6J,EAAAqL,GAEA,GAAA,kBAAArL,GACAqL,EAAAA,MACAA,EAAAgB,MAAA,EACA1R,KAAAqJ,GAAA7N,EAAA6J,EAAAqL,OAGA,CAAA,KAEAlV,GAAA,gBAAAA,IAAAsQ,MAAAgL,QAAAtb,KAEA,kBAAAA,GAQA,KAAA,IAAAI,OAAA,mBANAyJ,GAAAA,MACAA,EAAAqM,MAAA,EACA1R,KAAAqJ,GAAA7N,EAAA6J,GAMA,MAAArF,OA2CAyY,EAAAxL,UAAA4D,IAAA,SAAAoI,EAAAX,GACA,GAAA5c,GACAP,EACAiI,EACA+O,EACApN,EACAvJ,EACAsd,EACAC,EAAA,gBAAAE,IACAA,GACAA,CAEA,IAAA,IAAApN,UAAA5P,QAAA,kBAAA8c,GAAA,CACAT,EAAAzM,UAAA,EAGA,KAAA9G,IAAA/E,MAAA4Y,UAAA,CAEA,IADApd,KACAE,EAAA,EAAAP,EAAA6E,KAAA4Y,UAAA7T,GAAA9I,OAAAP,IAAAP,EAAAO,GAAA,EACAsE,KAAA4Y,UAAA7T,GAAArJ,GAAA4c,UAAAA,GACA9c,EAAAsE,KAAAE,KAAA4Y,UAAA7T,GAAArJ,GACAsE,MAAA4Y,UAAA7T,GAAAvJ,EAIA,IADAA,KACAE,EAAA,EAAAP,EAAA6E,KAAA6Y,aAAA5c,OAAAP,IAAAP,EAAAO,GAAA,EACAsE,KAAA6Y,aAAAnd,GAAA4c,UAAAA,GACA9c,EAAAsE,KAAAE,KAAA6Y,aAAAnd,GACAsE,MAAA6Y,aAAArd,MAGA,IAAA,IAAAqQ,UAAA5P,OACA,IAAAP,EAAA,EAAAP,EAAA4d,EAAA9c,OAAAP,IAAAP,EAAAO,GAAA,EAAA,CAEA,GADAod,EAAAC,EAAArd,GACAsE,KAAA4Y,UAAAE,GAAA,CAEA,IADAtd,KACA4H,EAAA,EAAA+O,EAAAnS,KAAA4Y,UAAAE,GAAA7c,OAAAmH,IAAA+O,EAAA/O,GAAA,EACApD,KAAA4Y,UAAAE,GAAA1V,GAAAkV,UAAAA,GACA9c,EAAAsE,KAAAE,KAAA4Y,UAAAE,GAAA1V,GAEApD,MAAA4Y,UAAAE,GAAAtd,EAGAwE,KAAA4Y,UAAAE,IAAA,IAAA9Y,KAAA4Y,UAAAE,GAAA7c,cACA+D,MAAA4Y,UAAAE,GAIA,MAAA9Y,OAgBAyY,EAAAxL,UAAAiM,UAAA,WACA,GAAAnU,EAEA/E,MAAA6Y,eACA,KAAA9T,IAAA/E,MAAA4Y,gBACA5Y,MAAA4Y,UAAA7T,EAEA,OAAA/E,OAmBAyY,EAAAxL,UAAAY,KAAA,SAAAoL,EAAArM,GACA,GAAAlR,GACAP,EACAiI,EACA+O,EACAgH,EACA3d,EACAsd,EACAM,EACAC,EACAC,EAEAP,EAAA,gBAAAE,IACAA,GACAA,CAGA,KAAAjZ,KAAA0Y,SACA,MAAA1Y,KAIA,KAFA4M,EAAAN,SAAAM,KAAAA,EAEAlR,EAAA,EAAAP,EAAA4d,EAAA9c,OAAAP,IAAAP,EAAAO,GAAA,EAIA,GAHA4d,EAAAP,EAAArd,GACA2d,GAAArZ,KAAA4Y,UAAAU,QAAA1L,OAAA5N,KAAA6Y,cAEAQ,EAAApd,OAAA,CAQA,IAPA6c,GACA1U,KAAAkV,EACA1M,KAAAA,MACA3L,OAAAjB,MAEAxE,KAEA4H,EAAA,EAAA+O,EAAAkH,EAAApd,OAAAmH,IAAA+O,EAAA/O,GAAA,GAMApD,KAAA4Y,UAAAU,IACAtZ,KAAA4Y,UAAAU,GAAAxW,QAAAuW,EAAAjW,KAAA,GAEApD,KAAA6Y,aAAA/V,QAAAuW,EAAAjW,KAAA,KAEAiW,EAAAjW,GAAAkV,QAAAtc,KACA,SAAAqd,GAAAjW,GAAAiW,EAAAjW,GAAAoV,MAAAxY,KACA8Y,GAMAO,EAAAjW,GAAAsO,MACAlW,EAAAsE,KAAAuZ,EAAAjW,IAKA,KAAA+V,EAAA,EAAAA,EAAA3d,EAAAS,OAAAkd,IACAnZ,KAAA4Y,UAAAU,GAAAxB,OAAAtc,EAAAsH,QAAAtH,EAAA2d,IAAA,GAMA,IAAAzd,EAAA,EAAAP,EAAA6E,KAAA2Y,UAAA1c,OAAAP,IAAAP,EAAAO,GAAA,EACA0d,EAAApZ,KAAA2Y,UAAAjd,GACA0d,EAAAvL,KAAAiB,MAAAsK,EAAAvN,UAGA,OAAA7L,OAaAyY,EAAAxL,UAAAmM,MAAA,WACA,GAAA/J,GAAArP,KACAoZ,EAAA,GAAAX,EAYA,OAVAW,GAAA/P,GAAA,cAAA,WACA,GAAAgG,EAAAsJ,UACA,IAAA,GAAAjd,GAAA,EAAAI,EAAAuT,EAAAsJ,UAAA1c,OAAAP,EAAAI,EAAAJ,IACA,GAAA2T,EAAAsJ,UAAAjd,KAAA0d,EAAA,CACA/J,EAAAsJ,UAAAb,OAAApc,EAAA,EACA,UAGAsE,KAAA2Y,UAAA7Y,KAAAsZ,GAEAA,GAmBAX,EAAAxL,UAAAsM,UAAA,SAAAT,GACA,GACA/T,GACArJ,EACAI,EAHAud,IAMA,IAAAP,EAgBA,IAHAO,EAAAhB,EAAArY,KAAA4Y,UAAAE,IAGApd,EAAA,EAAAI,EAAAkE,KAAA2Y,UAAA1c,OAAAP,EAAAI,EAAAJ,IACA2d,EAAAA,EAAAzL,OAAA5N,KAAA2Y,UAAAjd,GAAA6d,UAAAT,QAjBA,CACAO,EAAAhB,EAAArY,KAAA6Y,aAEA,KAAA9T,IAAA/E,MAAA4Y,UACAS,EAAAA,EAAAzL,OAAAyK,EAAArY,KAAA4Y,UAAA7T,IAGA,KAAArJ,EAAA,EAAAI,EAAAkE,KAAA2Y,UAAA1c,OAAAP,EAAAI,EAAAJ,IACA2d,EAAAA,EAAAzL,OAAA5N,KAAA2Y,UAAAjd,GAAA6d,aAYA,MAAAF,IAQAZ,EAAAxL,UAAA6C,KAAA,WAQA,GAPA9P,KAAA6N,KAAA,eAEA7N,KAAAkZ,YACAlZ,KAAA4Y,UAAA,KACA5Y,KAAA6Y,aAAA,KACA7Y,KAAA0Y,UAAA,EAEA1Y,KAAA2Y,UACA,IAAA,GAAAjd,GAAA,EAAAI,EAAAkE,KAAA2Y,UAAA1c,OAAAP,EAAAI,EAAAJ,IACAsE,KAAA2Y,UAAAjd,GAAAoU,MAEA9P,MAAA2Y,UAAA,MAUAF,EAAAxL,UAAAuM,QAAA,WAGA,MAFAxZ,MAAA0Y,UAAA,EAEA1Y,MASAyY,EAAAxL,UAAAwM,OAAA,WAGA,MAFAzZ,MAAA0Y,UAAA,EAEA1Y,MAOAyY,EAAAiB,QAAA,QAIA,mBAAA3d,IACA,mBAAAI,IAAAA,EAAAJ,UACAA,EAAAI,EAAAJ,QAAA0c,GACA1c,EAAA0c,QAAAA,GACA,kBAAAP,SAAAA,OAAAC,IACAD,OAAA,YAAA,WACA,MAAAO,KAGAzY,KAAAyY,QAAAA,IACAzc,KAAAgE,WXwqFM2Z,IAAI,SAASle,EAAQU,EAAOJ,IYvqGlC,SAAA2M,GACA,YA0DA,SAAA+D,GAAAmN,GAwDA,QAAAC,GAAAjT,EAAAxC,GACA,GAAA5I,GACAE,EACAI,EACAiJ,EACAwC,EACAuS,EACAC,EACAC,EACAC,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAA7c,IAAAqJ,EAEA,IAAA,WAAAwT,EAAA7c,IAAA6G,GAAA,CAGA,IAFA5I,EAAA4I,EAAA8D,QAAA,UAAA,IAAAC,MAAA,MACArM,EAAAN,EAAAS,OACAP,EAAA,EAAAA,EAAAI,EAAAJ,IACA,GAAA2e,EAAAvX,QAAAtH,EAAAE,IAAA,KAAAF,EAAAE,IAAA4e,IACA,KAAA,IAAA1e,OAAA,gBAQA,IANAwI,EAAAwE,MAAA,SACAqR,GAAA,GAEA7V,EAAA8D,QAAA,MAAA,IAAAU,MAAA,SACAsR,GAAA,GAEAA,GAAAD,EACA,KAAA,IAAAre,OAAA,gBAEA,KAAAF,IAAAF,GACA,GAAA8e,EAAA9e,EAAAE,MAEA,kBAAA4e,GAAA9e,EAAAE,IAAA0I,KACAkW,EAAA9e,EAAAE,IAAA0I,KAAApI,KAAAoe,EAAAxT,MAAA,GACAiT,EAAAjT,EAAA0T,EAAA9e,EAAAE,IAAA0I,OAEA,MAAA8V,IACA3S,EAAA,GAAA3L,OACA2L,EAAAoF,QAAA,eAAAvI,EAAA,kBACA5I,EAAAE,GAAA,KACA6L,EAAAgT,SAAAnW,EACAmD,EAAAnD,KAAA5I,EAAAE,GACA6L,EAAAtJ,MAAA2I,EACAW,GAEA,IAGA,OAAA,QAAAX,GAAA0F,SAAA1F,EACAsT,GAAAD,EASA,MARA1S,EAAA,GAAA3L,OACA2L,EAAAoF,QAAA,eAAAvI,EAAA,kBACA+V,EAAA,KACA5S,EAAAgT,SAAAnW,EACAmD,EAAAnD,KAAA+V,EACA5S,EAAAtJ,MAAA2I,EACAW,IAKAwS,GAAAve,EAAAsH,QAAA,KACAkX,GAAAxe,EAAAsH,QAAAqX,GACAD,IAAAH,GAAAC,IACAzS,EAAA,GAAA3L,OACA2L,EAAAoF,QAAA,eAAAvI,EAAA,mBACA4V,EAAAG,EAAA,KAAA,KACA5S,EAAAnD,KAAA4V,EAAAG,EAAA,IACA5S,EAAAgT,SAAAnW,EACAmD,EAAAtJ,MAAA2I,EACAW,GAEA2S,GAAAH,GAAAC,EAUA,MATAzS,EAAA,GAAA3L,OACA2L,EAAAoF,QAAA,eAAAvI,EAAA,kBACA+V,EAAA,KACA5S,EAAAgT,SAAAnW,EACAmD,EAAAnD,KAAA+V,EACA5S,EAAAtJ,MAAA2I,EACAW,IAMA,GAAA,WAAA6S,EAAA7c,IAAA6G,GAAA,CACA,GAAA,WAAA+V,EAMA,MALA5S,GAAA,GAAA3L,OACA2L,EAAAoF,QAAA,mCAAAwN,EAAA,KACA5S,EAAAgT,SAAAnW,EACAmD,EAAAnD,KAAA+V,EACA5S,EAAAtJ,MAAA2I,EACAW,CAGA,KAAAxC,IAAAX,GACA,GAAA0V,EAAAD,EAAAjT,EAAA7B,GAAAX,EAAAW,IAKA,MAJAwC,GAAAuS,EACAvS,EAAAb,KAAAa,EAAAb,MACA3B,GAAA6I,OAAArG,EAAAb,OACA3B,GACAwC,CAGA,KAAAxC,IAAA6B,GACA,GAAA0F,SAAAlI,EAAAW,GAKA,MAJAwC,GAAA,GAAA3L,OACA2L,EAAAoF,QAAA,mBAAA5H,EAAA,KACAwC,EAAAnD,KAAA+V,EACA5S,EAAAtJ,MAAA2I,EACAW,CAGA,OAAA,MAEA,GAAA,UAAA6S,EAAA7c,IAAA6G,GAAA,CACA,GAAA,IAAAA,EAAAnI,OACA,KAAA,IAAAL,OAAA,gBAEA,IAAA,UAAAue,EAMA,MALA5S,GAAA,GAAA3L,OACA2L,EAAAoF,QAAA,kCAAAwN,EAAA,KACA5S,EAAAgT,SAAAnW,EACAmD,EAAAnD,KAAA+V,EACA5S,EAAAtJ,MAAA2I,EACAW,CAIA,KADAzL,EAAA8K,EAAA3K,OACAP,EAAA,EAAAA,EAAAI,EAAAJ,IACA,GAAAoe,EAAAD,EAAAjT,EAAAlL,GAAA0I,EAAA,IAKA,MAJAmD,GAAAuS,EACAvS,EAAAb,KAAAa,EAAAb,MACAhL,GAAAkS,OAAArG,EAAAb,OACAhL,GACA6L,CAGA,OAAA,MAEA,KAAA,IAAA3L,OAAA,iBA9LA,GAAAwe,GAAApa,KAKAsa,IA4cA,IArNAta,KAAAwa,IAAA,SAAAC,EAAAC,GACA,GAAApf,GACAyJ,EACAvJ,EACAmf,EACAC,EACAxW,CAGA,IAAA,IAAAyH,UAAA5P,OAAA,CACA,GAAA,WAAA+D,KAAAzC,IAAAkd,GAKA,KAAA,IAAA7e,OAAA,0EAJAN,GAAAmf,EACAE,EAAArf,EAAAqf,GACAvW,EAAA9I,EAAA8I,SAIA,CAAA,GAAA,IAAAyH,UAAA5P,OASA,KAAA,IAAAL,OAAA,wDARA,IAAA,gBAAA6e,KAAAA,EACA,KAAA,IAAA7e,OAAA,2FAGA+e,GAAAF,EAEArW,EAAAsW,EAKA,GAAA,WAAA1a,KAAAzC,IAAAod,IAAA,IAAAA,EAAA1e,OACA,KAAA,IAAAL,OAAA,gCAEA,IAAA0Q,SAAAgO,EAAAK,IAAA,UAAAL,EAAAK,GACA,KAAA,IAAA/e,OAAA,aAAA+e,EAAA,oBAEA,KAAAN,EAAAvX,QAAA6X,GACA,KAAA,IAAA/e,OAAA,IAAA+e,EAAA,6BAEAL,GAAAK,GAAA,EAGAnf,GAAAF,OAAAuf,UACArf,EAAAsQ,MAAAgL,QAAAtb,GAAAA,GAAAA,GACAof,IACA,KAAA7V,IAAAvJ,GACA8Q,SAAAgO,EAAA9e,EAAAuJ,MACAuV,EAAA9e,EAAAuJ,IAAA,EACA6V,EAAApf,EAAAuJ,IAAA,EAGA,IAAA,aAAA/E,KAAAzC,IAAA6G,KAAApE,KAAA8a,QAAA1W,GACA,KAAA,IAAAxI,OAAA,mHAYA,IAPA0e,EAAAK,GAAArO,SAAAhR,GAEAqf,GAAAA,EACAvW,KAAAA,MAIAkI,SAAAhR,EACA,IAAAyJ,IAAAzJ,GACAgf,EAAAK,GAAA5V,GAAAzJ,EAAAyJ,EAGA,KAAAA,IAAA6V,GACA7V,IAAA4V,SACAL,GAAAvV,EAEA,OAAA/E,OAUAA,KAAAsB,IAAA,SAAAe,GACA,QAAAiY,EAAAjY,IAgBArC,KAAAzC,IAAA,SAAAqJ,GACA,MAAA,QAAAA,GAAA0F,SAAA1F,EACAgI,OAAAhI,GACAmU,EAAA/P,OAAAiC,UAAAuK,SAAAxb,KAAA4K,KAAA,UA8BA5G,KAAA0M,MAAA,SAAA9F,EAAAxC,EAAA4W,GACA,GAAAC,GAAApB,EAAAjT,EAAAxC,EACA,IAAA4W,GAAAC,EACA,KAAAA,EAEA,QAAAA,GA+BAjb,KAAA8a,QAAA,SAAA1W,GACA,GAAA5I,GACAuJ,EACArJ,CAEA,IAAA,WAAAsE,KAAAzC,IAAA6G,GAAA,CACA5I,EAAA4I,EAAA8D,QAAA,UAAA,IAAAC,MAAA,KACA,KAAAzM,IAAAF,GACA,GAAA6e,EAAAvX,QAAAtH,EAAAE,IAAA,KAAAF,EAAAE,IAAA4e,IACA,OAAA,CACA,QAAA,EAEA,GAAA,WAAAta,KAAAzC,IAAA6G,GAAA,CACA,IAAAW,IAAAX,GACA,IAAApE,KAAA8a,QAAA1W,EAAAW,IACA,OAAA,CACA,QAAA,EAEA,MAAA,UAAA/E,KAAAzC,IAAA6G,KACA,IAAAA,EAAAnI,QACA+D,KAAA8a,QAAA1W,EAAA,MAcApE,KAAAwa,IAAA,OAAA,SAAA5C,GACA,MAAA5X,MAAA8a,QAAAlD,IACArI,KAAAvP,OAGAA,KAAAwa,IAAA,YAAA,SAAA5C,GACA,OAAAA,KAAAA,YAAA5M,SAAA,gBAAA4M,MAIAgC,EAAAA,MACA,WAAA5Z,KAAAzC,IAAAqc,GACA,KAAAhe,OAAA,oBAEA,KAAA,GAAAmJ,KAAA6U,GACA5Z,KAAAwa,IAAAzV,EAAA6U,EAAA7U,IA/fA,GAAAgW,MAKAV,GAAA,MAEA,WACA,GAAAtV,GACAtD,EACAuW,GACA,YACA,UACA,SACA,SACA,WACA,QACA,OACA,SACA,SAIA,KAAAjT,IAAAiT,GACAvW,EAAAuW,EAAAjT,GACAsV,EAAAva,KAAA2B,EAAAwG,eACA8S,EAAA,WAAAtZ,EAAA,KAAAA,EAAAwG,gBAgfA,IAAAiP,GAAAzK,CACAA,GAAAzQ,KAAAkb,GAGAlM,OAAAC,eAAAiM,EAAA,WACAjZ,MAAA,UASA,mBAAAlC,IACA,mBAAAI,IAAAA,EAAAJ,UACAA,EAAAI,EAAAJ,QAAAmb,GACAnb,EAAAmb,MAAAA,GACA,kBAAAgB,SAAAA,OAAAC,IACAD,OAAA,cAAA,WACA,MAAAhB,KAGAlX,KAAAkX,MAAAA,GACAlX,WZusGMkb,IAAI,SAASzf,EAAQU,EAAOJ,Ga3wHlC,GAAA2J,EAGAA,GAAAA,GAAA,SAAAyV,GACA,YA+EA,SAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAArJ,EAEA,KAAAA,IAAA7C,GAAApC,UACAoC,EAAApC,UAAA+H,eAAA9C,KACAmJ,EAAAnJ,GAAA7C,EAAApC,UAAAiF,GAIA,OADAmJ,GAAArS,SAAAsS,aAAAA,EAAAC,WAAAA,GACAF,EASA,QAAAG,GAAAH,GAEA,OAAAA,EAAA3S,OAAA,IAAA,KACA2S,EAAA7G,WAAA,IAAA,KACA6G,EAAA9G,UAAA,IAAA,KACA8G,EAAAI,SAAA,IAAA,KACAJ,EAAA5G,OAAA,IAAA,IAaA,QAAAiH,GAAAL,EAAAM,EAAAC,GACA,IAAAvM,EAAAwM,SAAAR,GACA,KAAA,IAAAS,WAAA,uBAEA,IAAAxH,GAAAyH,EAAA7T,QAAAlM,KAAAwf,EAAAH,IAAAM,GAAA,IAAAK,EAAA,GAaA,OAZAJ,KAEAtH,EAAAyH,EAAA7T,QAAAlM,KAAAsY,EAAA,GAAAK,QAAA,IAAAiH,EAAA,KAAA,KAAA,KAIAP,EAFAA,EAAArS,UAAAqS,EAAArS,QAAAuS,SAEAH,EAAA/L,EAAAgM,EAAAhH,OAAAC,GACA+G,EAAArS,QAAAsS,aAAAD,EAAArS,QAAAsS,aAAAnK,MAAA,GAAA,MAGAiK,EAAA,GAAAzG,QAAA0G,EAAAhH,OAAAC,GAAA,MAAA,GAaA,QAAA2H,GAAAC,EAAAje,GACA,GAAAvC,GAAAwgB,EAAAjgB,MACA,IAAA6P,MAAAmB,UAAAgP,YACA,MAAAC,GAAAD,YAAAhe,EAEA,MAAAvC,KACA,GAAAwgB,EAAAxgB,KAAAuC,EACA,MAAAvC,EAGA,UAUA,QAAAygB,GAAAle,EAAAmG,GACA,MAAA4G,QAAAiC,UAAAuK,SAAAxb,KAAAiC,GAAAgK,gBAAA,WAAA7D,EAAA,IASA,QAAAgY,GAAAne,GASA,MARAA,GAAAA,MACA,QAAAA,GAAAA,EAAAoe,IACApe,GAAAqe,SAAA,EAAAC,eAAA,GACAJ,EAAAle,EAAA,YACAA,EAAAoR,EAAAuC,QAAA3T,EAAA,UAAA,SAAAkU,GACAnS,KAAAmS,IAAA,QAGAlU,EAaA,QAAAue,GAAApI,EAAAqI,EAAAjE,EAAAkE,GACA,GAEA9T,GACA1N,EAHAQ,EAAAihB,EAAA1gB,OACAgf,EAAA,IAIA2B,IAAA,CAEA,KACA,KAAAlhB,KAEA,GADAR,EAAAyhB,EAAAjhB,IACA,QAAAR,EAAAsd,OAAAtd,EAAAsd,QAAAA,MAAAtd,EAAA2hB,SAAA3hB,EAAA2hB,QAAA7gB,KAAA0gB,MACAxhB,EAAAkZ,QAAA0I,UAAAL,EACA7T,EAAAmU,EAAAC,KAAAhhB,KAAAd,EAAAkZ,QAAAA,GACAxL,GAAAA,EAAA7B,QAAA0V,GAAA,CACAxB,GACAgC,OAAA/hB,EAAAod,QAAAtc,KAAA0gB,EAAA9T,EAAA4P,GACA5P,MAAAA,EAEA,QAIA,MAAAsU,GACA,KAAAA,GACA,QACAN,GAAA,EAEA,MAAA3B,GAQA,QAAAkC,GAAA9T,GACAgG,EAAA+N,SAAAA,EAAA/T,EAAA,KAAA,OACAgU,EAAAd,cAAAlT,EAQA,QAAAiU,GAAAjU,GACAsL,OAAA1H,UAAA+P,MAAA3T,EAAA0T,EAAAhB,GAAAiB,KACArI,OAAA1H,UAAAsQ,MAAAlU,EAAA0T,EAAAhB,GAAAwB,KACA3O,OAAA3B,UAAArE,OAAAS,EAAA0T,EAAAhB,GAAAnT,MACAgG,OAAA3B,UAAA/E,SAAAmB,EAAA0T,EAAAhB,GAAA7T,QACA0G,OAAA3B,UAAA9E,OAAAkB,EAAA0T,EAAAhB,GAAA5T,MACAkV,EAAAf,QAAAjT,EAlPA,GAAAgG,GACA+N,EACA5C,EAGA6C,GACAf,SAAA,EACAC,eAAA,GAIAR,GACAiB,KAAArI,OAAA1H,UAAA+P,KACAO,KAAA5I,OAAA1H,UAAAsQ,KACA3U,MAAAgG,OAAA3B,UAAArE,MACAV,QAAA0G,OAAA3B,UAAA/E,QACAC,MAAAyG,OAAA3B,UAAA9E,OAIA4U,KAGAS,KAGAb,KAGAc,EAAA,UACAC,EAAA,QAGAC,GAEAC,UAAA,2IAEAne,QAAA,yFAIAoe,EAAA,mCAGA7B,EAAA,yBAGA8B,EAAA,+BAGAC,EAAAhC,EAAAiB,KAAAhhB,KAAA,OAAA,IAAA,KAAAmf,EAGA6C,EAAArJ,OAAA1H,UAAAwH,SAAA0G,EAGAyB,GAAA,EAGAqB,EAAA,OAAAD,EAAA,IAAA,GAypCA,OA97BA3O,GAAA,SAAA+E,EAAAE,GACA,GAAAjF,EAAAwM,SAAAzH,GAAA,CACA,GAAAE,IAAA6G,EACA,KAAA,IAAAW,WAAA,+DAEA,OAAAJ,GAAAtH,GAIA,GAAAwI,EACA,KAAA,IAAAhhB,OAAA,uEAGA,IAUAsiB,GACAtV,EACAuV,EAZAlB,KACAzE,EAAAiF,EACAW,GACAC,iBAAA,EACA/C,gBACAgD,QAAA,SAAAC,GACA,MAAAjK,GAAAxR,QAAAyb,QAGA9B,EAAA,CAOA,IAHArI,EAAAA,IAAA+G,EAAA,GAAAvM,OAAAwF,GACAE,EAAAA,IAAA6G,EAAA,GAAAvM,OAAA0F,GAEAyH,EAAAnT,MAAA5M,KAAAsY,EAAA0H,GACA,KAAA,IAAAwC,aAAA,4CAgBA,KAbApK,EAAA2H,EAAA7T,QAAAlM,KAAAoY,EAAA,kBAAA,SAAAqK,EAAAC,GACA,GAAA3C,EAAAwB,KAAAvhB,KAAA,OAAA0iB,GACA,KAAA,IAAAF,aAAA,yCAGA,OADAlK,GAAAyH,EAAA7T,QAAAlM,KAAAsY,EAAAoK,EAAA1C,EAAA,IACA,KAEA3M,EAAAuC,QAAA0C,EAAA,SAAA,SAAAnC,GACA,GAAA8L,EAAAnb,QAAAqP,EAAA,IAAA,EACA,KAAA,IAAAqM,aAAA,mCAAArM,EAAA,MAIAsK,EAAArI,EAAAnY,QAEAiiB,EAAA1B,EAAApI,EAAAqI,EAAAjE,EAAA4F,GACAF,GACAjB,EAAAnd,KAAAoe,EAAAjB,QACAR,GAAAyB,EAAAtV,MAAA,GAAA3M,QAAA,IAGA2M,EAAAmT,EAAAiB,KAAAhhB,KAAA2hB,EAAAnF,GAAApE,EAAAjD,MAAAsL,IACA7T,GACAqU,EAAAnd,KAAA8I,EAAA,IACA6T,GAAA7T,EAAA,GAAA3M,SAEAkiB,EAAA/J,EAAAuK,OAAAlC,GACA,MAAA0B,EACA3F,EAAAkF,EACA,MAAAS,IACA3F,EAAAiF,GAGAR,EAAAnd,KAAAqe,KACA1B,GAKA,OAAArB,GAAA,GAAAzG,QAAAsI,EAAAzd,KAAA,IAAAuc,EAAA7T,QAAAlM,KAAAsY,EAAA,YAAA,KACA8J,EAAAC,gBAAAD,EAAA9C,aAAA,OAQA8B,GACA/T,GAAA,SAAAgS,EAAA/C,EAAArO,GACAA,EAAAA,MACAoR,GACAsB,EAAA7c,MACAsU,QAAAsH,EAAAL,EAAA,KAAA2C,EAAA,IAAA,KACA1F,QAAAA,EACAE,MAAAvO,EAAAuO,OAAAiF,EACAZ,QAAA5S,EAAA4S,SAAA,OAKA5S,EAAA2U,cACAX,EAAAlC,EAAA7T,QAAAlM,KAAAiiB,EAAAhU,EAAA2U,YAAA5C,EAAA,MAGAnL,IAAA,WACA,KAAA,IAAAjV,OAAA,2DAkCAyT,EAAA+N,SAAAA,EAAAvM,IAeAxB,EAAAmO,MAAA,SAAApJ,EAAAE,GACA,GAAAjS,GAAA+R,EAAA,KAAAE,GAAA,GACA,OAAAkJ,GAAAnb,KAAAmb,EAAAnb,GAAAgN,EAAA+E,EAAAE,KAcAjF,EAAAwP,OAAA,SAAAC,GACA,MAAA/C,GAAA7T,QAAAlM,KAAA8iB,EAAA,2BAAA,SA+BAzP,EAAA2N,KAAA,SAAA8B,EAAAzD,EAAAoB,EAAAhI,GACA,GACA7L,GADAmW,EAAArD,EAAAL,EAAA,KAAA5G,GAAAuJ,EAAA,IAAA,IAAAvJ,KAAA,EAAA,IAAA,GAUA,OARAsK,GAAAjC,UAAAL,EAAAA,GAAA,EACA7T,EAAAmU,EAAAC,KAAAhhB,KAAA+iB,EAAAD,GACArK,GAAA7L,GAAAA,EAAA7B,QAAA0V,IACA7T,EAAA,MAEAyS,EAAA3S,SACA2S,EAAAyB,UAAAlU,EAAAmW,EAAAjC,UAAA,GAEAlU,GAuBAyG,EAAAuC,QAAA,SAAAkN,EAAAzD,EAAA2D,EAAAtC,GAIA,IAHA,GAEA9T,GAFA6T,EAAA,EACA/gB,KAEAkN,EAAAyG,EAAA2N,KAAA8B,EAAAzD,EAAAoB,IACAuC,EAAAhjB,KAAA0gB,EAAA9T,IAAAlN,EAAAojB,EAAAzD,GACAoB,EAAA7T,EAAA7B,OAAA6B,EAAA,GAAA3M,QAAA,EAEA,OAAAygB,IAeArN,EAAA4P,UAAA,SAAA5D,GACA,MAAAK,GAAAL,EAAA,MAyBAhM,EAAA6P,QAAA,SAAAjV,GACAA,EAAAmS,EAAAnS,IACAoT,EAAAf,SAAArS,EAAAqS,SACAgB,GAAA,IAEAD,EAAAd,eAAAtS,EAAAsS,eACAY,GAAA,IAeA9N,EAAA8P,YAAA,SAAAC,GACA,QAAA/B,EAAA+B,IAgBA/P,EAAAwM,SAAA,SAAA5d,GACA,MAAAke,GAAAle,EAAA,WA8BAoR,EAAAgQ,WAAA,SAAAP,EAAAxL,GACA,MAAA,SAAAgM,GAAAC,EAAAC,GACA,GAKA9jB,GALA8F,EAAA8R,EAAAkM,GAAAnE,MAAA/H,EAAAkM,IAAAnE,MAAA/H,EAAAkM,IACAC,KACAC,EAAA,SAAA9W,GACA6W,EAAA3f,KAAA0B,EAAAme,QAAA/W,EAAApH,EAAAme,UAAA,GAAA/W,EAAA,IAGA,KAAAlN,EAAA,EAAAA,EAAA6jB,EAAAtjB,SAAAP,EACA2T,EAAAuC,QAAA2N,EAAA7jB,GAAA8F,EAAA6Z,MAAAqE,EAEA,OAAAF,KAAAlM,EAAArX,OAAA,GAAAwjB,EAAAxjB,OAEAqjB,EAAAG,EAAAD,EAAA,GADAC,IAEAX,GAAA,IAiDAzP,EAAAnH,QAAA,SAAA4W,EAAA5Y,EAAA0Z,EAAApH,GACA,GAEAyC,GAFA4E,EAAAxQ,EAAAwM,SAAA3V,GACA4Z,EAAA5Z,CAeA,OAbA2Z,IACArH,IAAA2C,GAAAjV,EAAAwC,SACA8P,EAAA,OAGAsH,EAAApE,EAAAxV,EAAA,QAAAsS,EAAA,IAAA,GAAA,QAAAA,EAAA,GAAA,MACA,QAAAA,IACAsH,EAAA,GAAAnL,QAAAtF,EAAAwP,OAAAjQ,OAAA1I,IAAA,MAEA+U,EAAA8B,EAAA7U,QAAAlM,KAAA4S,OAAAkQ,GAAAgB,EAAAF,GACAC,GAAA3Z,EAAAwC,SACAxC,EAAA4W,UAAA,GAEA7B,GA4BA5L,EAAAlH,MAAA,SAAA2W,EAAAiB,EAAAC,GACA,MAAAjD,GAAA5U,MAAAnM,KAAA8iB,EAAAiB,EAAAC,IAwBA3Q,EAAAkO,KAAA,SAAAuB,EAAAzD,EAAAoB,EAAAhI,GAEA,QAAApF,EAAA2N,KAAA8B,EAAAzD,EAAAoB,EAAAhI,IAwBApF,EAAA4Q,UAAA,SAAAhW,GACAA,EAAAmS,EAAAnS,GACAoT,EAAAf,SAAArS,EAAAqS,SACAgB,GAAA,GAEAD,EAAAd,eAAAtS,EAAAsS,eACAY,GAAA,IAqBA9N,EAAA6Q,MAAA,SAAAC,EAAA7L,GACA,GAEA8L,GACA9E,EAcAlH,EACA1Y,EAlBA2kB,EAAA,6DACAC,EAAA,EAGAC,EAAA,SAAA3X,EAAA4X,EAAAb,GACA,GAAA3hB,GAAAsd,EAAAgF,EAAAF,EACA,IAAAI,GAEA,KADAF,EACAtiB,EACA,MAAA,MAAAA,EAAA,QAEA,IAAA2hB,EACA,MAAA,OAAAA,EAAAS,EAEA,OAAAxX,IAEAqU,IAGA,KAAAd,EAAAgE,EAAA,WAAAA,EAAAlkB,OACA,KAAA,IAAA6f,WAAA,oCAEA,KAAApgB,EAAA,EAAAA,EAAAykB,EAAAlkB,SAAAP,EACA0Y,EAAA+L,EAAAzkB,GACA2T,EAAAwM,SAAAzH,IACAgM,EAAAE,EACAhF,EAAAlH,EAAApL,SAAAoL,EAAApL,QAAAsS,iBAGA2B,EAAAnd,KAAAuP,EAAA+E,EAAAC,QAAAA,OAAAnM,QAAAmY,EAAAE,KAEAtD,EAAAnd,KAAAuP,EAAAwP,OAAAzK,GAGA,OAAA/E,GAAA4N,EAAAzd,KAAA,KAAA8U,IASAjF,EAAAqK,QAAA,QAcAqD,EAAAC,KAAA,SAAA8B,GACA,GAAAlW,GAAA5K,EAAA+gB,EAAA0B,EAAA/kB,CAKA,IAJAsE,KAAA0I,SACA+X,EAAAzgB,KAAA8c,WAEAlU,EAAAmT,EAAAiB,KAAAlO,MAAA9O,KAAA6L,WACA,CAiBA,IAdAkS,GAAAnV,EAAA3M,OAAA,GAAAggB,EAAArT,EAAA,SACAmW,EAAA,GAAApK,QAAA3U,KAAAqU,OAAA0H,EAAA7T,QAAAlM,KAAAwf,EAAAxb,MAAA,IAAA,KAGA+b,EAAA7T,QAAAlM,KAAA4S,OAAAkQ,GAAA3N,MAAAvI,EAAA7B,OAAAgY,EAAA,WACA,GAAArjB,EACA,KAAAA,EAAA,EAAAA,EAAAmQ,UAAA5P,OAAA,IAAAP,EACAmQ,UAAAnQ,KAAAyf,IACAvS,EAAAlN,GAAAyf,MAMAnb,KAAAgJ,SAAAhJ,KAAAgJ,QAAAsS,aACA,IAAA5f,EAAA,EAAAA,EAAAkN,EAAA3M,SAAAP,EACAsC,EAAAgC,KAAAgJ,QAAAsS,aAAA5f,EAAA,GACAsC,IACA4K,EAAA5K,GAAA4K,EAAAlN,GAKAsE,MAAA0I,SAAAE,EAAA,GAAA3M,QAAA+D,KAAA8c,UAAAlU,EAAA7B,QACA/G,KAAA8c,UAAAlU,EAAA7B,OAMA,MAHA/G,MAAA0I,SACA1I,KAAA8c,UAAA2D,GAEA7X,GAUAmU,EAAAQ,KAAA,SAAAuB,GAEA,QAAA/B,EAAAC,KAAAhhB,KAAAgE,KAAA8e,IAYA/B,EAAAnU,MAAA,SAAAyS,GACA,GAAAhM,EAAAwM,SAAAR,IAEA,GAAAA,EAAA3S,OAAA,CACA,GAAAuS,GAAAc,EAAAnT,MAAAkG,MAAA9O,KAAA6L,UAEA,OADAwP,GAAAyB,UAAA,EACA7B,OAJAI,GAAA,GAAA1G,QAAA0G,EAMA,OAAA0B,GAAAC,KAAAhhB,KAAAqf,EAAArb,OAgBA+c,EAAA7U,QAAA,SAAAhC,EAAA0Z,GACA,GAAAtE,GAAAL,EAAA6D,EAAA2B,EAAAZ,EAAAxQ,EAAAwM,SAAA3V,EA2FA,OA1FA2Z,IACA3Z,EAAA8C,UACAsS,EAAApV,EAAA8C,QAAAsS,cAEApV,EAAAwC,SACA+X,EAAAva,EAAA4W,YAGA5W,GAAA,GAEAiW,EAAAyD,EAAA,YACA3E,EAAAc,EAAA7T,QAAAlM,KAAA4S,OAAA5O,MAAAkG,EAAA,WACA,GAAAxK,GAAAglB,EAAA7U,SACA,IAAAyP,EAIA,IAFAoF,EAAA,GAAA,GAAA9R,QAAA8R,EAAA,IAEAhlB,EAAA,EAAAA,EAAA4f,EAAArf,SAAAP,EACA4f,EAAA5f,KACAglB,EAAA,GAAApF,EAAA5f,IAAAglB,EAAAhlB,EAAA,GASA,OAHAmkB,IAAA3Z,EAAAwC,SACAxC,EAAA4W,UAAA4D,EAAAA,EAAAzkB,OAAA,GAAAykB,EAAA,GAAAzkB,QAEA2jB,EAAA9Q,MAAA,KAAA4R,MAGA5B,EAAAlQ,OAAA5O,MACAib,EAAAc,EAAA7T,QAAAlM,KAAA8iB,EAAA5Y,EAAA,WACA,GAAAwa,GAAA7U,SACA,OAAAkQ,GAAA7T,QAAAlM,KAAA4S,OAAAgR,GAAA/B,EAAA,SAAAY,EAAAC,EAAAiC,GACA,GAAAxlB,EAEA,IAAAujB,EAAA,CAOA,GADAvjB,GAAAujB,EACAvjB,GAAAulB,EAAAzkB,OAAA,EACA,MAAAykB,GAAAvlB,IAAA,EAGA,IADAA,EAAAmgB,EAAAW,EAAAX,EAAAoD,MACAvjB,EAAA,EACA,KAAA,IAAAqjB,aAAA,oCAAAC,EAEA,OAAAiC,GAAAvlB,EAAA,IAAA,GAGA,GAAA,MAAAwlB,EAAA,MAAA,GACA,IAAA,MAAAA,GAAA,KAAAA,EAAA,MAAAD,GAAA,EACA,IAAA,MAAAC,EAAA,MAAAD,GAAAA,EAAAzkB,OAAA,GAAAkV,MAAA,EAAAuP,EAAAA,EAAAzkB,OAAA,GACA,IAAA,MAAA0kB,EAAA,MAAAD,GAAAA,EAAAzkB,OAAA,GAAAkV,MAAAuP,EAAAA,EAAAzkB,OAAA,GAAAykB,EAAA,GAAAzkB,OAgBA,IAdA0kB,GAAAA,GAcA/N,MAAA+N,GAAA,CACA,GAAAA,EAAAD,EAAAzkB,OAAA,EACA,KAAA,IAAAuiB,aAAA,oCAAAC,EAEA,OAAAiC,GAAAC,IAAA,GAEA,KAAA,IAAAnC,aAAA,iBAAAC,QAIAoB,IACA3Z,EAAAwC,OACAxC,EAAA4W,UAAA,EAEA5W,EAAA4W,UAAA2D,GAGAxF,GAWA8B,EAAA5U,MAAA,SAAA4X,EAAAC,GACA,IAAA3Q,EAAAwM,SAAAkE,GACA,MAAAhE,GAAA5T,MAAA2G,MAAA9O,KAAA6L,UAEA,IAIA+U,GAJA9B,EAAAlQ,OAAA5O,MACAygB,EAAAV,EAAAjD,UACAG,KACA4D,EAAA,CA4BA,OAnBAb,IAAAA,IAAA7E,KAAA6E,KAAA,EACA3Q,EAAAuC,QAAAkN,EAAAiB,EAAA,SAAAnX,GACAA,EAAA7B,MAAA6B,EAAA,GAAA3M,OAAA4kB,IACA5D,EAAAnd,KAAAgf,EAAA3N,MAAA0P,EAAAjY,EAAA7B,QACA6B,EAAA3M,OAAA,GAAA2M,EAAA7B,MAAA+X,EAAA7iB,QACA6P,MAAAmB,UAAAnN,KAAAgP,MAAAmO,EAAArU,EAAAuI,MAAA,IAEAyP,EAAAhY,EAAA,GAAA3M,OACA4kB,EAAAjY,EAAA7B,MAAA6Z,KAGAC,IAAA/B,EAAA7iB,OACA8f,EAAAwB,KAAAvhB,KAAA+jB,EAAA,MAAAa,GACA3D,EAAAnd,KAAA,IAGAmd,EAAAnd,KAAAgf,EAAA3N,MAAA0P,IAEAd,EAAAjD,UAAA2D,EACAxD,EAAAhhB,OAAA+jB,EAAA/C,EAAA9L,MAAA,EAAA6O,GAAA/C,GAQAzC,EAAA4C,EAAA/T,GAMAmR,EAAA,mFACA,SAAA5R,EAAA4P,GAEA,GAAA,MAAA5P,EAAA,IAAA4P,IAAAiF,EACA,MAAA7U,GAAA,EAEA,MAAA,IAAA4V,aAAA,kBAAA5V,EAAA,MAEA4P,MAAA,QAMAgC,EAAA,WACA,SAAA5R,GAGA,MAAAA,GAAA,GAAA,WAAA,WAMA4R,EAAA,oBACA,SAAA5R,GAEA,MAAAmT,GAAAwB,KAAAvhB,KAAA8hB,EAAAlV,EAAAkY,MAAA3P,MAAAvI,EAAA7B,MAAA6B,EAAA,GAAA3M,SAAA,GAAA,SAMAue,EAAA,gBACA,SAAA5R,GACA,GAAA7B,GAAA6L,MAAAhK,EAAA,IAAAqT,EAAAjc,KAAAsb,aAAA1S,EAAA,IAAA,GAAAA,EAAA,GACAmY,EAAAnY,EAAA7B,MAAA6B,EAAA,GAAA3M,MACA,KAAA8K,GAAAA,EAAA/G,KAAAsb,aAAArf,OACA,KAAA,IAAAuiB,aAAA,oCAAA5V,EAAA,GAGA,OAAA,KAAA7B,GACAga,IAAAnY,EAAAkY,MAAA7kB,QAAA2W,MAAAhK,EAAAkY,MAAAnC,OAAAoC,IAAA,GAAA,UAMAvG,EAAA,eACA,SAAA5R,GAEA,MAAAmT,GAAAwB,KAAAvhB,KAAA8hB,EAAAlV,EAAAkY,MAAA3P,MAAAvI,EAAA7B,MAAA6B,EAAA,GAAA3M,SAAA,GAAA,SAGA4gB,QAAA,WACA,MAAA7c,MAAAse,QAAA,MAEAM,YAAA,MAKApE,EAAA,KACA,WACA,MAAA,aAGAqC,QAAA,WACA,MAAA7c,MAAAse,QAAA,MAEAM,YAAA,MASApE,EAAA,mBACA,SAAA5R,GACA,IAAAgK,MAAAhK,EAAA,IAEA,KAAA,IAAA4V,aAAA,qCAAA5V,EAAA,GAIA,OAFA5I,MAAAsb,aAAAxb,KAAA8I,EAAA,IACA5I,KAAAqe,iBAAA,EACA,MAQA7D,EAAA,UACA,SAAA5R,EAAA4P,GACA,KAAAA,IAAAiF,GAAA,SAAAF,KAAA3U,EAAA,MAAAA,EAAA,IAAA5I,KAAAsb,aAAArf,SACA,MAAA2M,EAAA,GACA,KAAA,IAAA4V,aAAA,8DAAA5V,EAAA,GAEA,OAAAA,GAAA,KAEA4P,MAAA,QAKAgC,EAAA,WACA,WACA,MAAAxa,MAAAse,QAAA,KACA,OAEAte,KAAAsb,aAAAxb,KAAA,MACA,OAEA8e,YAAA,MAOA,mBAAA7iB,KACAA,EAAA2J,QAAA2J,GAGAA,KAqBA,SAAA3J,GACA,YASA,SAAAsb,GAAAhjB,GACA,MAAAA,GAAAkK,QAAA,UAAA,IAAAD,cAIA,QAAAgZ,GAAAnC,GACA,MAAAA,GAAA5W,QAAA,SAAA,SAIA,QAAAgZ,GAAApC,GACA,KAAAA,EAAA7iB,OAAA,GACA6iB,EAAA,IAAAA,CAEA,OAAAA,GAIA,QAAAqC,GAAAC,GACA,MAAAC,UAAAD,EAAA,IAIA,QAAAA,GAAAD,GACA,MAAAE,UAAAF,EAAA,IAAA3J,SAAA,IAIA,QAAA8J,GAAAC,GACA,GAEAC,GAFAvE,KACAwE,IAkBA,OAhBA/b,GAAAkM,QAAA2P,EAAA,6BAAA,SAAApP,GACAqP,EAAAL,EAAAhP,EAAA,IACAqP,EAAAC,EAAA,IACAxE,EAAAnd,KAAA,MAAAohB,EAAAE,EAAAK,EAAA,KACAD,EAAAC,EAAA,GACAxE,EAAAnd,KAAA,OAAAohB,EAAAE,EAAAI,EAAA,MAGAC,EAAAN,EAAAhP,EAAA,IAAAA,EAAA,MAEAsP,EAAA,QACAxE,EAAAnd,KAAA,MAAAohB,EAAAE,EAAAK,EAAA,KACAA,EAAA,OACAxE,EAAAnd,KAAA,aAGAmd,EAAAzd,KAAA,IAIA,QAAAkiB,GAAAlgB,GACA,MAAAkT,GAAA,IAAAlT,KAAAkT,EAAA,IAAAlT,GAAA8f,EAAA5M,EAAAlT,KA5DA,GAAAkT,KAmEAhP,GAAAwZ,QAAA,iBAeAxZ,EAAAic,kBAAA,SAAAC,EAAAC,GACA,GAAA3P,EACA,KAAAxM,EAAAyZ,YAAA,iBACA,KAAA,IAAAvjB,OAAA,iEAEA,IAAAgmB,EACA,IAAA1P,IAAA0P,GACAA,EAAA5M,eAAA9C,KACAwC,EAAAsM,EAAA9O,IAAA+O,EAAAW,EAAA1P,IAIA,IAAA2P,EACA,IAAA3P,IAAA2P,GACAA,EAAA7M,eAAA9C,KACAwC,EAAAsM,EAAAa,EAAA3P,KAAAwC,EAAAsM,EAAA9O,MASAxM,EAAAic,mBACAG,EAAA,80FAEAA,EAAA,WAKApc,EAAA0X,SACA,yBACA,SAAAxU,EAAA4P,GACA,GAAAuJ,GAAA,MAAAnZ,EAAA,IAAAA,EAAA,GAAA,IAAA,GACApH,EAAAwf,EAAApY,EAAA,GAEA,IAAA,MAAAA,EAAA,IAAAA,EAAA,GACA,KAAA,IAAA4V,aAAA,gCAEA,KAAA9J,EAAAM,eAAAxT,GACA,KAAA,IAAAgd,aAAA,uCAAA5V,EAAA,GAEA,OAAA,UAAA4P,EACAuJ,EAAAL,EAAAlgB,GAAAkT,EAAAlT,GACA,IAAAugB,EAAArN,EAAAlT,GAAA,MAEAgX,MAAA,SAGA9S,GAkBA,SAAAA,GACA,YAEA,KAAAA,EAAAic,kBACA,KAAA,IAAAK,gBAAA,wDAGAtc,GAAAwZ,QAAA,iBAEAxZ,EAAAic,mBAEAM,GAAA,ukFACAC,GAAA,4/EACAC,GAAA,0DACAC,GAAA,kSACAC,GAAA;AACAC,EAAA,q3CACAC,GAAA,qzCACAC,GAAA,0wBACAC,GAAA,sCACAC,EAAA,8iBACAC,GAAA,8TACAC,GAAA,6DACAC,GAAA,qOACAC,EAAA,+3BACAC,GAAA,gFACAC,GAAA,mSACAC,GAAA,+RACAC,GAAA,mDACAC,GAAA,2CACAC,GAAA,wCACAC,GAAA,k1BACAC,EAAA,w+BACAC,GAAA,0VACAC,GAAA,6FACAC,GAAA,qLACAC,GAAA,sxBACAC,EAAA,gDACAC,GAAA,wCACAC,GAAA,OACAC,GAAA,OACAC,EAAA,giFACAC,GAAA,qBACAC,GAAA,yEACAC,GAAA,YACAC,GAAA,YACAC,GAAA,y/EAGAnC,GAAA,mBACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,kBACAC,GAAA,eACAC,EAAA,OACAC,GAAA,kBACAC,GAAA,eACAC,GAAA,iBACAC,EAAA,SACAC,GAAA,iBACAC,GAAA,gBACAC,GAAA,eACAC,EAAA,cACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,oBACAC,GAAA,sBACAC,GAAA,oBACAC,GAAA,wBACAC,GAAA,oBACAC,EAAA,SACAC,GAAA,cACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,eACAC,EAAA,YACAC,GAAA,kBACAC,GAAA,iBACAC,GAAA,sBACAC,EAAA,QACAC,GAAA,UACAC,GAAA,SACAC,GAAA,cACAC,GAAA,YACAC,GAAA,gBAGA1e,GAkBA,SAAAA,GACA,YAEA,KAAAA,EAAAic,kBACA,KAAA,IAAAK,gBAAA,qDAGAtc,GAAAwZ,QAAA,iBAEAxZ,EAAAic,mBACA0C,OAAA,sLACAC,SAAA,+CACAC,SAAA,qBACAC,MAAA,YACAC,MAAA,qBACAC,QAAA,oHACAC,SAAA,6BACAC,QAAA,YACAC,SAAA,oBACAC,MAAA,YACAC,oBAAA,qBACAC,KAAA,uCACAC,SAAA,YACAC,OAAA,upBACAC,OAAA,8BACAC,SAAA,mDACAC,WAAA,gDACAC,SAAA,yRACAC,SAAA,uDACAC,WAAA,qBACAC,MAAA,kPACAC,SAAA,kHACAC,SAAA,+HACAC,IAAA,4FACAC,OAAA,gIACAC,QAAA,YACAC,OAAA,6EACAC,SAAA,qBACAC,UAAA,sJACAC,SAAA,6BACAC,QAAA,yHACAC,SAAA,kEACAC,SAAA,YACAC,MAAA,uCACAC,IAAA,oIACAC,MAAA,kPACAC,OAAA,8BACAC,MAAA,2CACAC,KAAA,YACAC,UAAA,gGACAC,QAAA,gBACAC,aAAA,8BACAC,UAAA,mDACAC,QAAA,qBACAC,YAAA,sCACAC,IAAA,YACAC,MAAA,YACAC,SAAA,YACAC,MAAA,4HACAC,SAAA,YACAC,OAAA,gBACAC,MAAA,qBACAC,UAAA,qBACAC,WAAA,qBACAC,QAAA,sFACAC,UAAA,qBACAC,aAAA,YACAC,OAAA,8BACAC,QAAA,qBACAC,SAAA,6BACAC,OAAA,qBACAC,SAAA,gDACAC,SAAA,qBACAC,MAAA,gIACAC,OAAA,+HACAC,OAAA,YACAC,KAAA,qBACAC,QAAA,iEACAC,SAAA,wBACAC,IAAA,YACAC,GAAA,wBAGAjjB,GAkBA,SAAAA,GACA,YAEA,KAAAA,EAAAic,kBACA,KAAA,IAAAK,gBAAA,oDAGAtc,GAAAwZ,QAAA,iBAEAxZ,EAAAic,mBACAiH,cAAA,YACAC,qBAAA,YACAC,mBAAA,YACAC,mBAAA,YACAC,iBAAA,YACAC,2BAAA,YACAC,8BAAA,YACAC,mBAAA,YACAC,WAAA,YACAC,sBAAA,YACAC,WAAA,YACAC,SAAA,YACAC,SAAA,YACAC,SAAA,YACAC,oBAAA,YACAC,SAAA,YACAC,MAAA,YACAC,YAAA,YACAC,UAAA,YACAC,oBAAA,YACAC,aAAA,YACAC,UAAA,YACAC,WAAA,YACAC,WAAA,YACAC,QAAA,YACAC,QAAA,YACAC,SAAA,YACAC,UAAA,YACAC,YAAA,YACAC,UAAA,YACAC,OAAA,YACAC,MAAA,YACAC,UAAA,YACAC,UAAA,YACAC,WAAA,YACAC,cAAA,YACAC,WAAA,YACAC,sBAAA,YACAC,WAAA,YACAC,wCAAA,YACAC,QAAA,YACAC,QAAA,YACAC,UAAA,YACAC,UAAA,YACAC,QAAA,YACAC,WAAA,YACAC,QAAA,YACAC,YAAA,YACAC,iDAAA,YACAC,QAAA,YACAC,SAAA,YACAC,cAAA,YACAC,gBAAA,YACAC,WAAA,YACAC,WAAA,YACAC,WAAA,YACAC,YAAA,YACAC,QAAA,YACAC,SAAA,YACAC,WAAA,YACAC,uBAAA,YACAC,mBAAA,YACAC,sBAAA,YACAC,iCAAA,YACAC,yCAAA,YACAC,4BAAA,YACAC,iBAAA,YACAC,sBAAA,YACAC,8BAAA,YACAC,mBAAA,YACAC,0CAAA,YACAC,qBAAA,YACAC,eAAA,YACAC,SAAA,YACAC,yBAAA,YACAC,0BAAA,YACAC,mBAAA,YACAC,gCAAA,YACAC,yBAAA,YACAC,cAAA,YACAC,iBAAA,YACAC,mBAAA,YACAC,wBAAA,YACAC,WAAA,YACAC,uCAAA,YACAC,wBAAA,YACAC,mBAAA,YACAC,wBAAA,YACAC,uCAAA,YACAC,sCAAA,YACAC,mCAAA,YACAC,aAAA,YACAC,mBAAA,YACAC,SAAA,YACAC,sBAAA,YACAC,WAAA,YACAC,oBAAA,YACAC,sBAAA,YACAC,2BAAA,YACAC,0BAAA,YACAC,kBAAA,YACAC,qCAAA,YACAC,8BAAA,YACAC,WAAA,YACAC,WAAA,YACAC,WAAA,YACAC,4BAAA,YACAC,SAAA,YACAC,oBAAA,YACAC,cAAA,YACAC,+BAAA,YACAC,kCAAA,YACAC,oBAAA,YACAC,qCAAA,YACAC,0BAAA,YACAC,yBAAA,YACAC,eAAA,YACAC,cAAA,YACAC,OAAA,YACAC,MAAA,YACAC,sBAAA,YACAC,QAAA,YACAC,wBAAA,YACAC,mBAAA,YACAC,eAAA,YACAC,4BAAA,YACAC,WAAA,YACAC,aAAA,YACAC,sBAAA,YACAC,WAAA,YACAC,SAAA,YACAC,yBAAA,YACAC,WAAA,YACAC,OAAA,YACAC,qBAAA,YACAC,WAAA,YACAC,0BAAA,YACAC,sBAAA,YACAC,eAAA,YACAC,mBAAA,YACAC,yBAAA,YACAC,kBAAA,YACAC,8BAAA,YACAC,iBAAA,YACAC,mBAAA,YACAC,+BAAA,YACAC,gCAAA,YACAC,8BAAA,YACAC,sBAAA,YACAC,iBAAA,YACAC,uBAAA,YACAC,0BAAA,YACAC,sBAAA,YACAC,8BAAA,YACAC,gCAAA,YACAC,WAAA,eAGA7sB,GAkBA,SAAAA,GACA,YAEA,KAAAA,EAAAic,kBACA,KAAA,IAAAK,gBAAA,wDAGAtc,GAAAwZ,QAAA,iBAEAxZ,EAAAic,mBACA6Q,WAAA,g0GACAC,UAAA;AACAC,UAAA,snFACAC,YAAA,6DACAC,wBAAA,oBACAC,6BAAA,6FAEAC,IAAA,YACAC,MAAA,YAGAC,SAAA,giGAGAttB,GAWA,SAAAA,GACA,YAMA,SAAAvG,GAAAlB,EAAAD,EAAAwjB,EAAAyR,GACA,OAAAh1B,MAAAA,EAAAD,KAAAA,EAAAwjB,MAAAA,EAAAyR,IAAAA,GAoDAvtB,EAAAwtB,eAAA,SAAApU,EAAApM,EAAAI,EAAAwB,EAAArK,GACAqK,EAAAA,GAAA,GACArK,EAAAA,KACA,IAUAkpB,GACAC,EACAC,EACAC,EACAC,EAdA7qB,EAAA4L,EAAAxR,QAAA,QACA2R,EAAAH,EAAAxR,QAAA,QACA0wB,EAAAlf,EAAApM,QAAA,KAAA,IACAurB,EAAAxpB,EAAAwpB,WACAC,EAAAzpB,EAAA0pB,WACA1W,KACA2W,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,CASA,IAHArhB,EAAAhN,EAAAgN,EAAA8gB,GACA1gB,EAAApN,EAAAoN,EAAA0gB,GAEAC,EAAA,CACA,GAAAA,EAAAx3B,OAAA,EACA,KAAA,IAAAuiB,aAAA,2CAEAiV,GAAA/tB,EAAAmZ,OAAA4U,GAEAF,EAAA,GAAA5e,QACA,MAAA8e,EAAA,kBAAA/tB,EAAAwa,OAAAxN,EAAAI,IAAAuB,OAAA,MAAAof,EAAA,QACAnf,EAAApM,QAAA,UAAA,KAIA,OAAA,CA0BA,GAvBAurB,IACAK,IAAApuB,EAAAsX,KAAA8B,EAAAyU,EAAAO,EAAA,YAAA,KAAA,GAAA73B,QAEAo3B,EAAA3tB,EAAAsX,KAAA8B,EAAApM,EAAAohB,GACAR,EAAA5tB,EAAAsX,KAAA8B,EAAAhM,EAAAghB,GAEAT,GAAAC,IACAD,EAAAtsB,OAAAusB,EAAAvsB,MACAusB,EAAA,KAEAD,EAAA,MAaAA,GAAAC,EACAO,GAAAR,GAAAC,GAAAvsB,MACA+sB,EAAAD,GAAAR,GAAAC,GAAA,GAAAr3B,WACA,KAAA23B,EACA,KAEA,IAAAnf,IAAAmf,GAAAC,EAAAE,EACA,KAEA,IAAAV,EACAO,IACAT,EAAAU,EACAT,EAAAU,KAEAF,MACA,CAAA,IAAAN,IAAAM,EAwBA,KAAA,IAAAh4B,OAAA,wCAvBA,OAAAg4B,IACAF,GACAA,EAAA,IAAAP,EAAAY,GACA9W,EAAAnd,KAAAX,EAAAu0B,EAAA,GAAA5U,EAAA3N,MAAA4iB,EAAAZ,GAAAY,EAAAZ,IAEAO,EAAA,IACAzW,EAAAnd,KAAAX,EAAAu0B,EAAA,GAAA5U,EAAA3N,MAAAgiB,EAAAC,GAAAD,EAAAC,IAEAM,EAAA,IACAzW,EAAAnd,KAAAX,EAAAu0B,EAAA,GAAA5U,EAAA3N,MAAAiiB,EAAAS,GAAAT,EAAAS,IAEAH,EAAA,IACAzW,EAAAnd,KAAAX,EAAAu0B,EAAA,GAAA5U,EAAA3N,MAAA0iB,EAAAC,GAAAD,EAAAC,KAGA7W,EAAAnd,KAAAgf,EAAA3N,MAAAiiB,EAAAS,IAEAE,EAAAD,GACAprB,GACA,MAOAmrB,IAAAC,KACAA,EAQA,MAJAprB,KAAA+L,GAAAif,GAAAA,EAAA,IAAA5U,EAAA7iB,OAAA83B,GACA9W,EAAAnd,KAAAX,EAAAu0B,EAAA,GAAA5U,EAAA3N,MAAA4iB,GAAAA,EAAAjV,EAAA7iB,SAGAghB,IAGAvX,GAYA,SAAAA,GACA,YAWA,SAAAsuB,GAAA5f,GACA,GAAA6f,GAAA,kBACAC,EAAA,iBACA,OAAAA,GAAA3W,KAAAnJ,EAAAlM,QAAA,YAAA,KACAkM,EAAAlM,QAAA+rB,EAAA,IAAA/rB,QAAAgsB,EAAA,IAEA9f,EASA,QAAA+f,GAAAl2B,GACA,MAAAyH,GAAAmW,SAAA5d,GACAA,EAAA+K,UAAA/K,EAAA+K,QAAAuS,SAAAtd,EAAAyH,EAAAzH,EAAAoW,QACA3O,EAAAzH,GA3BA,GAAAm2B,GAAA,6DACA/T,EAAA3a,EAAAwa,OAAA,gCAAAkU,GAAA,IAqDA1uB,GAAA2uB,MAAA,SAAAjgB,EAAAkgB,EAAAhgB,GACA,GAGAigB,GAGAC,EACAC,EACAviB,EARAwiB,EAAA,kBAAA1X,KAAA5I,GACAxH,KACA+nB,EAAA,EAEAC,EAAA,EACAC,GAAA,EAMAH,KACApgB,EAAAA,GAAA,GACAogB,EAAA,GAAAxsB,QAAA,KAAA,SAAAqW,GACAjK,GAAAA,EAAAxR,QAAAyb,MAAA,GAAAA,IAIA,KAAArM,IAAAoiB,GACAA,EAAAtf,eAAA9C,KAKAuiB,EAAAN,EAAAG,EAAApiB,IAGAtF,EAAAsF,IAAAkC,QAAA4f,EAAAS,EAAApgB,QAAAygB,MAAAL,EAAAzrB,QAAAsS,kBAiDA,OA3CAlH,GAAA+f,EAAA/f,GACAogB,EAAApgB,EAAApL,QAAAsS,iBACAlH,EAAAA,EAAAC,OAAAnM,QAAAmY,EAAA,SAAA5B,EAAAC,EAAAiC,EAAAoU,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAzW,GAAAiC,CACA,IAAAwU,EAAA,CACA,IAAAvoB,EAAAoI,eAAAmgB,GACA,KAAA,IAAAnT,gBAAA,sBAAAvD,EAYA,OAVAC,IACAuW,EAAAT,EAAAI,GACAC,IAAAD,KAAAD,EAGAO,EAAA,OAAAD,GAAAE,GAAA,KAEAD,EAAA,MAEAX,EAAAI,EACAO,EAAAtoB,EAAAuoB,GAAA/gB,QAAAlM,QAAAksB,EAAA,SAAAxrB,EAAA4X,EAAAb,GACA,GAAAa,GAGA,GAFAyU,EAAAroB,EAAAuoB,GAAAL,MAAAH,EAAAJ,KACAI,EACAM,EACA,MAAA,MAAAA,EAAA,QAEA,IAAAtV,EACA,MAAA,OAAAA,EAAA4U,EAEA,OAAA3rB,KACA,IAEA,GAAAmsB,GAGA,GAFAE,EAAAT,EAAAI,GACAC,IAAAD,KAAAD,EACAM,EACA,MAAA,MAAAA,EAAA,QAEA,IAAAD,EACA,MAAA,KAAAH,GAAAG,EAEA,OAAAvW,KAGA/Y,EAAA0O,EAAAE,KAGA5O,GAmBA,SAAAA,GACA,YAQA,SAAA0vB,GAAA55B,EAAA6J,GACA,IAAA,GAAA6M,KAAA7M,GACAA,EAAA2P,eAAA9C,KACA1W,EAAA0W,GAAA7M,EAAA6M,IAMAkjB,EAAA1vB,EAAAuH,WAYA6B,MAAA,SAAA4N,EAAAgE,GACA,MAAA1gB,MAAAud,KAAAmD,EAAA,KAaA1kB,KAAA,SAAA0gB,EAAAoC,GACA,MAAA9e,MAAAud,KAAAuB,IAaAlN,QAAA,SAAAkN,EAAAE,EAAAtC,GACA,MAAAhX,GAAAkM,QAAAkN,EAAA9e,KAAAgf,EAAAtC,IAWAuC,UAAA,WACA,MAAAvZ,GAAAuZ,UAAAjf,OAWAq1B,MAAA,SAAAvW,EAAArC,EAAAhI,GACA,MAAA/O,GAAAsX,KAAA8B,EAAA9e,KAAAyc,EAAAhI,IAUA6gB,MAAA,SAAAxW,EAAArC,EAAAhI,GACA,MAAA/O,GAAA6X,KAAAuB,EAAA9e,KAAAyc,EAAAhI,OAKA/O,abiyHW","file":"search.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Config, State, initFilter, loadFilter, orderBy, saveFilter, setFilter, updateFacetTermFilter, updateQueryFilter;\n\nState = require('./state');\n\nConfig = require('./config');\n\ninitFilter = function() {\n  return State.select('filter').set('facets', Config.facets);\n};\n\nsetFilter = function(filter) {\n  return State.set('filter', filter);\n};\n\nloadFilter = function() {\n  return setFilter(JSON.parse(sessionStorage.getItem('filter')));\n};\n\nsaveFilter = function() {\n  return sessionStorage.setItem('filter', JSON.stringify(State.select('filter').get()));\n};\n\nupdateQueryFilter = function(query) {\n  return State.select('filter', 'query').edit(query);\n};\n\nupdateFacetTermFilter = function(facetName, term, state) {\n  var selectedTerms;\n  selectedTerms = State.select('filter', 'facets', _.findIndex(State.select('filter', 'facets').get(), {\n    name: facetName\n  }), 'selectedTerms');\n  return selectedTerms.set(term, state);\n};\n\norderBy = function(value) {\n  return State.select('filter').set('orderBy', value);\n};\n\nmodule.exports = {\n  initFilter: initFilter,\n  setFilter: setFilter,\n  loadFilter: loadFilter,\n  saveFilter: saveFilter,\n  updateQueryFilter: updateQueryFilter,\n  updateFacetTermFilter: updateFacetTermFilter,\n  orderBy: orderBy\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2FjdGlvbnMuY2pzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHJlZXRlci9naXRfcmVwb3NpdG9yaWVzL0RvdWdsYXNDb25uZWN0LWViaXNjL2Fzc2V0cy9zY3JpcHRzL3NlYXJjaC9hY3Rpb25zLmNqc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVEsT0FBQSxDQUFRLFNBQVI7O0FBQ1IsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOztBQUVULFVBQUEsR0FBYSxTQUFBO1NBQ1QsS0FBSyxDQUFDLE1BQU4sQ0FBYSxRQUFiLENBQXNCLENBQUMsR0FBdkIsQ0FBMkIsUUFBM0IsRUFBcUMsTUFBTSxDQUFDLE1BQTVDO0FBRFM7O0FBR2IsU0FBQSxHQUFZLFNBQUMsTUFBRDtTQUNSLEtBQUssQ0FBQyxHQUFOLENBQVUsUUFBVixFQUFvQixNQUFwQjtBQURROztBQUdaLFVBQUEsR0FBYSxTQUFBO1NBQ1QsU0FBQSxDQUFVLElBQUksQ0FBQyxLQUFMLENBQVcsY0FBYyxDQUFDLE9BQWYsQ0FBdUIsUUFBdkIsQ0FBWCxDQUFWO0FBRFM7O0FBR2IsVUFBQSxHQUFhLFNBQUE7U0FDVCxjQUFjLENBQUMsT0FBZixDQUF1QixRQUF2QixFQUFpQyxJQUFJLENBQUMsU0FBTCxDQUFlLEtBQUssQ0FBQyxNQUFOLENBQWEsUUFBYixDQUFzQixDQUFDLEdBQXZCLENBQUEsQ0FBZixDQUFqQztBQURTOztBQUdiLGlCQUFBLEdBQW9CLFNBQUMsS0FBRDtTQUNoQixLQUFLLENBQUMsTUFBTixDQUFhLFFBQWIsRUFBdUIsT0FBdkIsQ0FBK0IsQ0FBQyxJQUFoQyxDQUFxQyxLQUFyQztBQURnQjs7QUFHcEIscUJBQUEsR0FBd0IsU0FBQyxTQUFELEVBQVksSUFBWixFQUFrQixLQUFsQjtBQUNwQixNQUFBO0VBQUEsYUFBQSxHQUFnQixLQUFLLENBQUMsTUFBTixDQUFhLFFBQWIsRUFBdUIsUUFBdkIsRUFBaUMsQ0FBQyxDQUFDLFNBQUYsQ0FBWSxLQUFLLENBQUMsTUFBTixDQUFhLFFBQWIsRUFBdUIsUUFBdkIsQ0FBZ0MsQ0FBQyxHQUFqQyxDQUFBLENBQVosRUFBb0Q7SUFBQyxJQUFBLEVBQU0sU0FBUDtHQUFwRCxDQUFqQyxFQUF5RyxlQUF6RztTQUNoQixhQUFhLENBQUMsR0FBZCxDQUFrQixJQUFsQixFQUF3QixLQUF4QjtBQUZvQjs7QUFJeEIsT0FBQSxHQUFVLFNBQUMsS0FBRDtTQUNOLEtBQUssQ0FBQyxNQUFOLENBQWEsUUFBYixDQUFzQixDQUFDLEdBQXZCLENBQTJCLFNBQTNCLEVBQXNDLEtBQXRDO0FBRE07O0FBR1YsTUFBTSxDQUFDLE9BQVAsR0FDSTtFQUFBLFVBQUEsRUFBWSxVQUFaO0VBQ0EsU0FBQSxFQUFXLFNBRFg7RUFFQSxVQUFBLEVBQVksVUFGWjtFQUdBLFVBQUEsRUFBWSxVQUhaO0VBSUEsaUJBQUEsRUFBbUIsaUJBSm5CO0VBS0EscUJBQUEsRUFBdUIscUJBTHZCO0VBTUEsT0FBQSxFQUFTLE9BTlQifQ==\n","var Actions, Celllines, Config, State, Table;\n\nConfig = require('../config');\n\nState = require('../state');\n\nTable = require('./table');\n\nActions = require('../actions');\n\nCelllines = React.createClass({displayName: \"Celllines\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    celllines: ['celllines'],\n    orderBy: ['filter', 'orderBy']\n  },\n  render: function() {\n    var buildCell, buildRow, row, rows;\n    buildCell = function(name, row) {\n      var value;\n      value = row._source[name];\n      if (name === 'name') {\n        return React.createElement(\"a\", {\n          \"href\": \"./\" + value + \"/\"\n        }, value);\n      } else if (name === 'donor_disease') {\n        return value.join(', ');\n      } else if (name === 'genetic_modification_disease') {\n        if (value === '/') {\n          return React.createElement(\"span\", {\n            \"class\": \"comment\"\n          }, value);\n        } else {\n          return value.join(', ');\n        }\n      } else {\n        return value;\n      }\n    };\n    buildRow = function(row, cols) {\n      var col, i, len, results;\n      results = [];\n      for (i = 0, len = cols.length; i < len; i++) {\n        col = cols[i];\n        results.push(buildCell(col.name, row));\n      }\n      return results;\n    };\n    rows = (function() {\n      var i, len, ref, results;\n      ref = this.state.cursors.celllines;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        row = ref[i];\n        results.push(buildRow(row, Config.fields));\n      }\n      return results;\n    }).call(this);\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(Table, {\n      \"cols\": Config.fields,\n      \"rows\": rows,\n      \"orderBy\": this.state.cursors.orderBy,\n      \"onOrderBy\": Actions.orderBy\n    }) : void 0));\n  }\n});\n\nmodule.exports = Celllines;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvY2VsbGxpbmVzLmNqc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvc3RyZWV0ZXIvZ2l0X3JlcG9zaXRvcmllcy9Eb3VnbGFzQ29ubmVjdC1lYmlzYy9hc3NldHMvc2NyaXB0cy9zZWFyY2gvY29tcG9uZW50cy9jZWxsbGluZXMuY2pzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsV0FBUjs7QUFDVCxLQUFBLEdBQVEsT0FBQSxDQUFRLFVBQVI7O0FBQ1IsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLE9BQUEsR0FBVSxPQUFBLENBQVEsWUFBUjs7QUFFVixTQUFBLEdBQVksS0FBSyxDQUFDLFdBQU4sQ0FFUjtFQUFBLE1BQUEsRUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFQLENBQVI7RUFFQSxPQUFBLEVBQ0k7SUFBQSxRQUFBLEVBQVUsQ0FBQyxVQUFELENBQVY7SUFDQSxTQUFBLEVBQVcsQ0FBQyxXQUFELENBRFg7SUFFQSxPQUFBLEVBQVMsQ0FBQyxRQUFELEVBQVcsU0FBWCxDQUZUO0dBSEo7RUFPQSxNQUFBLEVBQVEsU0FBQTtBQUVKLFFBQUE7SUFBQSxTQUFBLEdBQVksU0FBQyxJQUFELEVBQU8sR0FBUDtBQUNSLFVBQUE7TUFBQSxLQUFBLEdBQVEsR0FBRyxDQUFDLE9BQVEsQ0FBQSxJQUFBO01BRXBCLElBQUcsSUFBQSxLQUFRLE1BQVg7ZUFDSSxLQUFLLENBQUMsYUFBTixDQUFvQixHQUFwQixFQUF5QjtVQUFDLE1BQUEsRUFBUSxJQUFBLEdBQUssS0FBTCxHQUFXLEdBQXBCO1NBQXpCLEVBQW1ELEtBQW5ELEVBREo7T0FBQSxNQUVLLElBQUcsSUFBQSxLQUFRLGVBQVg7ZUFDRCxLQUFLLENBQUMsSUFBTixDQUFXLElBQVgsRUFEQztPQUFBLE1BRUEsSUFBRyxJQUFBLEtBQVEsOEJBQVg7UUFDRCxJQUFHLEtBQUEsS0FBUyxHQUFaO2lCQUNJLEtBQUssQ0FBQyxhQUFOLENBQW9CLE1BQXBCLEVBQTRCO1lBQUMsT0FBQSxFQUFTLFNBQVY7V0FBNUIsRUFBbUQsS0FBbkQsRUFESjtTQUFBLE1BQUE7aUJBR0ksS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYLEVBSEo7U0FEQztPQUFBLE1BQUE7ZUFNRCxNQU5DOztJQVBHO0lBZVosUUFBQSxHQUFXLFNBQUMsR0FBRCxFQUFNLElBQU47QUFDUCxVQUFBO0FBQUM7V0FBQSxzQ0FBQTs7cUJBQUEsU0FBQSxDQUFVLEdBQUcsQ0FBQyxJQUFkLEVBQW9CLEdBQXBCO0FBQUE7O0lBRE07SUFHWCxJQUFBOztBQUFRO0FBQUE7V0FBQSxxQ0FBQTs7cUJBQUEsUUFBQSxDQUFTLEdBQVQsRUFBYyxNQUFNLENBQUMsTUFBckI7QUFBQTs7O1dBRVIsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkIsSUFBM0IsRUFDQSxDQUNPLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQWxCLEdBQ0ksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkI7TUFBQyxNQUFBLEVBQVMsTUFBTSxDQUFDLE1BQWpCO01BQTBCLE1BQUEsRUFBUyxJQUFuQztNQUEwQyxTQUFBLEVBQVksSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBckU7TUFBK0UsV0FBQSxFQUFjLE9BQU8sQ0FBQyxPQUFyRztLQUEzQixDQURKLEdBQUEsTUFESixDQURBO0VBdEJJLENBUFI7Q0FGUTs7QUFzQ1osTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==\n","var DropdownMultiSelect, Item, classNames;\n\nclassNames = require('classnames');\n\nDropdownMultiSelect = React.createClass({displayName: \"DropdownMultiSelect\",\n  getInitialState: function() {\n    return {\n      showMenu: false\n    };\n  },\n  showMenu: function() {\n    this.setState({\n      showMenu: true\n    });\n    return window.addEventListener('click', this.hideMenu, true);\n  },\n  hideMenu: function(e) {\n    if (e.target === $('.dropdown-button', this.getDOMNode())[0]) {\n      e.stopPropagation();\n      this.setState({\n        showMenu: false\n      });\n      return window.removeEventListener('click', this.hideMenu, true);\n    } else if (!$(this.getDOMNode()).has($(e.target)).length) {\n      this.setState({\n        showMenu: false\n      });\n      return window.removeEventListener('click', this.hideMenu, true);\n    }\n  },\n  componentWillUnmount: function() {\n    return window.removeEventListener('click', this.hideMenu, true);\n  },\n  render: function() {\n    var item;\n    return React.createElement(\"div\", {\n      \"className\": classNames({\n        'dropdown': true,\n        'two-cols': this.props.items.length >= 15,\n        'has-selection': this.props.hasSelection\n      })\n    }, React.createElement(\"div\", {\n      \"className\": \"dropdown-container\"\n    }, React.createElement(\"div\", {\n      \"className\": \"dropdown-button\",\n      \"onClick\": this.showMenu\n    }, this.props.label), React.createElement(\"ul\", {\n      \"className\": classNames({\n        'dropdown-menu': true,\n        'checkbox': true,\n        'show-menu': this.state.showMenu\n      })\n    }, (function() {\n      var i, len, ref, results;\n      ref = this.props.items;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        item = ref[i];\n        results.push(React.createElement(Item, {\n          \"key\": item.name,\n          \"item\": item,\n          \"action\": this.props.action\n        }));\n      }\n      return results;\n    }).call(this))));\n  }\n});\n\nItem = React.createClass({displayName: \"Item\",\n  handleOnClick: function() {\n    return this.props.action(this.props.item.name, !this.props.item.selected);\n  },\n  render: function() {\n    return React.createElement(\"li\", {\n      \"onClick\": this.handleOnClick,\n      \"className\": classNames({\n        selected: this.props.item.selected !== void 0 && this.props.item.selected || false\n      })\n    }, React.createElement(\"div\", {\n      \"className\": \"checkbox\"\n    }), React.createElement(\"label\", null, this.props.item.label));\n  }\n});\n\nmodule.exports = DropdownMultiSelect;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvZHJvcGRvd24tbXVsdGktc2VsZWN0LmNqc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvc3RyZWV0ZXIvZ2l0X3JlcG9zaXRvcmllcy9Eb3VnbGFzQ29ubmVjdC1lYmlzYy9hc3NldHMvc2NyaXB0cy9zZWFyY2gvY29tcG9uZW50cy9kcm9wZG93bi1tdWx0aS1zZWxlY3QuY2pzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLFVBQUEsR0FBYSxPQUFBLENBQVEsWUFBUjs7QUFFYixtQkFBQSxHQUFzQixLQUFLLENBQUMsV0FBTixDQUVsQjtFQUFBLGVBQUEsRUFBaUIsU0FBQTtXQUNiO01BQUEsUUFBQSxFQUFVLEtBQVY7O0VBRGEsQ0FBakI7RUFHQSxRQUFBLEVBQVUsU0FBQTtJQUNOLElBQUMsQ0FBQSxRQUFELENBQVU7TUFBQSxRQUFBLEVBQVUsSUFBVjtLQUFWO1dBQ0EsTUFBTSxDQUFDLGdCQUFQLENBQXdCLE9BQXhCLEVBQWlDLElBQUMsQ0FBQSxRQUFsQyxFQUE0QyxJQUE1QztFQUZNLENBSFY7RUFPQSxRQUFBLEVBQVUsU0FBQyxDQUFEO0lBRU4sSUFBRyxDQUFDLENBQUMsTUFBRixLQUFZLENBQUEsQ0FBRSxrQkFBRixFQUFzQixJQUFDLENBQUEsVUFBRCxDQUFBLENBQXRCLENBQXFDLENBQUEsQ0FBQSxDQUFwRDtNQUVJLENBQUMsQ0FBQyxlQUFGLENBQUE7TUFFQSxJQUFDLENBQUEsUUFBRCxDQUFVO1FBQUEsUUFBQSxFQUFVLEtBQVY7T0FBVjthQUNBLE1BQU0sQ0FBQyxtQkFBUCxDQUEyQixPQUEzQixFQUFvQyxJQUFDLENBQUEsUUFBckMsRUFBK0MsSUFBL0MsRUFMSjtLQUFBLE1BT0ssSUFBRyxDQUFJLENBQUEsQ0FBRSxJQUFDLENBQUEs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\n","var Actions, DropdownMultiSelect, Facets, ReactCSSTransitionGroup, SelectedTerms, State,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\n\nState = require('../state');\n\nActions = require('../actions');\n\nDropdownMultiSelect = require('./dropdown-multi-select');\n\nFacets = React.createClass({displayName: \"Facets\",\n  mixins: [State.mixin],\n  cursors: {\n    facets: ['filter', 'facets'],\n    facetTerms: ['facetTerms']\n  },\n  render: function() {\n    var facet, i, selectedTerms;\n    return React.createElement(\"span\", null, React.createElement(\"span\", null, (_.size(this.state.cursors.facetTerms) ? React.createElement(\"div\", {\n      \"className\": \"filter-group\"\n    }, (function() {\n      var j, len, ref, results;\n      ref = this.state.cursors.facets;\n      results = [];\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        facet = ref[i];\n        selectedTerms = this.getSelectedTerms(facet.name);\n        results.push(React.createElement(\"div\", {\n          \"key\": facet.name,\n          \"className\": \"filter\"\n        }, React.createElement(DropdownMultiSelect, {\n          \"name\": facet.name,\n          \"label\": facet.label,\n          \"hasSelection\": selectedTerms.length > 0,\n          \"items\": this.getFacetTerms(facet.name, selectedTerms),\n          \"action\": _.partial(Actions.updateFacetTermFilter, facet.name)\n        }), React.createElement(SelectedTerms, {\n          \"facet\": facet,\n          \"terms\": selectedTerms\n        })));\n      }\n      return results;\n    }).call(this)) : void 0)), React.createElement(\"span\", null, (_.size(this.state.cursors.facetTerms) && indexOf.call((function() {\n      var j, len, ref, results;\n      ref = this.state.cursors.facets;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        facet = ref[j];\n        results.push(this.getSelectedTerms(facet.name).length > 0);\n      }\n      return results;\n    }).call(this), true) >= 0 ? React.createElement(\"div\", {\n      \"className\": \"clear-all-filters\",\n      \"onClick\": this.clearFilters\n    }, React.createElement(\"span\", {\n      \"className\": \"glyphicon glyphicon-remove-sign\"\n    }), \" Clear all filters\") : void 0)));\n  },\n  clearFilters: function() {\n    return Actions.initFilter();\n  },\n  getSelectedTerms: function(facet) {\n    var key, terms, value;\n    terms = this.state.cursors.facets[_.findIndex(this.state.cursors.facets, {\n      name: facet\n    })].selectedTerms;\n    return ((function() {\n      var results;\n      results = [];\n      for (key in terms) {\n        value = terms[key];\n        if (value === true) {\n          results.push(key);\n        }\n      }\n      return results;\n    })()).sort();\n  },\n  getFacetTerms: function(facet, selectedTerms) {\n    var j, len, ref, results, term, terms;\n    if ('buckets' in this.state.cursors.facetTerms[facet]) {\n      terms = this.state.cursors.facetTerms[facet].buckets;\n    } else {\n      terms = this.state.cursors.facetTerms[facet]['facet'].buckets;\n    }\n    results = [];\n    for (j = 0, len = terms.length; j < len; j++) {\n      term = terms[j];\n      results.push({\n        name: term.key,\n        label: term.key + \" (\" + term.doc_count + \")\",\n        selected: (ref = term.key, indexOf.call(selectedTerms, ref) >= 0)\n      });\n    }\n    return results;\n  }\n});\n\nSelectedTerms = React.createClass({displayName: \"SelectedTerms\",\n  render: function() {\n    var term;\n    return React.createElement(\"ul\", {\n      \"className\": \"selected-terms\"\n    }, React.createElement(ReactCSSTransitionGroup, {\n      \"transitionName\": \"transition-opacity\"\n    }, (function() {\n      var j, len, ref, results;\n      ref = this.props.terms;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        term = ref[j];\n        results.push(React.createElement(\"li\", {\n          \"key\": term,\n          \"className\": \"term\"\n        }, React.createElement(\"span\", {\n          \"className\": \"remove glyphicon glyphicon-remove-sign\",\n          \"onClick\": this.createHandleOnRemove(term)\n        }), \" \", term));\n      }\n      return results;\n    }).call(this)));\n  },\n  createHandleOnRemove: function(term) {\n    return (function(_this) {\n      return function() {\n        return Actions.updateFacetTermFilter(_this.props.facet.name, term, false);\n      };\n    })(this);\n  }\n});\n\nmodule.exports = Facets;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvZmlsdGVyLmNqc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvc3RyZWV0ZXIvZ2l0X3JlcG9zaXRvcmllcy9Eb3VnbGFzQ29ubmVjdC1lYmlzYy9hc3NldHMvc2NyaXB0cy9zZWFyY2gvY29tcG9uZW50cy9maWx0ZXIuY2pzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLG1GQUFBO0VBQUE7O0FBQUEsdUJBQUEsR0FBMEIsS0FBSyxDQUFDLE1BQU0sQ0FBQzs7QUFFdkMsS0FBQSxHQUFRLE9BQUEsQ0FBUSxVQUFSOztBQUNSLE9BQUEsR0FBVSxPQUFBLENBQVEsWUFBUjs7QUFDVixtQkFBQSxHQUFzQixPQUFBLENBQVEseUJBQVI7O0FBRXRCLE1BQUEsR0FBUyxLQUFLLENBQUMsV0FBTixDQUVMO0VBQUEsTUFBQSxFQUFRLENBQUMsS0FBSyxDQUFDLEtBQVAsQ0FBUjtFQUVBLE9BQUEsRUFDSTtJQUFBLE1BQUEsRUFBUSxDQUFDLFFBQUQsRUFBVyxRQUFYLENBQVI7SUFDQSxVQUFBLEVBQVksQ0FBQyxZQUFELENBRFo7R0FISjtFQU1BLE1BQUEsRUFBUSxTQUFBO0FBRUosUUFBQTtXQUFBLEtBQUssQ0FBQyxhQUFOLENBQW9CLE1BQXBCLEVBQTRCLElBQTVCLEVBQ0ksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsTUFBcEIsRUFBNEIsSUFBNUIsRUFDQSxDQUNPLENBQUMsQ0FBQyxJQUFGLENBQU8sSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBdEIsQ0FBSCxHQUNJLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQXBCLEVBQTJCO01BQUMsV0FBQSxFQUFhLGNBQWQ7S0FBM0I7O0FBRUk7QUFBQTtXQUFBLDZDQUFBOztRQUNJLGFBQUEsR0FBZ0IsSUFBQyxDQUFBLGdCQUFELENBQWtCLEtBQUssQ0FBQyxJQUF4QjtxQkFDaEIsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkI7VUFBQyxLQUFBLEVBQVEsS0FBSyxDQUFDLElBQWY7VUFBc0IsV0FBQSxFQUFhLFFBQW5DO1NBQTNCLEVBQ0ksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsbUJBQXBCLEVBQXlDO1VBQUMsTUFBQSxFQUFTLEtBQUssQ0FBQyxJQUFoQjtVQUF1QixPQUFBLEVBQVUsS0FBSyxDQUFDLEtBQXZDO1VBQStDLGNBQUEsRUFBaUIsYUFBYSxDQUFDLE1BQWQsR0FBdUIsQ0FBdkY7VUFBMkYsT0FBQSxFQUFVLElBQUMsQ0FBQSxhQUFELENBQWUsS0FBSyxDQUFDLElBQXJCLEVBQTJCLGFBQTNCLENBQXJHO1VBQWlKLFFBQUEsRUFBVyxDQUFDLENBQUMsT0FBRixDQUFVLE9BQU8sQ0FBQyxxQkFBbEIsRUFBeUMsS0FBSyxDQUFDLElBQS9DLENBQTVKO1NBQXpDLENBREosRUFFSSxLQUFLLENBQUMsYUFBTixDQUFvQixhQUFwQixFQUFtQztVQUFDLE9BQUEsRUFBVSxLQUFYO1VBQW1CLE9BQUEsRUFBVSxhQUE3QjtTQUFuQyxDQUZKO0FBRko7O2lCQUZKLENBREosR0FBQSxNQURKLENBREEsQ0FESixFQWdCSSxLQUFLLENBQUMsYUFBTixDQUFvQixNQUFwQixFQUE0QixJQUE1QixFQUNBLENBQ08sQ0FBQyxDQUFDLElBQUYsQ0FBTyxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUF0QixDQUFBLElBQXNDOztBQUFTO0FBQUE7V0FBQSxxQ0FBQTs7cUJBQUEsSUFBQyxDQUFBLGdCQUFELENBQWtCLEtBQUssQ0FBQyxJQUF4QixDQUE2QixDQUFDLE1BQTlCLEdBQXVDO0FBQXZDOztpQkFBVCxFQUFBLElBQUEsTUFBekMsR0FDSSxLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEyQjtNQUFDLFdBQUEsRUFBYSxtQkFBZDtNQUFtQyxTQUFBLEVBQVksSUFBQyxDQUFBLFlBQWhEO0tBQTNCLEVBQTJGLEtBQUssQ0FBQyxhQUFOLENBQW9CLE1BQXBCLEVBQTRCO01BQUMsV0FBQSxFQUFhLGlDQUFkO0tBQTVCLENBQTNGLEVBQTBLLG9CQUExSyxDQURKLEdBQUEsTUFESixDQURBLENBaEJKO0VBRkksQ0FOUjtFQWdDQSxZQUFBLEVBQWMsU0FBQTtXQUNWLE9BQU8sQ0FBQyxVQUFSLENBQUE7RUFEVSxDQWhDZDtFQW1DQSxnQkFBQSxFQUFrQixTQUFDLEtBQUQ7QUFDZCxRQUFBO0lBQUEsS0FBQSxHQUFRLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU8sQ0FBQSxDQUFDLENBQUMsU0FBRixDQUFZLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQTNCLEVBQW1DO01BQUMsSUFBQSxFQUFNLEtBQVA7S0FBbkMsQ0FBQSxDQUFrRCxDQUFDO1dBQ2pGOztBQUFDO1dBQUEsWUFBQTs7WUFBaUMsS0FBQSxLQUFTO3VCQUExQzs7QUFBQTs7UUFBRCxDQUFnRCxDQUFDLElBQWpELENBQUE7RUFGYyxDQW5DbEI7RUF1Q0EsYUFBQSxFQUFlLFNBQUMsS0FBRCxFQUFRLGFBQVI7QUFJWCxRQUFBO0lBQUEsSUFBRyxTQUFBLElBQWEsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVyxDQUFBLEtBQUEsQ0FBMUM7TUFDSSxLQUFBLEdBQVEsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVyxDQUFBLEtBQUEsQ0FBTSxDQUFDLFFBRDdDO0tBQUEsTUFBQTtNQUdJLEtBQUEsR0FBUSxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFXLENBQUEsS0FBQSxDQUFPLENBQUEsT0FBQSxDQUFRLENBQUMsUUFIdEQ7O0FBS0M7U0FBQSx1Q0FBQTs7bUJBQUE7UUFBQyxJQUFBLEVBQU0sSUFBSSxDQUFDLEdBQVo7UUFBaUIsS0FBQSxFQUFVLElBQUksQ0FBQyxHQUFOLEdBQVUsSUFBVixHQUFjLElBQUksQ0FBQyxTQUFuQixHQUE2QixHQUF2RDtRQUEyRCxRQUFBLEVBQVUsT0FBQSxJQUFJLENBQUMsR0FBTCxFQUFBLGFBQVksYUFBWixFQUFBLEdBQUEsTUFBQSxDQUFyRTs7QUFBQTs7RUFUVSxDQXZDZjtDQUZLOztBQW9EVCxhQUFBLEdBQWdCLEtBQUssQ0FBQyxXQUFOLENBRVo7RUFBQSxNQUFBLEVBQVEsU0FBQTtBQUNKLFFBQUE7V0FBQSxLQUFLLENBQUMsYUFBTixDQUFvQixJQUFwQixFQUEwQjtNQUFDLFdBQUEsRUFBYSxnQkFBZDtLQUExQixFQUNJLEtBQUssQ0FBQyxhQUFOLENBQW9CLHVCQUFwQixFQUE2QztNQUFDLGdCQUFBLEVBQWtCLG9CQUFuQjtLQUE3Qzs7QUFDRTtBQUFBO1dBQUEscUNBQUE7O3FCQUFBLEtBQUssQ0FBQyxhQUFOLENBQW9CLElBQXBCLEVBQTBCO1VBQUMsS0FBQSxFQUFRLElBQVQ7VUFBZ0IsV0FBQSxFQUFhLE1BQTdCO1NBQTFCLEVBQWdFLEtBQUssQ0FBQyxhQUFOLENBQW9CLE1BQXBCLEVBQTRCO1VBQUMsV0FBQSxFQUFhLHdDQUFkO1VBQXdELFNBQUEsRUFBWSxJQUFDLENBQUEsb0JBQUQsQ0FBc0IsSUFBdEIsQ0FBcEU7U0FBNUIsQ0FBaEUsRUFBZ00sR0FBaE0sRUFBc00sSUFBdE07QUFBQTs7aUJBREYsQ0FESjtFQURJLENBQVI7RUFPQSxvQkFBQSxFQUFzQixTQUFDLElBQUQ7V0FDbEIsQ0FBQSxTQUFBLEtBQUE7YUFBQSxTQUFBO2VBQ0ksT0FBTyxDQUFDLHFCQUFSLENBQThCLEtBQUMsQ0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLElBQTNDLEVBQWlELElBQWpELEVBQXVELEtBQXZEO01BREo7SUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBO0VBRGtCLENBUHRCO0NBRlk7O0FBYWhCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=\n","var Actions, Input, Search, State;\n\nState = require('../state');\n\nActions = require('../actions');\n\nSearch = React.createClass({displayName: \"Search\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    query: ['filter', 'query']\n  },\n  render: function() {\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(Input, {\n      \"query\": this.state.cursors.query\n    }) : void 0));\n  }\n});\n\nInput = React.createClass({displayName: \"Input\",\n  getInitialState: function() {\n    return {\n      query: this.props.query\n    };\n  },\n  render: function() {\n    return React.createElement(\"input\", {\n      \"type\": \"text\",\n      \"placeholder\": \"Search cell lines\",\n      \"value\": this.state.query,\n      \"onChange\": this.handleChange\n    });\n  },\n  handleChange: function(e) {\n    this.setState({\n      query: e.target.value\n    });\n    return Actions.updateQueryFilter(e.target.value);\n  }\n});\n\nmodule.exports = Search;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvc2VhcmNoLmNqc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvc3RyZWV0ZXIvZ2l0X3JlcG9zaXRvcmllcy9Eb3VnbGFzQ29ubmVjdC1lYmlzYy9hc3NldHMvc2NyaXB0cy9zZWFyY2gvY29tcG9uZW50cy9zZWFyY2guY2pzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsVUFBUjs7QUFDUixPQUFBLEdBQVUsT0FBQSxDQUFRLFlBQVI7O0FBRVYsTUFBQSxHQUFTLEtBQUssQ0FBQyxXQUFOLENBRUw7RUFBQSxNQUFBLEVBQVEsQ0FBQyxLQUFLLENBQUMsS0FBUCxDQUFSO0VBRUEsT0FBQSxFQUNJO0lBQUEsUUFBQSxFQUFVLENBQUMsVUFBRCxDQUFWO0lBQ0EsS0FBQSxFQUFPLENBQUMsUUFBRCxFQUFXLE9BQVgsQ0FEUDtHQUhKO0VBTUEsTUFBQSxFQUFRLFNBQUE7V0FDSixLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEyQixJQUEzQixFQUNBLENBQ08sSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBbEIsR0FDSSxLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEyQjtNQUFDLE9BQUEsRUFBVSxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUExQjtLQUEzQixDQURKLEdBQUEsTUFESixDQURBO0VBREksQ0FOUjtDQUZLOztBQWdCVCxLQUFBLEdBQVEsS0FBSyxDQUFDLFdBQU4sQ0FFSjtFQUFBLGVBQUEsRUFBaUIsU0FBQTtXQUNiO01BQUEsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBZDs7RUFEYSxDQUFqQjtFQUdBLE1BQUEsRUFBUSxTQUFBO1dBQ0osS0FBSyxDQUFDLGFBQU4sQ0FBb0IsT0FBcEIsRUFBNkI7TUFBQyxNQUFBLEVBQVEsTUFBVDtNQUFpQixhQUFBLEVBQWUsbUJBQWhDO01BQXFELE9BQUEsRUFBVSxJQUFDLENBQUEsS0FBSyxDQUFDLEtBQXRFO01BQThFLFVBQUEsRUFBYSxJQUFDLENBQUEsWUFBNUY7S0FBN0I7RUFESSxDQUhSO0VBTUEsWUFBQSxFQUFjLFNBQUMsQ0FBRDtJQUNWLElBQUMsQ0FBQSxRQUFELENBQVU7TUFBQSxLQUFBLEVBQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFoQjtLQUFWO1dBQ0EsT0FBTyxDQUFDLGlCQUFSLENBQTBCLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBbkM7RUFGVSxDQU5kO0NBRkk7O0FBWVIsTUFBTSxDQUFDLE9BQVAsR0FBaUIifQ==\n","var Table, Tbody, Th, Thead;\n\nTable = React.createClass({displayName: \"Table\",\n  render: function() {\n    return React.createElement(\"table\", {\n      \"className\": \"listing\"\n    }, React.createElement(Thead, {\n      \"cols\": this.props.cols,\n      \"orderBy\": this.props.orderBy,\n      \"onOrderBy\": this.props.onOrderBy\n    }), React.createElement(Tbody, {\n      \"cols\": this.props.cols,\n      \"rows\": this.props.rows\n    }));\n  }\n});\n\nThead = React.createClass({displayName: \"Thead\",\n  render: function() {\n    var col;\n    return React.createElement(\"thead\", null, React.createElement(\"tr\", null, (function() {\n      var j, len, ref, results;\n      ref = this.props.cols;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        col = ref[j];\n        results.push(React.createElement(Th, {\n          \"key\": col.name,\n          \"col\": col,\n          \"orderBy\": this.props.orderBy,\n          \"onOrderBy\": this.props.onOrderBy\n        }));\n      }\n      return results;\n    }).call(this)));\n  },\n  renderTh: function(col, i) {}\n});\n\nTh = React.createClass({displayName: \"Th\",\n  render: function() {\n    if (this.props.orderBy !== null && this.props.col.name === this.props.orderBy.field) {\n      return React.createElement(\"th\", {\n        \"onClick\": this.handleOnClick,\n        \"className\": \"order-by \" + this.props.orderBy.direction\n      }, React.createElement(\"span\", {\n        \"className\": \"sort\"\n      }, this.props.col.label));\n    } else {\n      return React.createElement(\"th\", {\n        \"onClick\": this.handleOnClick\n      }, React.createElement(\"span\", {\n        \"className\": \"sort\"\n      }, this.props.col.label));\n    }\n  },\n  handleOnClick: function() {\n    if (this.props.orderBy !== null && this.props.orderBy.field === this.props.col.name) {\n      if (this.props.orderBy.direction === 'asc') {\n        return this.props.onOrderBy({\n          field: this.props.col.name,\n          direction: 'desc'\n        });\n      } else {\n        return this.props.onOrderBy(null);\n      }\n    } else {\n      return this.props.onOrderBy({\n        field: this.props.col.name,\n        direction: 'asc'\n      });\n    }\n  }\n});\n\nTbody = React.createClass({displayName: \"Tbody\",\n  render: function() {\n    var col, i, row;\n    return React.createElement(\"tbody\", null, (function() {\n      var j, len, ref, results;\n      ref = this.props.rows;\n      results = [];\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        row = ref[i];\n        results.push(React.createElement(\"tr\", {\n          \"key\": i\n        }, (function() {\n          var k, len1, results1;\n          results1 = [];\n          for (i = k = 0, len1 = row.length; k < len1; i = ++k) {\n            col = row[i];\n            results1.push(React.createElement(\"td\", {\n              \"key\": i\n            }, col));\n          }\n          return results1;\n        })()));\n      }\n      return results;\n    }).call(this));\n  }\n});\n\nmodule.exports = Table;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvdGFibGUuY2pzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHJlZXRlci9naXRfcmVwb3NpdG9yaWVzL0RvdWdsYXNDb25uZWN0LWViaXNjL2Fzc2V0cy9zY3JpcHRzL3NlYXJjaC9jb21wb25lbnRzL3RhYmxlLmNqc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQVEsS0FBSyxDQUFDLFdBQU4sQ0FFSjtFQUFBLE1BQUEsRUFBUSxTQUFBO1dBQ0osS0FBSyxDQUFDLGFBQU4sQ0FBb0IsT0FBcEIsRUFBNkI7TUFBQyxXQUFBLEVBQWEsU0FBZDtLQUE3QixFQUNJLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQXBCLEVBQTJCO01BQUMsTUFBQSxFQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBakI7TUFBd0IsU0FBQSxFQUFZLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBM0M7TUFBcUQsV0FBQSxFQUFjLElBQUMsQ0FBQSxLQUFLLENBQUMsU0FBMUU7S0FBM0IsQ0FESixFQUVJLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQXBCLEVBQTJCO01BQUMsTUFBQSxFQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBakI7TUFBd0IsTUFBQSxFQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBeEM7S0FBM0IsQ0FGSjtFQURJLENBQVI7Q0FGSTs7QUFRUixLQUFBLEdBQVEsS0FBSyxDQUFDLFdBQU4sQ0FFSjtFQUFBLE1BQUEsRUFBUSxTQUFBO0FBQ0osUUFBQTtXQUFBLEtBQUssQ0FBQyxhQUFOLENBQW9CLE9BQXBCLEVBQTZCLElBQTdCLEVBQ0ksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsSUFBcEIsRUFBMEIsSUFBMUI7O0FBQWtDO0FBQUE7V0FBQSxxQ0FBQTs7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\n","var State, TotalCount,\n  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };\n\nState = require('../state');\n\nTotalCount = React.createClass({displayName: \"TotalCount\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    celllines: ['celllines']\n  },\n  render: function() {\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(\"div\", null, React.createElement(\"span\", {\n      \"className\": \"count\"\n    }, this.state.cursors.celllines.length), React.createElement(\"span\", {\n      \"className\": \"unit\"\n    }, modulo(this.state.cursors.celllines.length, 100) === 1 && 'cell line' || 'cell lines')) : void 0));\n  }\n});\n\nmodule.exports = TotalCount;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbXBvbmVudHMvdG90YWwtY291bnQuY2pzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHJlZXRlci9naXRfcmVwb3NpdG9yaWVzL0RvdWdsYXNDb25uZWN0LWViaXNjL2Fzc2V0cy9zY3JpcHRzL3NlYXJjaC9jb21wb25lbnRzL3RvdGFsLWNvdW50LmNqc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxpQkFBQTtFQUFBOztBQUFBLEtBQUEsR0FBUSxPQUFBLENBQVEsVUFBUjs7QUFFUixVQUFBLEdBQWEsS0FBSyxDQUFDLFdBQU4sQ0FFVDtFQUFBLE1BQUEsRUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFQLENBQVI7RUFFQSxPQUFBLEVBQ0k7SUFBQSxRQUFBLEVBQVUsQ0FBQyxVQUFELENBQVY7SUFDQSxTQUFBLEVBQVcsQ0FBQyxXQUFELENBRFg7R0FISjtFQU1BLE1BQUEsRUFBUSxTQUFBO1dBQ0osS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkIsSUFBM0IsRUFDQSxDQUNPLElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQWxCLEdBQ0ksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMkIsSUFBM0IsRUFDSSxLQUFLLENBQUMsYUFBTixDQUFvQixNQUFwQixFQUE0QjtNQUFDLFdBQUEsRUFBYSxPQUFkO0tBQTVCLEVBQXFELElBQUMsQ0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUE5RSxDQURKLEVBRUksS0FBSyxDQUFDLGFBQU4sQ0FBb0IsTUFBcEIsRUFBNEI7TUFBQyxXQUFBLEVBQWEsTUFBZDtLQUE1QixTQUFvRCxJQUFDLENBQUEsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBVSxJQUFuQyxLQUEwQyxDQUExQyxJQUFnRCxXQUFoRCxJQUErRCxZQUFuSCxDQUZKLENBREosR0FBQSxNQURKLENBREE7RUFESSxDQU5SO0NBRlM7O0FBbUJiLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIn0=\n","var config;\n\nconfig = {\n  fields: [\n    {\n      name: 'name',\n      label: 'Name'\n    }, {\n      name: 'donor_disease',\n      label: 'Donor disease status'\n    }, {\n      name: 'genetic_modification_disease',\n      label: 'Genetic modification'\n    }, {\n      name: 'donor_sex',\n      label: 'Donor sex'\n    }, {\n      name: 'donor_age',\n      label: 'Donor age'\n    }, {\n      name: 'primary_cell_type',\n      label: 'Primary cell type'\n    }\n  ],\n  query_fields: ['biosamples_id.analyzed', 'name.analyzed', 'alternative_names.analyzed', 'depositor.analyzed', 'primary_cell_type.analyzed', 'donor_disease.analyzed', 'genetic_modification_disease.analyzed', 'primary_disease_synonyms', 'disease_associated_phenotypes.analyzed', 'non_disease_associated_phenotypes.analyzed', 'donor_sex.analyzed', 'donor_age.analyzed', 'all_genes.analyzed'],\n  facets: [\n    {\n      name: 'all_diseases',\n      label: 'Disease',\n      selectedTerms: {}\n    }, {\n      name: 'primary_cell_type',\n      label: 'Primary cell type',\n      selectedTerms: {}\n    }, {\n      name: 'donor_sex',\n      label: 'Donor sex',\n      selectedTerms: {}\n    }, {\n      name: 'donor_age',\n      label: 'Donor age',\n      selectedTerms: {}\n    }\n  ]\n};\n\nmodule.exports = config;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbmZpZy5janN4Iiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2NvbmZpZy5janN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsTUFBQSxHQUFTO0VBRUwsTUFBQSxFQUFRO0lBQ0o7TUFDSSxJQUFBLEVBQU0sTUFEVjtNQUVJLEtBQUEsRUFBTyxNQUZYO0tBREksRUFLSjtNQUNJLElBQUEsRUFBTSxlQURWO01BRUksS0FBQSxFQUFPLHNCQUZYO0tBTEksRUFTSjtNQUNJLElBQUEsRUFBTSw4QkFEVjtNQUVJLEtBQUEsRUFBTyxzQkFGWDtLQVRJLEVBYUo7TUFDSSxJQUFBLEVBQU0sV0FEVjtNQUVJLEtBQUEsRUFBTyxXQUZYO0tBYkksRUFpQko7TUFDSSxJQUFBLEVBQU0sV0FEVjtNQUVJLEtBQUEsRUFBTyxXQUZYO0tBakJJLEVBcUJKO01BQ0ksSUFBQSxFQUFNLG1CQURWO01BRUksS0FBQSxFQUFPLG1CQUZYO0tBckJJO0dBRkg7RUE2QkwsWUFBQSxFQUFjLENBQ1Ysd0JBRFUsRUFFVixlQUZVLEVBR1YsNEJBSFUsRUFJVixvQkFKVSxFQUtWLDRCQUxVLEVBTVYsd0JBTlUsRUFPVix1Q0FQVSxFQVFWLDBCQVJVLEVBU1Ysd0NBVFUsRUFVViw0Q0FWVSxFQVdWLG9CQVhVLEVBWVYsb0JBWlUsRUFhVixvQkFiVSxDQTdCVDtFQTZDTCxNQUFBLEVBQVE7SUFDSjtNQUNJLElBQUEsRUFBTSxjQURWO01BRUksS0FBQSxFQUFPLFNBRlg7TUFHSSxhQUFBLEVBQWUsRUFIbkI7S0FESSxFQU1KO01BQ0ksSUFBQSxFQUFNLG1CQURWO01BRUksS0FBQSxFQUFPLG1CQUZYO01BR0ksYUFBQSxFQUFlLEVBSG5CO0tBTkksRUFXSjtNQUNJLElBQUEsRUFBTSxXQURWO01BRUksS0FBQSxFQUFPLFdBRlg7TUFHSSxhQUFBLEVBQWUsRUFIbkI7S0FYSSxFQWdCSjtNQUNJLElBQUEsRUFBTSxXQURWO01BRUksS0FBQSxFQUFPLFdBRlg7TUFHSSxhQUFBLEVBQWUsRUFIbkI7S0FoQkk7R0E3Q0g7OztBQXFFVCxNQUFNLENBQUMsT0FBUCxHQUFpQiJ9\n","var Config, State, XRegExp, buildAggregation, buildAggregations, buildFacetFilters, buildFilter, buildFilteredQuery, buildQuery, elastic, search,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nXRegExp = require('xregexp').XRegExp;\n\nState = require('./state');\n\nConfig = require('./config');\n\nelastic = window.elasticsearch.Client({\n  host: {\n    protocol: window.location.protocol,\n    host: window.location.hostname,\n    port: window.location.port && window.location.port || (window.location.protocol === 'https:' && 443 || 80),\n    path: '/es'\n  }\n});\n\nsearch = function() {\n  var body, obj, orderBy;\n  body = {\n    size: 1000,\n    query: buildFilteredQuery(),\n    aggs: buildAggregations()\n  };\n  orderBy = State.select('filter', 'orderBy').get();\n  if (orderBy !== null) {\n    body.sort = [\n      (\n        obj = {},\n        obj[\"\" + orderBy.field] = {\n          order: orderBy.direction\n        },\n        obj\n      )\n    ];\n  }\n  return elastic.search({\n    index: 'ebisc',\n    type: 'cellline',\n    body: body\n  }).then(function(body) {\n    var bucket, changed, facet, facetFilter, i, j, len, matchingTerms, ref, selected, term;\n    State.set('celllines', body.hits.hits);\n    if (body.aggregations) {\n      State.set('facetTerms', body.aggregations.facets);\n    }\n    State.set('isLoaded', true);\n    changed = false;\n    facetFilter = State.select('filter', 'facets').get();\n    for (i = j = 0, len = facetFilter.length; j < len; i = ++j) {\n      facet = facetFilter[i];\n      if (body.aggregations.facets[facet.name].buckets) {\n        matchingTerms = (function() {\n          var k, len1, ref, results;\n          ref = body.aggregations.facets[facet.name].buckets;\n          results = [];\n          for (k = 0, len1 = ref.length; k < len1; k++) {\n            bucket = ref[k];\n            results.push(bucket.key);\n          }\n          return results;\n        })();\n      } else {\n        matchingTerms = (function() {\n          var k, len1, ref, results;\n          ref = body.aggregations.facets[facet.name].facet.buckets;\n          results = [];\n          for (k = 0, len1 = ref.length; k < len1; k++) {\n            bucket = ref[k];\n            results.push(bucket.key);\n          }\n          return results;\n        })();\n      }\n      ref = facet.selectedTerms;\n      for (term in ref) {\n        selected = ref[term];\n        if (!(selected && indexOf.call(matchingTerms, term) < 0)) {\n          continue;\n        }\n        changed = true;\n        facet.selectedTerms[term] = false;\n      }\n    }\n    if (changed) {\n      return State.select('filter').set('facets', facetFilter);\n    }\n  }).error(function(error) {\n    console.error(JSON.stringify(error, null, '  '));\n    return alert('Error loading data.');\n  });\n};\n\nbuildFilteredQuery = function() {\n  return {\n    filtered: {\n      query: buildQuery(),\n      filter: buildFilter()\n    }\n  };\n};\n\nbuildQuery = function() {\n  var buildQueryMultiMatch, queryString, w, word, words;\n  queryString = _.trim(State.select('filter', 'query').get().toLowerCase());\n  queryString = XRegExp.replace(queryString, XRegExp('[^(\\\\p{L}|\\\\d|\\\\p{Z})]'), '', 'all');\n  if (!queryString) {\n    return {\n      match_all: {}\n    };\n  } else {\n    words = (function() {\n      var j, len, ref, results;\n      ref = XRegExp.split(queryString, XRegExp('\\\\p{Z}'));\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        w = ref[j];\n        if (w !== '') {\n          results.push(w);\n        }\n      }\n      return results;\n    })();\n    buildQueryMultiMatch = function(word, fields) {\n      return {\n        multi_match: {\n          query: word,\n          type: 'best_fields',\n          fields: fields\n        }\n      };\n    };\n    return {\n      bool: {\n        must: (function() {\n          var j, len, results;\n          results = [];\n          for (j = 0, len = words.length; j < len; j++) {\n            word = words[j];\n            results.push(buildQueryMultiMatch(word, Config.query_fields));\n          }\n          return results;\n        })()\n      }\n    };\n  }\n};\n\nbuildFilter = function() {\n  var filters;\n  filters = buildFacetFilters();\n  if (!filters) {\n    return {};\n  } else {\n    return {\n      bool: {\n        must: filters\n      }\n    };\n  }\n};\n\nbuildFacetFilters = function() {\n  var buildTerms, facet, j, len, obj, ref, results;\n  buildTerms = function(terms) {\n    var results, selected, term;\n    results = [];\n    for (term in terms) {\n      selected = terms[term];\n      if (selected === true) {\n        results.push(term);\n      }\n    }\n    return results;\n  };\n  ref = State.select('filter', 'facets').get();\n  results = [];\n  for (j = 0, len = ref.length; j < len; j++) {\n    facet = ref[j];\n    if (buildTerms(facet.selectedTerms).length) {\n      results.push({\n        terms: (\n          obj = {},\n          obj[\"\" + facet.name] = buildTerms(facet.selectedTerms),\n          obj\n        )\n      });\n    }\n  }\n  return results;\n};\n\nbuildAggregations = function() {\n  var facet, facets, filters;\n  facets = State.select('filter', 'facets').get();\n  if (!facets.length) {\n    return {};\n  } else {\n    filters = buildFacetFilters();\n    return {\n      facets: {\n        global: {},\n        aggs: _.object((function() {\n          var j, len, results;\n          results = [];\n          for (j = 0, len = facets.length; j < len; j++) {\n            facet = facets[j];\n            results.push([facet.name, buildAggregation(facet, filters)]);\n          }\n          return results;\n        })())\n      }\n    };\n  }\n};\n\nbuildAggregation = function(facet, filters) {\n  var filter, j, len, match, otherFilters, query, ref, terms;\n  otherFilters = (function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = filters.length; j < len; j++) {\n      filter = filters[j];\n      if (!(facet.name in filter.terms)) {\n        results.push(filter);\n      }\n    }\n    return results;\n  })();\n  query = buildQuery();\n  if ('bool' in query) {\n    ref = query.bool.must;\n    for (j = 0, len = ref.length; j < len; j++) {\n      match = ref[j];\n      otherFilters.push({\n        query: match\n      });\n    }\n  }\n  terms = {\n    field: facet.name,\n    order: {\n      _term: 'asc'\n    },\n    min_doc_count: 1,\n    size: 0\n  };\n  if (!otherFilters.length) {\n    return {\n      terms: terms\n    };\n  } else {\n    return {\n      filter: {\n        bool: {\n          must: otherFilters\n        }\n      },\n      aggs: {\n        facet: {\n          terms: terms\n        }\n      }\n    };\n  }\n};\n\nmodule.exports = {\n  search: search\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL2VsYXN0aWMuY2pzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHJlZXRlci9naXRfcmVwb3NpdG9yaWVzL0RvdWdsYXNDb25uZWN0LWViaXNjL2Fzc2V0cy9zY3JpcHRzL3NlYXJjaC9lbGFzdGljLmNqc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSw0SUFBQTtFQUFBOztBQUFBLE9BQUEsR0FBVSxPQUFBLENBQVEsU0FBUixDQUFrQixDQUFDOztBQUU3QixLQUFBLEdBQVEsT0FBQSxDQUFRLFNBQVI7O0FBQ1IsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOztBQUVULE9BQUEsR0FBVSxNQUFNLENBQUMsYUFBYSxDQUFDLE1BQXJCLENBQ047RUFBQSxJQUFBLEVBQ0k7SUFBQSxRQUFBLEVBQVUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUExQjtJQUNBLElBQUEsRUFBTSxNQUFNLENBQUMsUUFBUSxDQUFDLFFBRHRCO0lBRUEsSUFBQSxFQUFNLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBaEIsSUFBeUIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUF6QyxJQUFpRCxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBaEIsS0FBNEIsUUFBNUIsSUFBeUMsR0FBekMsSUFBZ0QsRUFBakQsQ0FGdkQ7SUFHQSxJQUFBLEVBQU0sS0FITjtHQURKO0NBRE07O0FBVVYsTUFBQSxHQUFTLFNBQUE7QUFFTCxNQUFBO0VBQUEsSUFBQSxHQUNJO0lBQUEsSUFBQSxFQUFNLElBQU47SUFDQSxLQUFBLEVBQU8sa0JBQUEsQ0FBQSxDQURQO0lBRUEsSUFBQSxFQUFNLGlCQUFBLENBQUEsQ0FGTjs7RUFJSixPQUFBLEdBQVUsS0FBSyxDQUFDLE1BQU4sQ0FBYSxRQUFiLEVBQXVCLFNBQXZCLENBQWlDLENBQUMsR0FB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\n","var Actions, Celllines, Elastic, Filter, Search, State, TotalCount, onFilterUpdate;\n\nElastic = require('./elastic');\n\nState = require('./state');\n\nActions = require('./actions');\n\nFilter = require('./components/filter');\n\nSearch = require('./components/search');\n\nCelllines = require('./components/celllines');\n\nTotalCount = require('./components/total-count');\n\nif (sessionStorage.getItem('filter')) {\n  Actions.loadFilter();\n} else {\n  Actions.initFilter();\n}\n\nonFilterUpdate = function() {\n  Actions.saveFilter();\n  return Elastic.search();\n};\n\nState.select('filter').on('update', _.debounce(onFilterUpdate, 150));\n\nReact.render(React.createElement(TotalCount, null), document.getElementById('total-count'));\n\nReact.render(React.createElement(Filter, null), document.getElementById('filter'));\n\nReact.render(React.createElement(Search, null), document.getElementById('search'));\n\nReact.render(React.createElement(Celllines, null), document.getElementById('celllines'));\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL21haW4uY2pzeCIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHJlZXRlci9naXRfcmVwb3NpdG9yaWVzL0RvdWdsYXNDb25uZWN0LWViaXNjL2Fzc2V0cy9zY3JpcHRzL3NlYXJjaC9tYWluLmNqc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQTs7QUFBQSxPQUFBLEdBQVUsT0FBQSxDQUFRLFdBQVI7O0FBQ1YsS0FBQSxHQUFRLE9BQUEsQ0FBUSxTQUFSOztBQUNSLE9BQUEsR0FBVSxPQUFBLENBQVEsV0FBUjs7QUFFVixNQUFBLEdBQVMsT0FBQSxDQUFRLHFCQUFSOztBQUNULE1BQUEsR0FBUyxPQUFBLENBQVEscUJBQVI7O0FBQ1QsU0FBQSxHQUFZLE9BQUEsQ0FBUSx3QkFBUjs7QUFDWixVQUFBLEdBQWEsT0FBQSxDQUFRLDBCQUFSOztBQUViLElBQUcsY0FBYyxDQUFDLE9BQWYsQ0FBdUIsUUFBdkIsQ0FBSDtFQUNJLE9BQU8sQ0FBQyxVQUFSLENBQUEsRUFESjtDQUFBLE1BQUE7RUFHSSxPQUFPLENBQUMsVUFBUixDQUFBLEVBSEo7OztBQUtBLGNBQUEsR0FBaUIsU0FBQTtFQUNiLE9BQU8sQ0FBQyxVQUFSLENBQUE7U0FDQSxPQUFPLENBQUMsTUFBUixDQUFBO0FBRmE7O0FBSWpCLEtBQUssQ0FBQyxNQUFOLENBQWEsUUFBYixDQUFzQixDQUFDLEVBQXZCLENBQTBCLFFBQTFCLEVBQW9DLENBQUMsQ0FBQyxRQUFGLENBQVcsY0FBWCxFQUEyQixHQUEzQixDQUFwQzs7QUFFQSxLQUFLLENBQUMsTUFBTixDQUFhLEtBQUssQ0FBQyxhQUFOLENBQW9CLFVBQXBCLEVBQWdDLElBQWhDLENBQWIsRUFBb0QsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsYUFBeEIsQ0FBcEQ7O0FBQ0EsS0FBSyxDQUFDLE1BQU4sQ0FBYSxLQUFLLENBQUMsYUFBTixDQUFvQixNQUFwQixFQUE0QixJQUE1QixDQUFiLEVBQWdELFFBQVEsQ0FBQyxjQUFULENBQXdCLFFBQXhCLENBQWhEOztBQUNBLEtBQUssQ0FBQyxNQUFOLENBQWEsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsTUFBcEIsRUFBNEIsSUFBNUIsQ0FBYixFQUFnRCxRQUFRLENBQUMsY0FBVCxDQUF3QixRQUF4QixDQUFoRDs7QUFDQSxLQUFLLENBQUMsTUFBTixDQUFhLEtBQUssQ0FBQyxhQUFOLENBQW9CLFNBQXBCLEVBQStCLElBQS9CLENBQWIsRUFBbUQsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBbkQifQ==\n","var Baobab, options, state;\n\nBaobab = require('baobab');\n\nstate = {\n  filter: {\n    query: '',\n    facets: [],\n    orderBy: null\n  },\n  facetTerms: {},\n  celllines: [],\n  isLoaded: false\n};\n\noptions = {\n  shiftReferences: true,\n  mixins: [React.addons.PureRenderMixin]\n};\n\nmodule.exports = new Baobab(state, options);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3N0cmVldGVyL2dpdF9yZXBvc2l0b3JpZXMvRG91Z2xhc0Nvbm5lY3QtZWJpc2MvYXNzZXRzL3NjcmlwdHMvc2VhcmNoL3N0YXRlLmNqc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvc3RyZWV0ZXIvZ2l0X3JlcG9zaXRvcmllcy9Eb3VnbGFzQ29ubmVjdC1lYmlzYy9hc3NldHMvc2NyaXB0cy9zZWFyY2gvc3RhdGUuY2pzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsUUFBUjs7QUFFVCxLQUFBLEdBQVE7RUFDSixNQUFBLEVBQ0k7SUFBQSxLQUFBLEVBQU8sRUFBUDtJQUNBLE1BQUEsRUFBUSxFQURSO0lBRUEsT0FBQSxFQUFTLElBRlQ7R0FGQTtFQUtKLFVBQUEsRUFBWSxFQUxSO0VBTUosU0FBQSxFQUFXLEVBTlA7RUFPSixRQUFBLEVBQVUsS0FQTjs7O0FBVVIsT0FBQSxHQUNJO0VBQUEsZUFBQSxFQUFpQixJQUFqQjtFQUNBLE1BQUEsRUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsZUFBZCxDQURSOzs7QUFHSixNQUFNLENBQUMsT0FBUCxHQUFpQixJQUFJLE1BQUosQ0FBVyxLQUFYLEVBQWtCLE9BQWxCIn0=\n","/**\n * Baobab Default Options\n * =======================\n *\n */\nmodule.exports = {\n\n  // Should the tree handle its transactions on its own?\n  autoCommit: true,\n\n  // Should the transactions be handled asynchronously?\n  asynchronous: true,\n\n  // Should the tree clone data when giving it back to the user?\n  clone: false,\n\n  // Which cloning function should the tree use?\n  cloningFunction: null,\n\n  // Should cursors be singletons?\n  cursorSingletons: true,\n\n  // Maximum records in the tree's history\n  maxHistory: 0,\n\n  // Collection of react mixins to merge with the tree's ones\n  mixins: [],\n\n  // Should the tree shift its internal reference when applying mutations?\n  shiftReferences: false,\n\n  // Custom typology object to use along with the validation utilities\n  typology: null,\n\n  // Validation specifications\n  validate: null\n};\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar Config, State, initFilter, loadFilter, orderBy, saveFilter, setFilter, updateFacetTermFilter, updateQueryFilter;\n\nState = require('./state');\n\nConfig = require('./config');\n\ninitFilter = function() {\n  return State.select('filter').set('facets', Config.facets);\n};\n\nsetFilter = function(filter) {\n  return State.set('filter', filter);\n};\n\nloadFilter = function() {\n  return setFilter(JSON.parse(sessionStorage.getItem('filter')));\n};\n\nsaveFilter = function() {\n  return sessionStorage.setItem('filter', JSON.stringify(State.select('filter').get()));\n};\n\nupdateQueryFilter = function(query) {\n  return State.select('filter', 'query').edit(query);\n};\n\nupdateFacetTermFilter = function(facetName, term, state) {\n  var selectedTerms;\n  selectedTerms = State.select('filter', 'facets', _.findIndex(State.select('filter', 'facets').get(), {\n    name: facetName\n  }), 'selectedTerms');\n  return selectedTerms.set(term, state);\n};\n\norderBy = function(value) {\n  return State.select('filter').set('orderBy', value);\n};\n\nmodule.exports = {\n  initFilter: initFilter,\n  setFilter: setFilter,\n  loadFilter: loadFilter,\n  saveFilter: saveFilter,\n  updateQueryFilter: updateQueryFilter,\n  updateFacetTermFilter: updateFacetTermFilter,\n  orderBy: orderBy\n};\n\n\n},{\"./config\":8,\"./state\":11}],2:[function(require,module,exports){\nvar Actions, Celllines, Config, State, Table;\n\nConfig = require('../config');\n\nState = require('../state');\n\nTable = require('./table');\n\nActions = require('../actions');\n\nCelllines = React.createClass({displayName: \"Celllines\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    celllines: ['celllines'],\n    orderBy: ['filter', 'orderBy']\n  },\n  render: function() {\n    var buildCell, buildRow, row, rows;\n    buildCell = function(name, row) {\n      var value;\n      value = row._source[name];\n      if (name === 'name') {\n        return React.createElement(\"a\", {\n          \"href\": \"./\" + value + \"/\"\n        }, value);\n      } else if (name === 'donor_disease') {\n        return value.join(', ');\n      } else if (name === 'genetic_modification_disease') {\n        if (value === '/') {\n          return React.createElement(\"span\", {\n            \"class\": \"comment\"\n          }, value);\n        } else {\n          return value.join(', ');\n        }\n      } else {\n        return value;\n      }\n    };\n    buildRow = function(row, cols) {\n      var col, i, len, results;\n      results = [];\n      for (i = 0, len = cols.length; i < len; i++) {\n        col = cols[i];\n        results.push(buildCell(col.name, row));\n      }\n      return results;\n    };\n    rows = (function() {\n      var i, len, ref, results;\n      ref = this.state.cursors.celllines;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        row = ref[i];\n        results.push(buildRow(row, Config.fields));\n      }\n      return results;\n    }).call(this);\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(Table, {\n      \"cols\": Config.fields,\n      \"rows\": rows,\n      \"orderBy\": this.state.cursors.orderBy,\n      \"onOrderBy\": Actions.orderBy\n    }) : void 0));\n  }\n});\n\nmodule.exports = Celllines;\n\n\n},{\"../actions\":1,\"../config\":8,\"../state\":11,\"./table\":6}],3:[function(require,module,exports){\nvar DropdownMultiSelect, Item, classNames;\n\nclassNames = require('classnames');\n\nDropdownMultiSelect = React.createClass({displayName: \"DropdownMultiSelect\",\n  getInitialState: function() {\n    return {\n      showMenu: false\n    };\n  },\n  showMenu: function() {\n    this.setState({\n      showMenu: true\n    });\n    return window.addEventListener('click', this.hideMenu, true);\n  },\n  hideMenu: function(e) {\n    if (e.target === $('.dropdown-button', this.getDOMNode())[0]) {\n      e.stopPropagation();\n      this.setState({\n        showMenu: false\n      });\n      return window.removeEventListener('click', this.hideMenu, true);\n    } else if (!$(this.getDOMNode()).has($(e.target)).length) {\n      this.setState({\n        showMenu: false\n      });\n      return window.removeEventListener('click', this.hideMenu, true);\n    }\n  },\n  componentWillUnmount: function() {\n    return window.removeEventListener('click', this.hideMenu, true);\n  },\n  render: function() {\n    var item;\n    return React.createElement(\"div\", {\n      \"className\": classNames({\n        'dropdown': true,\n        'two-cols': this.props.items.length >= 15,\n        'has-selection': this.props.hasSelection\n      })\n    }, React.createElement(\"div\", {\n      \"className\": \"dropdown-container\"\n    }, React.createElement(\"div\", {\n      \"className\": \"dropdown-button\",\n      \"onClick\": this.showMenu\n    }, this.props.label), React.createElement(\"ul\", {\n      \"className\": classNames({\n        'dropdown-menu': true,\n        'checkbox': true,\n        'show-menu': this.state.showMenu\n      })\n    }, (function() {\n      var i, len, ref, results;\n      ref = this.props.items;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        item = ref[i];\n        results.push(React.createElement(Item, {\n          \"key\": item.name,\n          \"item\": item,\n          \"action\": this.props.action\n        }));\n      }\n      return results;\n    }).call(this))));\n  }\n});\n\nItem = React.createClass({displayName: \"Item\",\n  handleOnClick: function() {\n    return this.props.action(this.props.item.name, !this.props.item.selected);\n  },\n  render: function() {\n    return React.createElement(\"li\", {\n      \"onClick\": this.handleOnClick,\n      \"className\": classNames({\n        selected: this.props.item.selected !== void 0 && this.props.item.selected || false\n      })\n    }, React.createElement(\"div\", {\n      \"className\": \"checkbox\"\n    }), React.createElement(\"label\", null, this.props.item.label));\n  }\n});\n\nmodule.exports = DropdownMultiSelect;\n\n\n},{\"classnames\":22}],4:[function(require,module,exports){\nvar Actions, DropdownMultiSelect, Facets, ReactCSSTransitionGroup, SelectedTerms, State,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nReactCSSTransitionGroup = React.addons.CSSTransitionGroup;\n\nState = require('../state');\n\nActions = require('../actions');\n\nDropdownMultiSelect = require('./dropdown-multi-select');\n\nFacets = React.createClass({displayName: \"Facets\",\n  mixins: [State.mixin],\n  cursors: {\n    facets: ['filter', 'facets'],\n    facetTerms: ['facetTerms']\n  },\n  render: function() {\n    var facet, i, selectedTerms;\n    return React.createElement(\"span\", null, React.createElement(\"span\", null, (_.size(this.state.cursors.facetTerms) ? React.createElement(\"div\", {\n      \"className\": \"filter-group\"\n    }, (function() {\n      var j, len, ref, results;\n      ref = this.state.cursors.facets;\n      results = [];\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        facet = ref[i];\n        selectedTerms = this.getSelectedTerms(facet.name);\n        results.push(React.createElement(\"div\", {\n          \"key\": facet.name,\n          \"className\": \"filter\"\n        }, React.createElement(DropdownMultiSelect, {\n          \"name\": facet.name,\n          \"label\": facet.label,\n          \"hasSelection\": selectedTerms.length > 0,\n          \"items\": this.getFacetTerms(facet.name, selectedTerms),\n          \"action\": _.partial(Actions.updateFacetTermFilter, facet.name)\n        }), React.createElement(SelectedTerms, {\n          \"facet\": facet,\n          \"terms\": selectedTerms\n        })));\n      }\n      return results;\n    }).call(this)) : void 0)), React.createElement(\"span\", null, (_.size(this.state.cursors.facetTerms) && indexOf.call((function() {\n      var j, len, ref, results;\n      ref = this.state.cursors.facets;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        facet = ref[j];\n        results.push(this.getSelectedTerms(facet.name).length > 0);\n      }\n      return results;\n    }).call(this), true) >= 0 ? React.createElement(\"div\", {\n      \"className\": \"clear-all-filters\",\n      \"onClick\": this.clearFilters\n    }, React.createElement(\"span\", {\n      \"className\": \"glyphicon glyphicon-remove-sign\"\n    }), \" Clear all filters\") : void 0)));\n  },\n  clearFilters: function() {\n    return Actions.initFilter();\n  },\n  getSelectedTerms: function(facet) {\n    var key, terms, value;\n    terms = this.state.cursors.facets[_.findIndex(this.state.cursors.facets, {\n      name: facet\n    })].selectedTerms;\n    return ((function() {\n      var results;\n      results = [];\n      for (key in terms) {\n        value = terms[key];\n        if (value === true) {\n          results.push(key);\n        }\n      }\n      return results;\n    })()).sort();\n  },\n  getFacetTerms: function(facet, selectedTerms) {\n    var j, len, ref, results, term, terms;\n    if ('buckets' in this.state.cursors.facetTerms[facet]) {\n      terms = this.state.cursors.facetTerms[facet].buckets;\n    } else {\n      terms = this.state.cursors.facetTerms[facet]['facet'].buckets;\n    }\n    results = [];\n    for (j = 0, len = terms.length; j < len; j++) {\n      term = terms[j];\n      results.push({\n        name: term.key,\n        label: term.key + \" (\" + term.doc_count + \")\",\n        selected: (ref = term.key, indexOf.call(selectedTerms, ref) >= 0)\n      });\n    }\n    return results;\n  }\n});\n\nSelectedTerms = React.createClass({displayName: \"SelectedTerms\",\n  render: function() {\n    var term;\n    return React.createElement(\"ul\", {\n      \"className\": \"selected-terms\"\n    }, React.createElement(ReactCSSTransitionGroup, {\n      \"transitionName\": \"transition-opacity\"\n    }, (function() {\n      var j, len, ref, results;\n      ref = this.props.terms;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        term = ref[j];\n        results.push(React.createElement(\"li\", {\n          \"key\": term,\n          \"className\": \"term\"\n        }, React.createElement(\"span\", {\n          \"className\": \"remove glyphicon glyphicon-remove-sign\",\n          \"onClick\": this.createHandleOnRemove(term)\n        }), \" \", term));\n      }\n      return results;\n    }).call(this)));\n  },\n  createHandleOnRemove: function(term) {\n    return (function(_this) {\n      return function() {\n        return Actions.updateFacetTermFilter(_this.props.facet.name, term, false);\n      };\n    })(this);\n  }\n});\n\nmodule.exports = Facets;\n\n\n},{\"../actions\":1,\"../state\":11,\"./dropdown-multi-select\":3}],5:[function(require,module,exports){\nvar Actions, Input, Search, State;\n\nState = require('../state');\n\nActions = require('../actions');\n\nSearch = React.createClass({displayName: \"Search\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    query: ['filter', 'query']\n  },\n  render: function() {\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(Input, {\n      \"query\": this.state.cursors.query\n    }) : void 0));\n  }\n});\n\nInput = React.createClass({displayName: \"Input\",\n  getInitialState: function() {\n    return {\n      query: this.props.query\n    };\n  },\n  render: function() {\n    return React.createElement(\"input\", {\n      \"type\": \"text\",\n      \"placeholder\": \"Search cell lines\",\n      \"value\": this.state.query,\n      \"onChange\": this.handleChange\n    });\n  },\n  handleChange: function(e) {\n    this.setState({\n      query: e.target.value\n    });\n    return Actions.updateQueryFilter(e.target.value);\n  }\n});\n\nmodule.exports = Search;\n\n\n},{\"../actions\":1,\"../state\":11}],6:[function(require,module,exports){\nvar Table, Tbody, Th, Thead;\n\nTable = React.createClass({displayName: \"Table\",\n  render: function() {\n    return React.createElement(\"table\", {\n      \"className\": \"listing\"\n    }, React.createElement(Thead, {\n      \"cols\": this.props.cols,\n      \"orderBy\": this.props.orderBy,\n      \"onOrderBy\": this.props.onOrderBy\n    }), React.createElement(Tbody, {\n      \"cols\": this.props.cols,\n      \"rows\": this.props.rows\n    }));\n  }\n});\n\nThead = React.createClass({displayName: \"Thead\",\n  render: function() {\n    var col;\n    return React.createElement(\"thead\", null, React.createElement(\"tr\", null, (function() {\n      var j, len, ref, results;\n      ref = this.props.cols;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        col = ref[j];\n        results.push(React.createElement(Th, {\n          \"key\": col.name,\n          \"col\": col,\n          \"orderBy\": this.props.orderBy,\n          \"onOrderBy\": this.props.onOrderBy\n        }));\n      }\n      return results;\n    }).call(this)));\n  },\n  renderTh: function(col, i) {}\n});\n\nTh = React.createClass({displayName: \"Th\",\n  render: function() {\n    if (this.props.orderBy !== null && this.props.col.name === this.props.orderBy.field) {\n      return React.createElement(\"th\", {\n        \"onClick\": this.handleOnClick,\n        \"className\": \"order-by \" + this.props.orderBy.direction\n      }, React.createElement(\"span\", {\n        \"className\": \"sort\"\n      }, this.props.col.label));\n    } else {\n      return React.createElement(\"th\", {\n        \"onClick\": this.handleOnClick\n      }, React.createElement(\"span\", {\n        \"className\": \"sort\"\n      }, this.props.col.label));\n    }\n  },\n  handleOnClick: function() {\n    if (this.props.orderBy !== null && this.props.orderBy.field === this.props.col.name) {\n      if (this.props.orderBy.direction === 'asc') {\n        return this.props.onOrderBy({\n          field: this.props.col.name,\n          direction: 'desc'\n        });\n      } else {\n        return this.props.onOrderBy(null);\n      }\n    } else {\n      return this.props.onOrderBy({\n        field: this.props.col.name,\n        direction: 'asc'\n      });\n    }\n  }\n});\n\nTbody = React.createClass({displayName: \"Tbody\",\n  render: function() {\n    var col, i, row;\n    return React.createElement(\"tbody\", null, (function() {\n      var j, len, ref, results;\n      ref = this.props.rows;\n      results = [];\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        row = ref[i];\n        results.push(React.createElement(\"tr\", {\n          \"key\": i\n        }, (function() {\n          var k, len1, results1;\n          results1 = [];\n          for (i = k = 0, len1 = row.length; k < len1; i = ++k) {\n            col = row[i];\n            results1.push(React.createElement(\"td\", {\n              \"key\": i\n            }, col));\n          }\n          return results1;\n        })()));\n      }\n      return results;\n    }).call(this));\n  }\n});\n\nmodule.exports = Table;\n\n\n},{}],7:[function(require,module,exports){\nvar State, TotalCount,\n  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };\n\nState = require('../state');\n\nTotalCount = React.createClass({displayName: \"TotalCount\",\n  mixins: [State.mixin],\n  cursors: {\n    isLoaded: ['isLoaded'],\n    celllines: ['celllines']\n  },\n  render: function() {\n    return React.createElement(\"div\", null, (this.state.cursors.isLoaded ? React.createElement(\"div\", null, React.createElement(\"span\", {\n      \"className\": \"count\"\n    }, this.state.cursors.celllines.length), React.createElement(\"span\", {\n      \"className\": \"unit\"\n    }, modulo(this.state.cursors.celllines.length, 100) === 1 && 'cell line' || 'cell lines')) : void 0));\n  }\n});\n\nmodule.exports = TotalCount;\n\n\n},{\"../state\":11}],8:[function(require,module,exports){\nvar config;\n\nconfig = {\n  fields: [\n    {\n      name: 'name',\n      label: 'Name'\n    }, {\n      name: 'donor_disease',\n      label: 'Donor disease status'\n    }, {\n      name: 'genetic_modification_disease',\n      label: 'Genetic modification'\n    }, {\n      name: 'donor_sex',\n      label: 'Donor sex'\n    }, {\n      name: 'donor_age',\n      label: 'Donor age'\n    }, {\n      name: 'primary_cell_type',\n      label: 'Primary cell type'\n    }\n  ],\n  query_fields: ['biosamples_id.analyzed', 'name.analyzed', 'alternative_names.analyzed', 'depositor.analyzed', 'primary_cell_type.analyzed', 'donor_disease.analyzed', 'genetic_modification_disease.analyzed', 'primary_disease_synonyms', 'disease_associated_phenotypes.analyzed', 'non_disease_associated_phenotypes.analyzed', 'donor_sex.analyzed', 'donor_age.analyzed', 'all_genes.analyzed'],\n  facets: [\n    {\n      name: 'all_diseases',\n      label: 'Disease',\n      selectedTerms: {}\n    }, {\n      name: 'primary_cell_type',\n      label: 'Primary cell type',\n      selectedTerms: {}\n    }, {\n      name: 'donor_sex',\n      label: 'Donor sex',\n      selectedTerms: {}\n    }, {\n      name: 'donor_age',\n      label: 'Donor age',\n      selectedTerms: {}\n    }\n  ]\n};\n\nmodule.exports = config;\n\n\n},{}],9:[function(require,module,exports){\nvar Config, State, XRegExp, buildAggregation, buildAggregations, buildFacetFilters, buildFilter, buildFilteredQuery, buildQuery, elastic, search,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nXRegExp = require('xregexp').XRegExp;\n\nState = require('./state');\n\nConfig = require('./config');\n\nelastic = window.elasticsearch.Client({\n  host: {\n    protocol: window.location.protocol,\n    host: window.location.hostname,\n    port: window.location.port && window.location.port || (window.location.protocol === 'https:' && 443 || 80),\n    path: '/es'\n  }\n});\n\nsearch = function() {\n  var body, obj, orderBy;\n  body = {\n    size: 1000,\n    query: buildFilteredQuery(),\n    aggs: buildAggregations()\n  };\n  orderBy = State.select('filter', 'orderBy').get();\n  if (orderBy !== null) {\n    body.sort = [\n      (\n        obj = {},\n        obj[\"\" + orderBy.field] = {\n          order: orderBy.direction\n        },\n        obj\n      )\n    ];\n  }\n  return elastic.search({\n    index: 'ebisc',\n    type: 'cellline',\n    body: body\n  }).then(function(body) {\n    var bucket, changed, facet, facetFilter, i, j, len, matchingTerms, ref, selected, term;\n    State.set('celllines', body.hits.hits);\n    if (body.aggregations) {\n      State.set('facetTerms', body.aggregations.facets);\n    }\n    State.set('isLoaded', true);\n    changed = false;\n    facetFilter = State.select('filter', 'facets').get();\n    for (i = j = 0, len = facetFilter.length; j < len; i = ++j) {\n      facet = facetFilter[i];\n      if (body.aggregations.facets[facet.name].buckets) {\n        matchingTerms = (function() {\n          var k, len1, ref, results;\n          ref = body.aggregations.facets[facet.name].buckets;\n          results = [];\n          for (k = 0, len1 = ref.length; k < len1; k++) {\n            bucket = ref[k];\n            results.push(bucket.key);\n          }\n          return results;\n        })();\n      } else {\n        matchingTerms = (function() {\n          var k, len1, ref, results;\n          ref = body.aggregations.facets[facet.name].facet.buckets;\n          results = [];\n          for (k = 0, len1 = ref.length; k < len1; k++) {\n            bucket = ref[k];\n            results.push(bucket.key);\n          }\n          return results;\n        })();\n      }\n      ref = facet.selectedTerms;\n      for (term in ref) {\n        selected = ref[term];\n        if (!(selected && indexOf.call(matchingTerms, term) < 0)) {\n          continue;\n        }\n        changed = true;\n        facet.selectedTerms[term] = false;\n      }\n    }\n    if (changed) {\n      return State.select('filter').set('facets', facetFilter);\n    }\n  }).error(function(error) {\n    console.error(JSON.stringify(error, null, '  '));\n    return alert('Error loading data.');\n  });\n};\n\nbuildFilteredQuery = function() {\n  return {\n    filtered: {\n      query: buildQuery(),\n      filter: buildFilter()\n    }\n  };\n};\n\nbuildQuery = function() {\n  var buildQueryMultiMatch, queryString, w, word, words;\n  queryString = _.trim(State.select('filter', 'query').get().toLowerCase());\n  queryString = XRegExp.replace(queryString, XRegExp('[^(\\\\p{L}|\\\\d|\\\\p{Z})]'), '', 'all');\n  if (!queryString) {\n    return {\n      match_all: {}\n    };\n  } else {\n    words = (function() {\n      var j, len, ref, results;\n      ref = XRegExp.split(queryString, XRegExp('\\\\p{Z}'));\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        w = ref[j];\n        if (w !== '') {\n          results.push(w);\n        }\n      }\n      return results;\n    })();\n    buildQueryMultiMatch = function(word, fields) {\n      return {\n        multi_match: {\n          query: word,\n          type: 'best_fields',\n          fields: fields\n        }\n      };\n    };\n    return {\n      bool: {\n        must: (function() {\n          var j, len, results;\n          results = [];\n          for (j = 0, len = words.length; j < len; j++) {\n            word = words[j];\n            results.push(buildQueryMultiMatch(word, Config.query_fields));\n          }\n          return results;\n        })()\n      }\n    };\n  }\n};\n\nbuildFilter = function() {\n  var filters;\n  filters = buildFacetFilters();\n  if (!filters) {\n    return {};\n  } else {\n    return {\n      bool: {\n        must: filters\n      }\n    };\n  }\n};\n\nbuildFacetFilters = function() {\n  var buildTerms, facet, j, len, obj, ref, results;\n  buildTerms = function(terms) {\n    var results, selected, term;\n    results = [];\n    for (term in terms) {\n      selected = terms[term];\n      if (selected === true) {\n        results.push(term);\n      }\n    }\n    return results;\n  };\n  ref = State.select('filter', 'facets').get();\n  results = [];\n  for (j = 0, len = ref.length; j < len; j++) {\n    facet = ref[j];\n    if (buildTerms(facet.selectedTerms).length) {\n      results.push({\n        terms: (\n          obj = {},\n          obj[\"\" + facet.name] = buildTerms(facet.selectedTerms),\n          obj\n        )\n      });\n    }\n  }\n  return results;\n};\n\nbuildAggregations = function() {\n  var facet, facets, filters;\n  facets = State.select('filter', 'facets').get();\n  if (!facets.length) {\n    return {};\n  } else {\n    filters = buildFacetFilters();\n    return {\n      facets: {\n        global: {},\n        aggs: _.object((function() {\n          var j, len, results;\n          results = [];\n          for (j = 0, len = facets.length; j < len; j++) {\n            facet = facets[j];\n            results.push([facet.name, buildAggregation(facet, filters)]);\n          }\n          return results;\n        })())\n      }\n    };\n  }\n};\n\nbuildAggregation = function(facet, filters) {\n  var filter, j, len, match, otherFilters, query, ref, terms;\n  otherFilters = (function() {\n    var j, len, results;\n    results = [];\n    for (j = 0, len = filters.length; j < len; j++) {\n      filter = filters[j];\n      if (!(facet.name in filter.terms)) {\n        results.push(filter);\n      }\n    }\n    return results;\n  })();\n  query = buildQuery();\n  if ('bool' in query) {\n    ref = query.bool.must;\n    for (j = 0, len = ref.length; j < len; j++) {\n      match = ref[j];\n      otherFilters.push({\n        query: match\n      });\n    }\n  }\n  terms = {\n    field: facet.name,\n    order: {\n      _term: 'asc'\n    },\n    min_doc_count: 1,\n    size: 0\n  };\n  if (!otherFilters.length) {\n    return {\n      terms: terms\n    };\n  } else {\n    return {\n      filter: {\n        bool: {\n          must: otherFilters\n        }\n      },\n      aggs: {\n        facet: {\n          terms: terms\n        }\n      }\n    };\n  }\n};\n\nmodule.exports = {\n  search: search\n};\n\n\n},{\"./config\":8,\"./state\":11,\"xregexp\":25}],10:[function(require,module,exports){\nvar Actions, Celllines, Elastic, Filter, Search, State, TotalCount, onFilterUpdate;\n\nElastic = require('./elastic');\n\nState = require('./state');\n\nActions = require('./actions');\n\nFilter = require('./components/filter');\n\nSearch = require('./components/search');\n\nCelllines = require('./components/celllines');\n\nTotalCount = require('./components/total-count');\n\nif (sessionStorage.getItem('filter')) {\n  Actions.loadFilter();\n} else {\n  Actions.initFilter();\n}\n\nonFilterUpdate = function() {\n  Actions.saveFilter();\n  return Elastic.search();\n};\n\nState.select('filter').on('update', _.debounce(onFilterUpdate, 150));\n\nReact.render(React.createElement(TotalCount, null), document.getElementById('total-count'));\n\nReact.render(React.createElement(Filter, null), document.getElementById('filter'));\n\nReact.render(React.createElement(Search, null), document.getElementById('search'));\n\nReact.render(React.createElement(Celllines, null), document.getElementById('celllines'));\n\n\n},{\"./actions\":1,\"./components/celllines\":2,\"./components/filter\":4,\"./components/search\":5,\"./components/total-count\":7,\"./elastic\":9,\"./state\":11}],11:[function(require,module,exports){\nvar Baobab, options, state;\n\nBaobab = require('baobab');\n\nstate = {\n  filter: {\n    query: '',\n    facets: [],\n    orderBy: null\n  },\n  facetTerms: {},\n  celllines: [],\n  isLoaded: false\n};\n\noptions = {\n  shiftReferences: true,\n  mixins: [React.addons.PureRenderMixin]\n};\n\nmodule.exports = new Baobab(state, options);\n\n\n},{\"baobab\":13}],12:[function(require,module,exports){\n/**\n * Baobab Default Options\n * =======================\n *\n */\nmodule.exports = {\n\n  // Should the tree handle its transactions on its own?\n  autoCommit: true,\n\n  // Should the transactions be handled asynchronously?\n  asynchronous: true,\n\n  // Should the tree clone data when giving it back to the user?\n  clone: false,\n\n  // Which cloning function should the tree use?\n  cloningFunction: null,\n\n  // Should cursors be singletons?\n  cursorSingletons: true,\n\n  // Maximum records in the tree's history\n  maxHistory: 0,\n\n  // Collection of react mixins to merge with the tree's ones\n  mixins: [],\n\n  // Should the tree shift its internal reference when applying mutations?\n  shiftReferences: false,\n\n  // Custom typology object to use along with the validation utilities\n  typology: null,\n\n  // Validation specifications\n  validate: null\n};\n\n},{}],13:[function(require,module,exports){\n/**\n * Baobab Public Interface\n * ========================\n *\n * Exposes the main library classes.\n */\nvar Baobab = require('./src/baobab.js'),\n    helpers = require('./src/helpers.js');\n\n// Non-writable version\nObject.defineProperty(Baobab, 'version', {\n  value: '0.4.4'\n});\n\n// Exposing helpers\nBaobab.getIn = helpers.getIn;\n\n// Exporting\nmodule.exports = Baobab;\n\n},{\"./src/baobab.js\":14,\"./src/helpers.js\":17}],14:[function(require,module,exports){\n/**\n * Baobab Data Structure\n * ======================\n *\n * A handy data tree with cursors.\n */\nvar Cursor = require('./cursor.js'),\n    EventEmitter = require('emmett'),\n    Typology = require('typology'),\n    helpers = require('./helpers.js'),\n    update = require('./update.js'),\n    merge = require('./merge.js'),\n    mixins = require('./mixins.js'),\n    defaults = require('../defaults.js'),\n    type = require('./type.js');\n\nfunction complexHash(type) {\n  return type + '$' +\n    (new Date()).getTime() + (''  + Math.random()).replace('0.', '');\n}\n\n/**\n * Main Class\n */\nfunction Baobab(initialData, opts) {\n  if (arguments.length < 1)\n    initialData = {};\n\n  // New keyword optional\n  if (!(this instanceof Baobab))\n    return new Baobab(initialData, opts);\n\n  if (!type.Object(initialData) && !type.Array(initialData))\n    throw Error('Baobab: invalid data.');\n\n  // Extending\n  EventEmitter.call(this);\n\n  // Merging defaults\n  this.options = helpers.shallowMerge(defaults, opts);\n  this._cloner = this.options.cloningFunction || helpers.deepClone;\n\n  // Privates\n  this._transaction = {};\n  this._future = undefined;\n  this._history = [];\n  this._cursors = {};\n\n  // Internal typology\n  this.typology = this.options.typology ?\n    (this.options.typology instanceof Typology ?\n      this.options.typology :\n      new Typology(this.options.typology)) :\n    new Typology();\n\n  // Internal validation\n  this.validate = this.options.validate || null;\n\n  if (this.validate)\n    try {\n      this.typology.check(initialData, this.validate, true);\n    }\n    catch (e) {\n      e.message = '/' + e.path.join('/') + ': ' + e.message;\n      throw e;\n    }\n\n  // Properties\n  this.data = this._cloner(initialData);\n\n  // Mixin\n  this.mixin = mixins.baobab(this);\n}\n\nhelpers.inherits(Baobab, EventEmitter);\n\n/**\n * Private prototype\n */\nBaobab.prototype._archive = function() {\n  if (this.options.maxHistory <= 0)\n    return;\n\n  var record = {\n    data: this._cloner(this.data)\n  };\n\n  // Replacing\n  if (this._history.length === this.options.maxHistory) {\n    this._history.pop();\n  }\n  this._history.unshift(record);\n\n  return record;\n};\n\n/**\n * Prototype\n */\nBaobab.prototype.commit = function(referenceRecord) {\n  var self = this,\n      log;\n\n  if (referenceRecord) {\n\n    // Override\n    this.data = referenceRecord.data;\n    log = referenceRecord.log;\n  }\n  else {\n\n    // Shifting root reference\n    if (this.options.shiftReferences)\n      this.data = helpers.shallowClone(this.data);\n\n    // Applying modification (mutation)\n    var record = this._archive();\n    log = update(this.data, this._transaction, this.options);\n\n    if (record)\n      record.log = log;\n  }\n\n  if (this.validate) {\n    var errors = [],\n        l = log.length,\n        d,\n        i;\n\n    for (i = 0; i < l; i++) {\n      d = helpers.getIn(this.validate, log[i]);\n\n      if (!d)\n        continue;\n\n      try {\n        this.typology.check(this.get(log[i]), d, true);\n      }\n      catch (e) {\n        e.path = log[i].concat((e.path || []));\n        errors.push(e);\n      }\n    }\n\n    if (errors.length)\n      this.emit('invalid', {errors: errors});\n  }\n\n  // Resetting\n  this._transaction = {};\n\n  if (this._future)\n    this._future = clearTimeout(this._future);\n\n  // Baobab-level update event\n  this.emit('update', {\n    log: log\n  });\n\n  return this;\n};\n\nBaobab.prototype.select = function(path) {\n  if (!path)\n    throw Error('Baobab.select: invalid path.');\n\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.select: invalid path.');\n\n  // Casting to array\n  path = !type.Array(path) ? [path] : path;\n\n  // Complex path?\n  var complex = type.ComplexPath(path);\n\n  var solvedPath;\n\n  if (complex)\n    solvedPath = helpers.solvePath(this.data, path);\n\n  // Registering a new cursor or giving the already existing one for path\n  if (!this.options.cursorSingletons) {\n    return new Cursor(this, path);\n  }\n  else {\n    var hash = path.map(function(step) {\n      if (type.Function(step))\n        return complexHash('fn');\n      else if (type.Object(step))\n        return complexHash('ob');\n      else\n        return step;\n    }).join('λ');\n\n    if (!this._cursors[hash]) {\n      var cursor = new Cursor(this, path, solvedPath, hash);\n      this._cursors[hash] = cursor;\n      return cursor;\n    }\n    else {\n      return this._cursors[hash];\n    }\n  }\n};\n\nBaobab.prototype.root = function() {\n  return this.select([]);\n};\n\nBaobab.prototype.reference = function(path) {\n  var data;\n\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.get: invalid path.');\n\n  return helpers.getIn(\n    this.data, type.String(path) || type.Number(path) ? [path] : path\n  );\n};\n\nBaobab.prototype.get = function() {\n  var ref = this.reference.apply(this, arguments);\n\n  return this.options.clone ? this._cloner(ref) : ref;\n};\n\nBaobab.prototype.clone = function(path) {\n  return this._cloner(this.reference.apply(this, arguments));\n};\n\nBaobab.prototype.set = function(key, val) {\n\n  if (arguments.length < 2)\n    throw Error('Baobab.set: expects a key and a value.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(this.data, key);\n\n    if (!path)\n      throw Error('Baobab.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nBaobab.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('Baobab.unset: expects a valid key to unset.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n\n  return this.update(spec);\n};\n\nBaobab.prototype.update = function(spec) {\n  var self = this;\n\n  if (!type.Object(spec))\n    throw Error('Baobab.update: wrong specification.');\n\n  this._transaction = merge(spec, this._transaction);\n\n  // Should we let the user commit?\n  if (!this.options.autoCommit)\n    return this;\n\n  // Should we update synchronously?\n  if (!this.options.asynchronous)\n    return this.commit();\n\n  // Updating asynchronously\n  if (!this._future)\n    this._future = setTimeout(self.commit.bind(self, null), 0);\n\n  return this;\n};\n\nBaobab.prototype.hasHistory = function() {\n  return !!this._history.length;\n};\n\nBaobab.prototype.getHistory = function() {\n  return this._history;\n};\n\nBaobab.prototype.undo = function() {\n  if (!this.hasHistory())\n    throw Error('Baobab.undo: no history recorded, cannot undo.');\n\n  var lastRecord = this._history.shift();\n  this.commit(lastRecord);\n};\n\nBaobab.prototype.release = function() {\n\n  delete this.data;\n  delete this._transaction;\n  delete this._history;\n\n  // Releasing cursors\n  for (var k in this._cursors)\n    this._cursors[k].release();\n  delete this._cursors;\n\n  // Killing event emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nBaobab.prototype.toJSON = function() {\n  return this.reference();\n};\n\n/**\n * Export\n */\nmodule.exports = Baobab;\n\n},{\"../defaults.js\":12,\"./cursor.js\":16,\"./helpers.js\":17,\"./merge.js\":18,\"./mixins.js\":19,\"./type.js\":20,\"./update.js\":21,\"emmett\":23,\"typology\":24}],15:[function(require,module,exports){\n/**\n * Baobab Cursor Combination\n * ==========================\n *\n * A useful abstraction dealing with cursor's update logical combinations.\n */\nvar EventEmitter = require('emmett'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Utilities\n */\nfunction bindCursor(c, cursor) {\n  cursor.on('update', c.cursorListener);\n  c.tree.off('update', c.treeListener);\n  c.tree.on('update', c.treeListener);\n}\n\n/**\n * Main Class\n */\nfunction Combination(operator /*, &cursors */) {\n  var self = this;\n\n  // Safeguard\n  if (arguments.length < 2)\n    throw Error('baobab.Combination: not enough arguments.');\n\n  var first = arguments[1],\n      rest = helpers.arrayOf(arguments).slice(2);\n\n  if (first instanceof Array) {\n    rest = first.slice(1);\n    first = first[0];\n  }\n\n  if (!type.Cursor(first))\n    throw Error('baobab.Combination: argument should be a cursor.');\n\n  if (operator !== 'or' && operator !== 'and')\n    throw Error('baobab.Combination: invalid operator.');\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Properties\n  this.cursors = [first];\n  this.operators = [];\n  this.tree = first.tree;\n\n  // State\n  this.updates = new Array(this.cursors.length);\n\n  // Listeners\n  this.cursorListener = function() {\n    self.updates[self.cursors.indexOf(this)] = true;\n  };\n\n  this.treeListener = function() {\n    var shouldFire = self.updates[0],\n        i,\n        l;\n\n    for (i = 1, l = self.cursors.length; i < l; i++) {\n      shouldFire = self.operators[i - 1] === 'or' ?\n        shouldFire || self.updates[i] :\n        shouldFire && self.updates[i];\n    }\n\n    if (shouldFire)\n      self.emit('update');\n\n    // Waiting for next update\n    self.updates = new Array(self.cursors.length);\n  };\n\n  // Lazy binding\n  this.bound = false;\n\n  var regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (self.bound)\n      return;\n    self.bound = true;\n    self.cursors.forEach(function(cursor) {\n      bindCursor(self, cursor);\n    });\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n\n  // Attaching any other passed cursors\n  rest.forEach(function(cursor) {\n    this[operator](cursor);\n  }, this);\n}\n\nhelpers.inherits(Combination, EventEmitter);\n\n/**\n * Prototype\n */\nfunction makeOperator(operator) {\n  Combination.prototype[operator] = function(cursor) {\n\n    // Safeguard\n    if (!type.Cursor(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': argument should be a cursor.');\n    }\n\n    if (~this.cursors.indexOf(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': cursor already in combination.');\n    }\n\n    this.cursors.push(cursor);\n    this.operators.push(operator);\n    this.updates.length++;\n\n    if (this.bound)\n      bindCursor(this, cursor);\n\n    return this;\n  };\n}\n\nmakeOperator('or');\nmakeOperator('and');\n\nCombination.prototype.release = function() {\n\n  // Dropping cursors listeners\n  this.cursors.forEach(function(cursor) {\n    cursor.off('update', this.cursorListener);\n  }, this);\n\n  // Dropping tree listener\n  this.tree.off('update', this.treeListener);\n\n  // Cleaning\n  this.cursors = null;\n  this.operators = null;\n  this.tree = null;\n  this.updates = null;\n\n  // Dropping own listeners\n  this.kill();\n};\n\n/**\n * Exporting\n */\nmodule.exports = Combination;\n\n},{\"./helpers.js\":17,\"./type.js\":20,\"emmett\":23}],16:[function(require,module,exports){\n/**\n * Baobab Cursor Abstraction\n * ==========================\n *\n * Nested selection into a baobab tree.\n */\nvar EventEmitter = require('emmett'),\n    Combination = require('./combination.js'),\n    mixins = require('./mixins.js'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Main Class\n */\nfunction Cursor(tree, path, solvedPath, hash) {\n  var self = this;\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Enforcing array\n  path = path || [];\n\n  // Properties\n  this.tree = tree;\n  this.path = path;\n  this.hash = hash;\n  this.relevant = this.reference() !== undefined;\n\n  // Complex path?\n  this.complexPath = !!solvedPath;\n  this.solvedPath = this.complexPath ? solvedPath : this.path;\n\n  // Root listeners\n  this.updateHandler = function(e) {\n    var log = e.data.log,\n        shouldFire = false,\n        c, p, l, m, i, j;\n\n    // Solving path if needed\n    if (self.complexPath)\n      self.solvedPath = helpers.solvePath(self.tree.data, self.path);\n\n    // If selector listens at tree, we fire\n    if (!self.path.length)\n      return self.emit('update');\n\n    // Checking update log to see whether the cursor should update.\n    outer:\n    for (i = 0, l = log.length; i < l; i++) {\n      c = log[i];\n\n      for (j = 0, m = c.length; j < m; j++) {\n        p = c[j];\n\n        // If path is not relevant to us, we break\n        if (p !== '' + self.solvedPath[j])\n          break;\n\n        // If we reached last item and we are relevant, we fire\n        if (j + 1 === m || j + 1 === self.solvedPath.length) {\n          shouldFire = true;\n          break outer;\n        }\n      }\n    }\n\n    // Handling relevancy\n    var data = self.reference() !== undefined;\n\n    if (self.relevant) {\n      if (data && shouldFire) {\n        self.emit('update');\n      }\n      else if (!data) {\n        self.emit('irrelevant');\n        self.relevant = false;\n      }\n    }\n    else {\n      if (data && shouldFire) {\n        self.emit('relevant');\n        self.emit('update');\n        self.relevant = true;\n      }\n    }\n  };\n\n  // Making mixin\n  this.mixin = mixins.cursor(this);\n\n  // Lazy binding\n  var bound = false,\n      regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (bound)\n      return;\n    bound = true;\n    self.tree.on('update', self.updateHandler);\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n}\n\nhelpers.inherits(Cursor, EventEmitter);\n\n/**\n * Predicates\n */\nCursor.prototype.isRoot = function() {\n  return !this.path.length;\n};\n\nCursor.prototype.isLeaf = function() {\n  return type.Primitive(this.reference());\n};\n\nCursor.prototype.isBranch = function() {\n  return !this.isLeaf() && !this.isRoot();\n};\n\n/**\n * Traversal\n */\nCursor.prototype.root = function() {\n  return this.tree.root();\n};\n\nCursor.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('baobab.Cursor.select: invalid path.');\n  return this.tree.select(this.path.concat(path));\n};\n\nCursor.prototype.up = function() {\n  if (this.solvedPath && this.solvedPath.length)\n    return this.tree.select(this.path.slice(0, -1));\n  else\n    return null;\n};\n\nCursor.prototype.left = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.left: cannot go left on a non-list type.');\n\n  return last ?\n    this.tree.select(this.solvedPath.slice(0, -1).concat(last - 1)) :\n    null;\n};\n\nCursor.prototype.leftmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.leftmost: cannot go left on a non-list type.');\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(0));\n};\n\nCursor.prototype.right = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  if (last + 1 === this.up().reference().length)\n    return null;\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(last + 1));\n};\n\nCursor.prototype.rightmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  var list = this.up().reference();\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(list.length - 1));\n};\n\nCursor.prototype.down = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (!(this.reference() instanceof Array))\n    return null;\n\n  return this.tree.select(this.solvedPath.concat(0));\n};\n\n/**\n * Access\n */\nCursor.prototype.get = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.get(this.solvedPath.concat(path));\n  else\n    return this.tree.get(this.solvedPath);\n};\n\nCursor.prototype.reference = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.reference(this.solvedPath.concat(path));\n  else\n    return this.tree.reference(this.solvedPath);\n};\n\nCursor.prototype.clone = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.clone(this.solvedPath.concat(path));\n  else\n    return this.tree.clone(this.solvedPath);\n};\n\n/**\n * Update\n */\nCursor.prototype.set = function(key, val) {\n  if (arguments.length < 2)\n    throw Error('baobab.Cursor.set: expecting at least key/value.');\n\n  var data = this.reference();\n\n  if (typeof data !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(data, key);\n\n    if (!path)\n      throw Error('baobab.Cursor.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nCursor.prototype.edit = function(val) {\n  return this.update({$set: val});\n};\n\nCursor.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('baobab.Cursor.unset: expects a valid key to unset.');\n\n  if (typeof this.reference() !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n  return this.update(spec);\n};\n\nCursor.prototype.remove = function() {\n  if (this.isRoot())\n    throw Error('baobab.Cursor.remove: cannot remove root node.');\n\n  return this.update({$unset: true});\n};\n\nCursor.prototype.apply = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.apply: argument is not a function.');\n\n  return this.update({$apply: fn});\n};\n\nCursor.prototype.chain = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.chain: argument is not a function.');\n\n  return this.update({$chain: fn});\n};\n\nCursor.prototype.push = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$push: helpers.arrayOf(arguments)});\n  else\n    return this.update({$push: value});\n};\n\nCursor.prototype.unshift = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$unshift: helpers.arrayOf(arguments)});\n  else\n    return this.update({$unshift: value});\n};\n\nCursor.prototype.merge = function(o) {\n  if (!type.Object(o))\n    throw Error('baobab.Cursor.merge: trying to merge a non-object.');\n\n  if (!type.Object(this.reference()))\n    throw Error('baobab.Cursor.merge: trying to merge into a non-object.');\n\n  this.update({$merge: o});\n};\n\nCursor.prototype.update = function(spec) {\n  this.tree.update(helpers.pathObject(this.solvedPath, spec));\n  return this;\n};\n\n/**\n * Combination\n */\nCursor.prototype.or = function(otherCursor) {\n  return new Combination('or', this, otherCursor);\n};\n\nCursor.prototype.and = function(otherCursor) {\n  return new Combination('and', this, otherCursor);\n};\n\n/**\n * Releasing\n */\nCursor.prototype.release = function() {\n\n  // Removing listener on parent\n  this.tree.off('update', this.updateHandler);\n\n  // If the cursor is hashed, we unsubscribe from the parent\n  if (this.hash)\n    delete this.tree._cursors[this.hash];\n\n  // Dereferencing\n  delete this.tree;\n  delete this.path;\n  delete this.solvedPath;\n\n  // Killing emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nCursor.prototype.toJSON = function() {\n  return this.reference();\n};\n\ntype.Cursor = function (value) {\n  return value instanceof Cursor;\n};\n\n/**\n * Export\n */\nmodule.exports = Cursor;\n\n},{\"./combination.js\":15,\"./helpers.js\":17,\"./mixins.js\":19,\"./type.js\":20,\"emmett\":23}],17:[function(require,module,exports){\n(function (global){\n/**\n * Baobab Helpers\n * ===============\n *\n * Miscellaneous helper functions.\n */\nvar type = require('./type.js');\n\n// Make a real array of an array-like object\nfunction arrayOf(o) {\n  return Array.prototype.slice.call(o);\n}\n\n// Shallow merge\nfunction shallowMerge(o1, o2) {\n  var o = {},\n      k;\n\n  for (k in o1) o[k] = o1[k];\n  for (k in o2) o[k] = o2[k];\n\n  return o;\n}\n\n// Clone a regexp\nfunction cloneRegexp(re) {\n  var pattern = re.source,\n      flags = '';\n\n  if (re.global) flags += 'g';\n  if (re.multiline) flags += 'm';\n  if (re.ignoreCase) flags += 'i';\n  if (re.sticky) flags += 'y';\n  if (re.unicode) flags += 'u';\n\n  return new RegExp(pattern, flags);\n}\n\n// Cloning function\nfunction clone(deep, item) {\n  if (!item ||\n      typeof item !== 'object' ||\n      item instanceof Error ||\n      ('ArrayBuffer' in global && item instanceof ArrayBuffer))\n    return item;\n\n  // Array\n  if (type.Array(item)) {\n    if (deep) {\n      var i, l, a = [];\n      for (i = 0, l = item.length; i < l; i++)\n        a.push(deepClone(item[i]));\n      return a;\n    }\n    else {\n      return item.slice(0);\n    }\n  }\n\n  // Date\n  if (type.Date(item))\n    return new Date(item.getTime());\n\n  // RegExp\n  if (item instanceof RegExp)\n    return cloneRegexp(item);\n\n  // Object\n  if (type.Object(item)) {\n    var k, o = {};\n\n    if (item.constructor && item.constructor !== Object)\n      o = Object.create(item.constructor.prototype);\n\n    for (k in item)\n      if (item.hasOwnProperty(k))\n        o[k] = deep ? deepClone(item[k]) : item[k];\n    return o;\n  }\n\n  return item;\n}\n\n// Shallow & deep cloning functions\nvar shallowClone = clone.bind(null, false),\n    deepClone = clone.bind(null, true);\n\n// Simplistic composition\nfunction compose(fn1, fn2) {\n  return function(arg) {\n    return fn2(fn1(arg));\n  };\n}\n\n// Get first item matching predicate in list\nfunction first(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return a[i];\n  }\n  return;\n}\n\nfunction index(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return i;\n  }\n  return -1;\n}\n\n// Compare object to spec\nfunction compare(object, spec) {\n  var ok = true,\n      k;\n\n  // If we reached here via a recursive call, object may be undefined because\n  // not all items in a collection will have the same deep nesting structure\n  if (!object) {\n    return false;\n  }\n\n  for (k in spec) {\n    if (type.Object(spec[k])) {\n      ok = ok && compare(object[k], spec[k]);\n    }\n    else if (type.Array(spec[k])) {\n      ok = ok && !!~spec[k].indexOf(object[k]);\n    }\n    else {\n      if (object[k] !== spec[k])\n        return false;\n    }\n  }\n\n  return ok;\n}\n\nfunction firstByComparison(object, spec) {\n  return first(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\nfunction indexByComparison(object, spec) {\n  return index(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\n// Retrieve nested objects\nfunction getIn(object, path) {\n  path = path || [];\n\n  var c = object,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      c = first(c, path[i]);\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      c = firstByComparison(c, path[i]);\n    }\n    else {\n      c = c[path[i]];\n    }\n  }\n\n  return c;\n}\n\n// Solve a complex path\nfunction solvePath(object, path) {\n  var solvedPath = [],\n      c = object,\n      idx,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return null;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      idx = index(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      idx = indexByComparison(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else {\n      solvedPath.push(path[i]);\n      c = c[path[i]] || {};\n    }\n  }\n\n  return solvedPath;\n}\n\n// Return a fake object relative to the given path\nfunction pathObject(path, spec) {\n  var l = path.length,\n      o = {},\n      c = o,\n      i;\n\n  if (!l)\n    o = spec;\n\n  for (i = 0; i < l; i++) {\n    c[path[i]] = (i + 1 === l) ? spec : {};\n    c = c[path[i]];\n  }\n\n  return o;\n}\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\nmodule.exports = {\n  arrayOf: arrayOf,\n  deepClone: deepClone,\n  shallowClone: shallowClone,\n  shallowMerge: shallowMerge,\n  compose: compose,\n  getIn: getIn,\n  inherits: inherits,\n  pathObject: pathObject,\n  solvePath: solvePath\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./type.js\":20}],18:[function(require,module,exports){\n/**\n * Baobab Merge\n * =============\n *\n * A function used to merge updates in the stack.\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n// Helpers\nfunction hasKey(o, key) {\n  return key in (o || {});\n}\n\nfunction conflict(a, b, key) {\n  return hasKey(a, key) && hasKey(b, key);\n}\n\n// Main function\nfunction merge() {\n  var res = {},\n      current,\n      next,\n      l = arguments.length,\n      i,\n      k;\n\n  for (i = l - 1; i >= 0; i--) {\n\n    // Upper $set/$apply... and conflicts\n    // When solving conflicts, here is the priority to apply:\n    // -- 0) $unset\n    // -- 1) $set\n    // -- 2) $merge\n    // -- 3) $apply\n    // -- 4) $chain\n    if (arguments[i].$unset) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$merge;\n      res.$unset = arguments[i].$unset;\n    }\n    else if (arguments[i].$set) {\n      delete res.$apply;\n      delete res.$merge;\n      delete res.$unset;\n      res.$set = arguments[i].$set;\n      continue;\n    }\n    else if (arguments[i].$merge) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$unset;\n      res.$merge = arguments[i].$merge;\n      continue;\n    }\n    else if (arguments[i].$apply){\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n      res.$apply = arguments[i].$apply;\n      continue;\n    }\n    else if (arguments[i].$chain) {\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n\n      if (res.$apply)\n        res.$apply = helpers.compose(res.$apply, arguments[i].$chain);\n      else\n        res.$apply = arguments[i].$chain;\n      continue;\n    }\n\n    for (k in arguments[i]) {\n      current = res[k];\n      next = arguments[i][k];\n\n      if (current && type.Object(next)) {\n\n        // $push conflict\n        if (conflict(current, next, '$push')) {\n          if (type.Array(current.$push))\n            current.$push = current.$push.concat(next.$push);\n          else\n            current.$push = [current.$push].concat(next.$push);\n        }\n\n        // $unshift conflict\n        else if (conflict(current, next, '$unshift')) {\n          if (type.Array(next.$unshift))\n            current.$unshift = next.$unshift.concat(current.$unshift);\n          else\n            current.$unshift = [next.$unshift].concat(current.$unshift);\n        }\n\n        // No conflict\n        else {\n          res[k] = merge(next, current);\n        }\n      }\n      else {\n        res[k] = next;\n      }\n    }\n  }\n\n  return res;\n}\n\nmodule.exports = merge;\n\n},{\"./helpers.js\":17,\"./type.js\":20}],19:[function(require,module,exports){\n/**\n * Baobab React Mixins\n * ====================\n *\n * Compilation of react mixins designed to deal with cursors integration.\n */\nvar Combination = require('./combination.js'),\n    type = require('./type.js');\n\nmodule.exports = {\n  baobab: function(baobab) {\n    return {\n\n      // Run Baobab mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding baobab to instance\n          this.tree = baobab;\n\n          // Is there any cursors to create?\n          if (!this.cursor && !this.cursors)\n            return {};\n\n          // Is there conflicting definitions?\n          if (this.cursor && this.cursors)\n            throw Error('baobab.mixin: you cannot have both ' +\n                        '`component.cursor` and `component.cursors`. Please ' +\n                        'make up your mind.');\n\n          // Type\n          this.__type = null;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState(this.__getCursorData());\n          }).bind(this);\n\n          if (this.cursor) {\n            if (!type.MixinCursor(this.cursor))\n              throw Error('baobab.mixin.cursor: invalid data (cursor, ' +\n                          'string, array or function).');\n\n            if (type.Function(this.cursor))\n              this.cursor = this.cursor();\n\n            if (!type.Cursor(this.cursor))\n              this.cursor = baobab.select(this.cursor);\n\n            this.__getCursorData = (function() {\n              return {cursor: this.cursor.get()};\n            }).bind(this);\n            this.__type = 'single';\n          }\n          else if (this.cursors) {\n            if (!type.MixinCursors(this.cursors))\n              throw Error('baobab.mixin.cursor: invalid data (object, array or function).');\n\n            if (type.Function(this.cursors))\n              this.cursors = this.cursors();\n\n            if (type.Array(this.cursors)) {\n              this.cursors = this.cursors.map(function(path) {\n                return type.Cursor(path) ? path : baobab.select(path);\n              });\n\n              this.__getCursorData = (function() {\n                return {cursors: this.cursors.map(function(cursor) {\n                  return cursor.get();\n                })};\n              }).bind(this);\n              this.__type = 'array';\n            }\n            else {\n              for (var k in this.cursors) {\n                if (!type.Cursor(this.cursors[k]))\n                  this.cursors[k] = baobab.select(this.cursors[k]);\n              }\n\n              this.__getCursorData = (function() {\n                var d = {};\n                for (k in this.cursors)\n                  d[k] = this.cursors[k].get();\n                return {cursors: d};\n              }).bind(this);\n              this.__type = 'object';\n            }\n          }\n\n          return this.__getCursorData();\n        },\n        componentDidMount: function() {\n          if (this.__type === 'single') {\n            this.__combination = new Combination('or', [this.cursor]);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'array') {\n            this.__combination = new Combination('or', this.cursors);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'object') {\n            this.__combination = new Combination(\n              'or',\n              Object.keys(this.cursors).map(function(k) {\n                return this.cursors[k];\n              }, this)\n            );\n            this.__combination.on('update', this.__updateHandler);\n          }\n        },\n        componentWillUnmount: function() {\n          if (this.__combination)\n            this.__combination.release();\n        }\n      }].concat(baobab.options.mixins)\n    };\n  },\n  cursor: function(cursor) {\n    return {\n\n      // Run cursor mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding cursor to instance\n          this.cursor = cursor;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState({cursor: this.cursor.get()});\n          }).bind(this);\n\n          return {cursor: this.cursor.get()};\n        },\n        componentDidMount: function() {\n\n          // Listening to updates\n          this.cursor.on('update', this.__updateHandler);\n        },\n        componentWillUnmount: function() {\n\n          // Unbinding handler\n          this.cursor.off('update', this.__updateHandler);\n        }\n      }].concat(cursor.tree.options.mixins)\n    };\n  }\n};\n\n},{\"./combination.js\":15,\"./type.js\":20}],20:[function(require,module,exports){\n/**\n * Baobab Type Checking\n * =====================\n *\n * Misc helpers functions used throughout the library to perform some type\n * tests at runtime.\n *\n * @christianalfoni\n */\n\n// Not reusing methods as it will just be an extra\n// call on the stack\nvar type = function (value) {\n  if (Array.isArray(value)) {\n    return 'array';\n  } else if (typeof value === 'object' && value !== null) {\n    return 'object';\n  } else if (typeof value === 'string') {\n    return 'string';\n  } else if (typeof value === 'number') {\n    return 'number';\n  } else if (typeof value === 'boolean') {\n    return 'boolean';\n  } else if (typeof value === 'function') {\n    return 'function';\n  } else if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  } else if (value instanceof Date) {\n    return 'date';\n  } else {\n    return 'invalid';\n  }\n};\n\ntype.Array = function (value) {\n  return Array.isArray(value);\n};\n\ntype.Object = function (value) {\n  return !Array.isArray(value) && typeof value === 'object' && value !== null;\n};\n\ntype.String = function (value) {\n  return typeof value === 'string';\n};\n\ntype.Number = function (value) {\n  return typeof value === 'number';\n};\n\ntype.Boolean = function (value) {\n  return typeof value === 'boolean';\n};\n\ntype.Function = function (value) {\n  return typeof value === 'function';\n};\n\ntype.Primitive = function (value) {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\n};\n\ntype.Date = function (value) {\n  return value instanceof Date;\n};\n\ntype.Step = function (value) {\n  var valueType = type(value);\n  var notValid = ['null', 'undefined', 'invalid', 'date'];\n  return notValid.indexOf(valueType) === -1;\n};\n\n// Should undefined be allowed?\ntype.Path = function (value) {\n  var types = ['object', 'string', 'number', 'function', 'undefined'];\n  if (type.Array(value)) {\n    for (var x = 0; x < value.length; x++) {\n      if (types.indexOf(type(value[x])) === -1) {\n        return false;\n      }\n    }\n  } else {\n    return types.indexOf(type(value)) >= 0;\n  }\n  return true;\n\n};\n\n// string|number|array|cursor|function\ntype.MixinCursor = function (value) {\n  var allowedValues = ['string', 'number', 'array', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0 || type.Cursor(value);\n};\n\n// array|object|function\ntype.MixinCursors = function (value) {\n  var allowedValues = ['array', 'object', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0;\n};\n\n// Already know this is an array\ntype.ComplexPath = function (value) {\n  var complexTypes = ['object', 'function'];\n  for (var x = 0; x < value.length; x++) {\n    if (complexTypes.indexOf(type(value[x])) >= 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = type;\n\n},{}],21:[function(require,module,exports){\n/**\n * Baobab Update\n * ==============\n *\n * A handy method to mutate an atom according to the given specification.\n * Mostly inspired by http://facebook.github.io/react/docs/update.html\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\nvar COMMANDS = {};\n[\n  '$set',\n  '$push',\n  '$unshift',\n  '$apply',\n  '$merge'\n].forEach(function(c) {\n  COMMANDS[c] = true;\n});\n\n// Helpers\nfunction makeError(path, message) {\n  var e = new Error('baobab.update: ' + message + ' at path /' +\n                    path.toString());\n\n  e.path = path;\n  return e;\n}\n\n// Core function\nfunction update(target, spec, opts) {\n  opts = opts || {shiftReferences: false};\n  var log = {};\n\n  // Closure mutating the internal object\n  (function mutator(o, spec, path, parent) {\n    path = path || [];\n\n    var hash = path.join('λ'),\n        fn,\n        h,\n        k,\n        v;\n\n    for (k in spec) {\n      if (COMMANDS[k]) {\n        v = spec[k];\n\n        // Logging update\n        log[hash] = true;\n\n        // TODO: this could be before in the recursion\n        // Applying\n        switch (k) {\n          case '$push':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $push to a non array');\n\n            if (!type.Array(v))\n              o.push(v);\n            else\n              o.push.apply(o, v);\n            break;\n          case '$unshift':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $unshift to a non array');\n\n            if (!type.Array(v))\n              o.unshift(v);\n            else\n              o.unshift.apply(o, v);\n            break;\n        }\n      }\n      else {\n        h = hash ? hash + 'λ' + k : k;\n\n        if ('$unset' in (spec[k] || {})) {\n\n          // Logging update\n          log[h] = true;\n\n          if (type.Array(o)) {\n            if (!opts.shiftReferences)\n              o.splice(k, 1);\n            else\n              parent[path[path.length - 1]] = o.slice(0, +k).concat(o.slice(+k + 1));\n          }\n          else {\n            delete o[k];\n          }\n        }\n        else if ('$set' in (spec[k] || {})) {\n          v = spec[k].$set;\n\n          // Logging update\n          log[h] = true;\n          o[k] = v;\n        }\n        else if ('$apply' in (spec[k] || {}) || '$chain' in (spec[k] || {})) {\n\n          // TODO: this should not happen likewise.\n          fn = spec[k].$apply || spec[k].$chain;\n\n          if (typeof fn !== 'function')\n            throw makeError(path.concat(k), 'using command $apply with a non function');\n\n          // Logging update\n          log[h] = true;\n          o[k] = fn.call(null, o[k]);\n        }\n        else if ('$merge' in (spec[k] || {})) {\n          v = spec[k].$merge;\n\n          if (!type.Object(o[k]))\n            throw makeError(path.concat(k), 'using command $merge on a non-object');\n\n          // Logging update\n          log[h] = true;\n          o[k] = helpers.shallowMerge(o[k], v);\n        }\n        else if (opts.shiftReferences &&\n                 ('$push' in (spec[k] || {}) ||\n                  '$unshift' in (spec[k] || {}))) {\n          if ('$push' in (spec[k] || {})) {\n            v = spec[k].$push;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $push to a non array');\n            o[k] = o[k].concat(v);\n          }\n          if ('$unshift' in (spec[k] || {})) {\n            v = spec[k].$unshift;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $unshift to a non array');\n            o[k] = (v instanceof Array ? v : [v]).concat(o[k]);\n          }\n\n          // Logging update\n          log[h] = true;\n        }\n        else {\n\n          // If nested object does not exist, we create it\n          if (typeof o[k] === 'undefined')\n            o[k] = {};\n\n          // Shifting reference\n          if (opts.shiftReferences)\n            o[k] = helpers.shallowClone(o[k]);\n\n          // Recur\n          // TODO: fix this horrendous behaviour.\n          mutator(\n            o[k],\n            spec[k],\n            path.concat(k),\n            o\n          );\n        }\n      }\n    }\n  })(target, spec);\n\n  return Object.keys(log).map(function(hash) {\n    return hash.split('λ');\n  });\n}\n\n// Exporting\nmodule.exports = update;\n\n},{\"./helpers.js\":17,\"./type.js\":20}],22:[function(require,module,exports){\n/*!\n  Copyright (c) 2015 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\nfunction classNames() {\n\tvar classes = '';\n\tvar arg;\n\n\tfor (var i = 0; i < arguments.length; i++) {\n\t\targ = arguments[i];\n\t\tif (!arg) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ('string' === typeof arg || 'number' === typeof arg) {\n\t\t\tclasses += ' ' + arg;\n\t\t} else if (Object.prototype.toString.call(arg) === '[object Array]') {\n\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\t\t} else if ('object' === typeof arg) {\n\t\t\tfor (var key in arg) {\n\t\t\t\tif (!arg.hasOwnProperty(key) || !arg[key]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tclasses += ' ' + key;\n\t\t\t}\n\t\t}\n\t}\n\treturn classes.substr(1);\n}\n\n// safely export classNames for node / browserify\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = classNames;\n}\n\n// safely export classNames for RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n\tdefine('classnames', [], function() {\n\t\treturn classNames;\n\t});\n}\n\n},{}],23:[function(require,module,exports){\n(function() {\n  'use strict';\n\n  /**\n   * Here is the list of every allowed parameter when using Emitter#on:\n   * @type {Object}\n   */\n  var __allowedOptions = {\n    once: 'boolean',\n    scope: 'object'\n  };\n\n\n  /**\n   * The emitter's constructor. It initializes the handlers-per-events store and\n   * the global handlers store.\n   *\n   * Emitters are useful for non-DOM events communication. Read its methods\n   * documentation for more information about how it works.\n   *\n   * @return {Emitter}         The fresh new instance.\n   */\n  var Emitter = function() {\n    this._enabled = true;\n    this._children = [];\n    this._handlers = {};\n    this._handlersAll = [];\n  };\n\n\n  /**\n   * This method binds one or more functions to the emitter, handled to one or a\n   * suite of events. So, these functions will be executed anytime one related\n   * event is emitted.\n   *\n   * It is also possible to bind a function to any emitted event by not\n   * specifying any event to bind the function to.\n   *\n   * Recognized options:\n   * *******************\n   *  - {?boolean} once   If true, the handlers will be unbound after the first\n   *                      execution. Default value: false.\n   *  - {?object}  scope  If a scope is given, then the listeners will be called\n   *                      with this scope as \"this\".\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.on('myEvent', function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on('myEvent', function(e) { console.log(e); }, { once: true });\n   *\n   * @param  {string}   event   The event to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >);\n   * > // Or:\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >   { once: true }}\n   * >);\n   *\n   * @param  {array}    events  The events to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > });\n   * > // Or:\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > }, { once: true });\n   *\n   * @param  {object}  bindings An object containing pairs event / function.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.on(function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on(function(e) { console.log(e); }, { once: true});\n   *\n   * @param  {function} handler The function to bind to every events.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.on = function(a, b, c) {\n    var i,\n        l,\n        k,\n        event,\n        eArray,\n        bindingObject;\n\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      eArray = typeof a === 'string' ?\n        [a] :\n        a;\n\n      for (i = 0, l = eArray.length; i !== l; i += 1) {\n        event = eArray[i];\n\n        // Check that event is not '':\n        if (!event)\n          continue;\n\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n\n        bindingObject = {\n          handler: b\n        };\n\n        for (k in c || {})\n          if (__allowedOptions[k])\n            bindingObject[k] = c[k];\n          else\n            throw new Error(\n              'The option \"' + k + '\" is not recognized by Emmett.'\n            );\n\n        this._handlers[event].push(bindingObject);\n      }\n\n    // Variant 3:\n    } else if (a && typeof a === 'object' && !Array.isArray(a))\n      for (event in a)\n        Emitter.prototype.on.call(this, event, a[event], b);\n\n    // Variant 4:\n    else if (typeof a === 'function') {\n      bindingObject = {\n        handler: a\n      };\n\n      for (k in c || {})\n        if (__allowedOptions[k])\n          bindingObject[k] = c[k];\n        else\n          throw new Error(\n            'The option \"' + k + '\" is not recognized by Emmett.'\n          );\n\n      this._handlersAll.push(bindingObject);\n    }\n\n    // No matching variant:\n    else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method works exactly as the previous #on, but will add an options\n   * object if none is given, and set the option \"once\" to true.\n   *\n   * The polymorphism works exactly as with the #on method.\n   */\n  Emitter.prototype.once = function(a, b, c) {\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      c = c || {};\n      c.once = true;\n      this.on(a, b, c);\n\n    // Variants 3 and 4:\n    } else if (\n      // Variant 3:\n      (a && typeof a === 'object' && !Array.isArray(a)) ||\n      // Variant 4:\n      (typeof a === 'function')\n    ) {\n      b = b || {};\n      b.once = true;\n      this.on(a, b);\n\n    // No matching variant:\n    } else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds one or more functions from events of the emitter. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.off('myEvent', myHandler);\n   *\n   * @param  {string}   event   The event to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.off(['myEvent1', 'myEvent2'], myHandler);\n   *\n   * @param  {array}    events  The events to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.off({\n   * >   myEvent1: myHandler1,\n   * >   myEvent2: myHandler2\n   * > });\n   *\n   * @param  {object} bindings An object containing pairs event / function.\n   * @return {Emitter}         Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.off(myHandler);\n   *\n   * @param  {function} handler The function to unbind from every events.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.off = function(events, handler) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    if (arguments.length === 1 && typeof eArray === 'function') {\n      handler = arguments[0];\n\n      // Handlers bound to events:\n      for (k in this._handlers) {\n        a = [];\n        for (i = 0, n = this._handlers[k].length; i !== n; i += 1)\n          if (this._handlers[k][i].handler !== handler)\n            a.push(this._handlers[k][i]);\n        this._handlers[k] = a;\n      }\n\n      a = [];\n      for (i = 0, n = this._handlersAll.length; i !== n; i += 1)\n        if (this._handlersAll[i].handler !== handler)\n          a.push(this._handlersAll[i]);\n      this._handlersAll = a;\n    }\n\n    else if (arguments.length === 2) {\n      for (i = 0, n = eArray.length; i !== n; i += 1) {\n        event = eArray[i];\n        if (this._handlers[event]) {\n          a = [];\n          for (j = 0, m = this._handlers[event].length; j !== m; j += 1)\n            if (this._handlers[event][j].handler !== handler)\n              a.push(this._handlers[event][j]);\n\n          this._handlers[event] = a;\n        }\n\n        if (this._handlers[event] && this._handlers[event].length === 0)\n          delete this._handlers[event];\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds every handlers attached to every or any events. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Usage:\n   * ******\n   * > myEmitter.unbindAll();\n   *\n   * @return {Emitter}      Returns this.\n   */\n  Emitter.prototype.unbindAll = function() {\n    var k;\n\n    this._handlersAll = [];\n    for (k in this._handlers)\n      delete this._handlers[k];\n\n    return this;\n  };\n\n\n  /**\n   * This method emits the specified event(s), and executes every handlers bound\n   * to the event(s).\n   *\n   * Use cases:\n   * **********\n   * > myEmitter.emit('myEvent');\n   * > myEmitter.emit('myEvent', myData);\n   * > myEmitter.emit(['myEvent1', 'myEvent2']);\n   * > myEmitter.emit(['myEvent1', 'myEvent2'], myData);\n   *\n   * @param  {string|array} events The event(s) to emit.\n   * @param  {object?}      data   The data.\n   * @return {Emitter}             Returns this.\n   */\n  Emitter.prototype.emit = function(events, data) {\n    var i,\n        n,\n        j,\n        m,\n        z,\n        a,\n        event,\n        child,\n        handlers,\n        eventName,\n        self = this,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    // Check that the emitter is enabled:\n    if (!this._enabled)\n      return this;\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, n = eArray.length; i !== n; i += 1) {\n      eventName = eArray[i];\n      handlers = (this._handlers[eventName] || []).concat(this._handlersAll);\n\n      if (handlers.length) {\n        event = {\n          type: eventName,\n          data: data || {},\n          target: this\n        };\n        a = [];\n\n        for (j = 0, m = handlers.length; j !== m; j += 1) {\n\n          // We have to verify that the handler still exists in the array,\n          // as it might have been mutated already\n          if (\n            (\n              this._handlers[eventName] &&\n              this._handlers[eventName].indexOf(handlers[j]) >= 0\n            ) ||\n            this._handlersAll.indexOf(handlers[j]) >= 0\n          ) {\n            handlers[j].handler.call(\n              'scope' in handlers[j] ? handlers[j].scope : this,\n              event\n            );\n\n            // Since the listener callback can mutate the _handlers,\n            // we register the handlers we want to remove, not the ones\n            // we want to keep\n            if (handlers[j].once)\n              a.push(handlers[j]);\n          }\n        }\n\n        // Go through handlers to remove\n        for (z = 0; z < a.length; z++) {\n          this._handlers[eventName].splice(a.indexOf(a[z]), 1);\n        }\n      }\n    }\n\n    // Events propagation:\n    for (i = 0, n = this._children.length; i !== n; i += 1) {\n      child = this._children[i];\n      child.emit.apply(child, arguments);\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method creates a new instance of Emitter and binds it as a child. Here\n   * is what children do:\n   *  - When the parent emits an event, the children will emit the same later\n   *  - When a child is killed, it is automatically unreferenced from the parent\n   *  - When the parent is killed, all children will be killed as well\n   *\n   * @return {Emitter} Returns the fresh new child.\n   */\n  Emitter.prototype.child = function() {\n    var self = this,\n        child = new Emitter();\n\n    child.on('emmett:kill', function() {\n      if (self._children)\n        for (var i = 0, l = self._children.length; i < l; i++)\n          if (self._children[i] === child) {\n            self._children.splice(i, 1);\n            break;\n          }\n    });\n    this._children.push(child);\n\n    return child;\n  };\n\n  /**\n   * This returns an array of handler functions corresponding to the given\n   * event or every handler functions if an event were not to be given.\n   *\n   * @param  {?string} event Name of the event.\n   * @return {Emitter} Returns this.\n   */\n  function mapHandlers(a) {\n    var i, l, h = [];\n\n    for (i = 0, l = a.length; i < l; i++)\n      h.push(a[i].handler);\n\n    return h;\n  }\n\n  Emitter.prototype.listeners = function(event) {\n    var handlers = [],\n        k,\n        i,\n        l;\n\n    // If no event is passed, we return every handlers\n    if (!event) {\n      handlers = mapHandlers(this._handlersAll);\n\n      for (k in this._handlers)\n        handlers = handlers.concat(mapHandlers(this._handlers[k]));\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners());\n    }\n\n    // Else we only retrieve the needed handlers\n    else {\n      handlers = mapHandlers(this._handlers[event]);\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners(event));\n    }\n\n    return handlers;\n  };\n\n\n  /**\n   * This method will first dispatch a \"emmett:kill\" event, and then unbinds all\n   * listeners and make it impossible to ever rebind any listener to any event.\n   */\n  Emitter.prototype.kill = function() {\n    this.emit('emmett:kill');\n\n    this.unbindAll();\n    this._handlers = null;\n    this._handlersAll = null;\n    this._enabled = false;\n\n    if (this._children)\n      for (var i = 0, l = this._children.length; i < l; i++)\n        this._children[i].kill();\n\n    this._children = null;\n  };\n\n\n  /**\n   * This method disabled the emitter, which means its emit method will do\n   * nothing.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.disable = function() {\n    this._enabled = false;\n\n    return this;\n  };\n\n\n  /**\n   * This method enables the emitter.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.enable = function() {\n    this._enabled = true;\n\n    return this;\n  };\n\n\n  /**\n   * Version:\n   */\n  Emitter.version = '2.1.2';\n\n\n  // Export:\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = Emitter;\n    exports.Emitter = Emitter;\n  } else if (typeof define === 'function' && define.amd)\n    define('emmett', [], function() {\n      return Emitter;\n    });\n  else\n    this.Emitter = Emitter;\n}).call(this);\n\n},{}],24:[function(require,module,exports){\n/**\n * typology.js - A data validation library for Node.js and the browser,\n *\n * Version: 0.3.1\n * Sources: http://github.com/jacomyal/typology\n * Doc:     http://github.com/jacomyal/typology#readme\n *\n * License:\n * --------\n * Copyright © 2014 Alexis Jacomy (@jacomyal), Guillaume Plique (@Yomguithereal)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * The Software is provided \"as is\", without warranty of any kind, express or\n * implied, including but not limited to the warranties of merchantability,\n * fitness for a particular purpose and noninfringement. In no event shall the\n * authors or copyright holders be liable for any claim, damages or other\n * liability, whether in an action of contract, tort or otherwise, arising\n * from, out of or in connection with the software or the use or other dealings\n * in the Software.\n */\n(function(global) {\n  'use strict';\n\n  /**\n   * Code conventions:\n   * *****************\n   *  - 80 characters max per line\n   *  - Write \"__myVar\" for any global private variable\n   *  - Write \"_myVar\" for any instance private variable\n   *  - Write \"myVar\" any local variable\n   */\n\n\n\n  /**\n   * PRIVATE GLOBALS:\n   * ****************\n   */\n\n  /**\n   * This object is a dictionnary that maps \"[object Something]\" strings to the\n   * typology form \"something\":\n   */\n  var __class2type = {};\n\n  /**\n   * This array is the list of every types considered native by typology:\n   */\n  var __nativeTypes = ['*'];\n\n  (function() {\n    var k,\n        className,\n        classes = [\n          'Arguments',\n          'Boolean',\n          'Number',\n          'String',\n          'Function',\n          'Array',\n          'Date',\n          'RegExp',\n          'Object'\n        ];\n\n    // Fill types\n    for (k in classes) {\n      className = classes[k];\n      __nativeTypes.push(className.toLowerCase());\n      __class2type['[object ' + className + ']'] = className.toLowerCase();\n    }\n  })();\n\n\n\n  /**\n   * CONSTRUCTOR:\n   * ************\n   */\n  function Typology(defs) {\n    /**\n     * INSTANCE PRIVATES:\n     * ******************\n     */\n\n    var _self = this;\n\n    /**\n     * This objects will contain every instance-specific custom types:\n     */\n    var _customTypes = {};\n\n    /**\n     * This function will recursively scan an object to check wether or not it\n     * matches a given type. It will return null if it matches, and an Error\n     * object else.\n     *\n     * Examples:\n     * *********\n     * 1. When the type matches:\n     *  > _scan('abc', 'string');\n     *  will return null.\n     *\n     * 2. When a top-level type does not match:\n     *  > _scan('abc', 'number');\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *\n     * 3. When a sub-object type does not its type:\n     *  > _scan({ a: 'abc' }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a' ]\n     *\n     * 4. When a deep sub-object type does not its type:\n     *  > _scan({ a: [ 123, 'abc' ] }, { a: ['number'] });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a', 1 ]\n     *\n     * 5. When a required key is missing:\n     *  > _scan({}, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"undefined\".\n     *   - path: [ 'a' ]\n     *\n     * 6. When an unexpected key is present:\n     *  > _scan({ a: 123, b: 456 }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Unexpected key \"b\".\n     *\n     * @param  {*}      obj  The value to validate.\n     * @param  {type}   type The type.\n     * @return {?Error}      Returns null or an Error object.\n     */\n    function _scan(obj, type) {\n      var a,\n          i,\n          l,\n          k,\n          error,\n          subError,\n          hasStar,\n          hasTypeOf,\n          optional = false,\n          exclusive = false,\n          typeOf = _self.get(obj);\n\n      if (_self.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        l = a.length;\n        for (i = 0; i < l; i++)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            throw new Error('Invalid type.');\n\n        if (type.match(/^\\?/))\n          optional = true;\n\n        if (type.replace(/^\\?/, '').match(/^\\!/))\n          exclusive = true;\n\n        if (exclusive && optional)\n          throw new Error('Invalid type.');\n\n        for (i in a)\n          if (_customTypes[a[i]])\n            if (\n              (typeof _customTypes[a[i]].type === 'function') ?\n                (_customTypes[a[i]].type.call(_self, obj) === true) :\n                !_scan(obj, _customTypes[a[i]].type)\n            ) {\n              if (exclusive) {\n                error = new Error();\n                error.message = 'Expected a \"' + type + '\" but found a ' +\n                                '\"' + a[i] + '\".';\n              error.expected = type;\n              error.type = a[i];\n              error.value = obj;\n                return error;\n              } else\n                return null;\n            }\n\n        if (obj === null || obj === undefined) {\n          if (!exclusive && !optional) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          } else\n            return null;\n\n        } else {\n          hasStar = ~a.indexOf('*');\n          hasTypeOf = ~a.indexOf(typeOf);\n          if (exclusive && (hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + (hasTypeOf ? typeOf : '*') + '\".';\n            error.type = hasTypeOf ? typeOf : '*';\n            error.expected = type;\n            error.value = obj;\n            return error;\n\n          } else if (!exclusive && !(hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n\n          } else\n            return null;\n        }\n\n      } else if (_self.get(type) === 'object') {\n        if (typeOf !== 'object') {\n          error = new Error();\n          error.message = 'Expected an object but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        for (k in type)\n          if ((subError = _scan(obj[k], type[k]))) {\n            error = subError;\n            error.path = error.path ?\n              [k].concat(error.path) :\n              [k];\n            return error;\n          }\n\n        for (k in obj)\n          if (type[k] === undefined) {\n            error = new Error();\n            error.message = 'Unexpected key \"' + k + '\".';\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          }\n\n        return null;\n\n      } else if (_self.get(type) === 'array') {\n        if (type.length !== 1)\n          throw new Error('Invalid type.');\n\n        if (typeOf !== 'array') {\n          error = new Error();\n          error.message = 'Expected an array but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        l = obj.length;\n        for (i = 0; i < l; i++)\n          if ((subError = _scan(obj[i], type[0]))) {\n            error = subError;\n            error.path = error.path ?\n              [i].concat(error.path) :\n              [i];\n            return error;\n          }\n\n        return null;\n      } else\n        throw new Error('Invalid type.');\n    }\n\n\n\n    /**\n     * INSTANCE METHODS:\n     * *****************\n     */\n\n    /**\n     * This method registers a custom type into the Typology instance. A type\n     * is registered under a unique name, and is described by an object (like\n     * classical C structures) or a function.\n     *\n     * Variant 1:\n     * **********\n     * > types.add('user', { id: 'string', name: '?string' });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {object}   type The corresponding structure.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 2:\n     * **********\n     * > types.add('integer', function(value) {\n     * >   return typeof value === 'number' && value === value | 0;\n     * > });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {function} type The function validating the type.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 3:\n     * **********\n     * > types.add({\n     * >   id: 'user',\n     * >   type: { id: 'string', name: '?string' }\n     * > });\n     *\n     * > types.add({\n     * >   id: 'integer',\n     * >   type: function(value) {\n     * >     return typeof value === 'number' && value === value | 0;\n     * >   }\n     * > });\n     *\n     * @param  {object}   specs An object describing fully the type.\n     * @return {Typology}       Returns this.\n     *\n     * Recognized parameters:\n     * **********************\n     * Here is the exhaustive list of every accepted parameters in the specs\n     * object:\n     *\n     *   {string}          id    The unique id of the type.\n     *   {function|object} type  The function or the structure object\n     *                           validating the type.\n     *   {?[string]}       proto Eventually an array of ids of types that are\n     *                           referenced in the structure but do not exist\n     *                           yet.\n     */\n    this.add = function(a1, a2) {\n      var o,\n          k,\n          a,\n          id,\n          tmp,\n          type;\n\n      // Polymorphism:\n      if (arguments.length === 1) {\n        if (this.get(a1) === 'object') {\n          o = a1;\n          id = o.id;\n          type = o.type;\n        } else\n          throw new Error('If types.add is called with one argument, ' +\n                          'this one has to be an object.');\n      } else if (arguments.length === 2) {\n        if (typeof a1 !== 'string' || !a1)\n          throw new Error('If types.add is called with more than one ' +\n                          'argument, the first one must be the string id.');\n        else\n          id = a1;\n\n        type = a2;\n      } else\n        throw new Error('types.add has to be called ' +\n                        'with one or two arguments.');\n\n      if (this.get(id) !== 'string' || id.length === 0)\n        throw new Error('A type requires an string id.');\n\n      if (_customTypes[id] !== undefined && _customTypes[id] !== 'proto')\n        throw new Error('The type \"' + id + '\" already exists.');\n\n      if (~__nativeTypes.indexOf(id))\n        throw new Error('\"' + id + '\" is a reserved type name.');\n\n      _customTypes[id] = 1;\n\n      // Check given prototypes:\n      a = (o || {}).proto || [];\n      a = Array.isArray(a) ? a : [a];\n      tmp = {};\n      for (k in a)\n        if (_customTypes[a[k]] === undefined) {\n          _customTypes[a[k]] = 1;\n          tmp[a[k]] = 1;\n        }\n\n      if ((this.get(type) !== 'function') && !this.isValid(type))\n        throw new Error('A type requires a valid definition. ' +\n                        'This one can be a preexistant type or else ' +\n                        'a function testing given objects.');\n\n      // Effectively add the type:\n      _customTypes[id] = (o === undefined) ?\n        {\n          id: id,\n          type: type\n        } :\n        {};\n\n      if (o !== undefined)\n        for (k in o)\n          _customTypes[id][k] = o[k];\n\n      // Delete prototypes:\n      for (k in tmp)\n        if (k !== id)\n          delete _customTypes[k];\n\n      return this;\n    };\n\n    /**\n     * This method returns true if a custom type is already registered in this\n     * instance under the given key.\n     *\n     * @param  {string}  key A type name.\n     * @return {boolean}     Returns true if the key is registered.\n     */\n    this.has = function(key) {\n      return !!_customTypes[key];\n    };\n\n    /**\n     * This method returns the native type of a given value.\n     *\n     * Examples:\n     * *********\n     * > types.get({ a: 1 }); // returns \"object\"\n     * > types.get('abcde');  // returns \"string\"\n     * > types.get(1234567);  // returns \"number\"\n     * > types.get([1, 2]);   // returns \"array\"\n     *\n     * @param  {*}      value Anything.\n     * @return {string}       Returns the native type of the value.\n     */\n    this.get = function(obj) {\n      return (obj === null || obj === undefined) ?\n        String(obj) :\n        __class2type[Object.prototype.toString.call(obj)] || 'object';\n    };\n\n    /**\n     * This method validates some value against a given type. If the flag throws\n     * has a truthy value, then the method will throw an error instead of\n     * returning false.\n     *\n     * To know more about the error thrown, you can read the documentation of\n     * the private method _scan.\n     *\n     * Examples:\n     * *********\n     * > types.check({ a: 1 }, 'object');                      // returns true\n     * > types.check({ a: 1 }, { a: 'string' });               // returns true\n     * > types.check({ a: 1 }, { a: 'string', b: '?number' }); // returns true\n     *\n     * > types.check({ a: 1 }, { a: 'string', b: 'number' }); // returns false\n     * > types.check({ a: 1 }, { a: 'number' });              // returns false\n     * > types.check({ a: 1 }, 'array');                      // returns false\n     *\n     * > types.check({ a: 1 }, 'array', true); // throws an Error\n     *\n     * @param  {*}        value  Anything.\n     * @param  {type}     type   A valid type.\n     * @param  {?boolean} throws If true, this method will throw an error\n     *                           instead of returning false.\n     * @return {boolean}         Returns true if the value matches the type, and\n     *                           not else.\n     */\n    this.check = function(obj, type, throws) {\n      var result = _scan(obj, type);\n      if (throws && result)\n        throw result;\n      else\n        return !result;\n    };\n\n    /**\n     * This method validates a type. If the type is not referenced or is not\n     * valid, it will return false.\n     *\n     * To know more about that function, don't hesitate to read the related\n     * unit tests.\n     *\n     * Examples:\n     * *********\n     * > types.isValid('string');        // returns true\n     * > types.isValid('?string');       // returns true\n     * > types.isValid('!string');       // returns true\n     * > types.isValid('string|number'); // returns true\n     * > types.isValid({ a: 'string' }); // returns true\n     * > types.isValid(['string']);      // returns true\n     *\n     * > types.isValid('!?string');                // returns false\n     * > types.isValid('myNotDefinedType');        // returns false\n     * > types.isValid(['myNotDefinedType']);      // returns false\n     * > types.isValid({ a: 'myNotDefinedType' }); // returns false\n     *\n     * > types.isValid('user');               // returns false\n     * > types.add('user', { id: 'string' }); // makes the type become valid\n     * > types.isValid('user');               // returns true\n     *\n     * @param  {*}       type The type to get checked.\n     * @return {boolean}      Returns true if the type is valid, and false else.\n     */\n    this.isValid = function(type) {\n      var a,\n          k,\n          i;\n\n      if (this.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        for (i in a)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'object') {\n        for (k in type)\n          if (!this.isValid(type[k]))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'array')\n        return type.length === 1 ?\n          this.isValid(type[0]) :\n          false;\n      else\n        return false;\n    };\n\n\n\n    /**\n     * INSTANTIATION ROUTINE:\n     * **********************\n     */\n\n    // Add a type \"type\" to shortcut the #isValid method:\n    this.add('type', (function(v) {\n      return this.isValid(v);\n    }).bind(this));\n\n    // Add a type \"primitive\" to match every primitive types (including null):\n    this.add('primitive', function(v) {\n      return !v || !(v instanceof Object || typeof v === 'object');\n    });\n\n    // Adding custom types at instantiation:\n    defs = defs || {};\n    if (this.get(defs) !== 'object')\n      throw Error('Invalid argument.');\n\n    for (var k in defs)\n      this.add(k, defs[k]);\n  }\n\n\n\n  /**\n   * GLOBAL PUBLIC API:\n   * ******************\n   */\n\n  // Creating a \"main\" typology instance to export:\n  var types = Typology;\n  Typology.call(types);\n\n  // Version:\n  Object.defineProperty(types, 'version', {\n    value: '0.3.1'\n  });\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = types;\n    exports.types = types;\n  } else if (typeof define === 'function' && define.amd)\n    define('typology', [], function() {\n      return types;\n    });\n  else\n    this.types = types;\n})(this);\n\n},{}],25:[function(require,module,exports){\n\n/***** xregexp.js *****/\n\n/*!\r\n * XRegExp v2.0.0\r\n * (c) 2007-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * XRegExp provides augmented, extensible JavaScript regular expressions. You get new syntax,\r\n * flags, and methods beyond what browsers support natively. XRegExp is also a regex utility belt\r\n * with tools to make your client-side grepping simpler and more powerful, while freeing you from\r\n * worrying about pesky cross-browser inconsistencies and the dubious `lastIndex` property. See\r\n * XRegExp's documentation (http://xregexp.com/) for more details.\r\n * @module xregexp\r\n * @requires N/A\r\n */\r\nvar XRegExp;\r\n\r\n// Avoid running twice; that would reset tokens and could break references to native globals\r\nXRegExp = XRegExp || (function (undef) {\r\n    \"use strict\";\r\n\r\n/*--------------------------------------\r\n *  Private variables\r\n *------------------------------------*/\r\n\r\n    var self,\r\n        addToken,\r\n        add,\r\n\r\n// Optional features; can be installed and uninstalled\r\n        features = {\r\n            natives: false,\r\n            extensibility: false\r\n        },\r\n\r\n// Store native methods to use and restore (\"native\" is an ES3 reserved keyword)\r\n        nativ = {\r\n            exec: RegExp.prototype.exec,\r\n            test: RegExp.prototype.test,\r\n            match: String.prototype.match,\r\n            replace: String.prototype.replace,\r\n            split: String.prototype.split\r\n        },\r\n\r\n// Storage for fixed/extended native methods\r\n        fixed = {},\r\n\r\n// Storage for cached regexes\r\n        cache = {},\r\n\r\n// Storage for addon tokens\r\n        tokens = [],\r\n\r\n// Token scopes\r\n        defaultScope = \"default\",\r\n        classScope = \"class\",\r\n\r\n// Regexes that match native regex syntax\r\n        nativeTokens = {\r\n            // Any native multicharacter token in default scope (includes octals, excludes character classes)\r\n            \"default\": /^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)/,\r\n            // Any native multicharacter token in character class scope (includes octals)\r\n            \"class\": /^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))/\r\n        },\r\n\r\n// Any backreference in replacement strings\r\n        replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g,\r\n\r\n// Any character with a later instance in the string\r\n        duplicateFlags = /([\\s\\S])(?=[\\s\\S]*\\1)/g,\r\n\r\n// Any greedy/lazy quantifier\r\n        quantifier = /^(?:[?*+]|{\\d+(?:,\\d*)?})\\??/,\r\n\r\n// Check for correct `exec` handling of nonparticipating capturing groups\r\n        compliantExecNpcg = nativ.exec.call(/()??/, \"\")[1] === undef,\r\n\r\n// Check for flag y support (Firefox 3+)\r\n        hasNativeY = RegExp.prototype.sticky !== undef,\r\n\r\n// Used to kill infinite recursion during XRegExp construction\r\n        isInsideConstructor = false,\r\n\r\n// Storage for known flags, including addon flags\r\n        registeredFlags = \"gim\" + (hasNativeY ? \"y\" : \"\");\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n/**\r\n * Attaches XRegExp.prototype properties and named capture supporting data to a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to augment.\r\n * @param {Array} captureNames Array with capture names, or null.\r\n * @param {Boolean} [isNative] Whether the regex was created by `RegExp` rather than `XRegExp`.\r\n * @returns {RegExp} Augmented regex.\r\n */\r\n    function augment(regex, captureNames, isNative) {\r\n        var p;\r\n        // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\r\n        for (p in self.prototype) {\r\n            if (self.prototype.hasOwnProperty(p)) {\r\n                regex[p] = self.prototype[p];\r\n            }\r\n        }\r\n        regex.xregexp = {captureNames: captureNames, isNative: !!isNative};\r\n        return regex;\r\n    }\r\n\r\n/**\r\n * Returns native `RegExp` flags used by a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {String} Native flags in use.\r\n */\r\n    function getNativeFlags(regex) {\r\n        //return nativ.exec.call(/\\/([a-z]*)$/i, String(regex))[1];\r\n        return (regex.global     ? \"g\" : \"\") +\r\n               (regex.ignoreCase ? \"i\" : \"\") +\r\n               (regex.multiline  ? \"m\" : \"\") +\r\n               (regex.extended   ? \"x\" : \"\") + // Proposed for ES6, included in AS3\r\n               (regex.sticky     ? \"y\" : \"\"); // Proposed for ES6, included in Firefox 3+\r\n    }\r\n\r\n/**\r\n * Copies a regex object while preserving special properties for named capture and augmenting with\r\n * `XRegExp.prototype` methods. The copy has a fresh `lastIndex` property (set to zero). Allows\r\n * adding and removing flags while copying the regex.\r\n * @private\r\n * @param {RegExp} regex Regex to copy.\r\n * @param {String} [addFlags] Flags to be added while copying the regex.\r\n * @param {String} [removeFlags] Flags to be removed while copying the regex.\r\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\r\n */\r\n    function copy(regex, addFlags, removeFlags) {\r\n        if (!self.isRegExp(regex)) {\r\n            throw new TypeError(\"type RegExp expected\");\r\n        }\r\n        var flags = nativ.replace.call(getNativeFlags(regex) + (addFlags || \"\"), duplicateFlags, \"\");\r\n        if (removeFlags) {\r\n            // Would need to escape `removeFlags` if this was public\r\n            flags = nativ.replace.call(flags, new RegExp(\"[\" + removeFlags + \"]+\", \"g\"), \"\");\r\n        }\r\n        if (regex.xregexp && !regex.xregexp.isNative) {\r\n            // Compiling the current (rather than precompilation) source preserves the effects of nonnative source flags\r\n            regex = augment(self(regex.source, flags),\r\n                            regex.xregexp.captureNames ? regex.xregexp.captureNames.slice(0) : null);\r\n        } else {\r\n            // Augment with `XRegExp.prototype` methods, but use native `RegExp` (avoid searching for special tokens)\r\n            regex = augment(new RegExp(regex.source, flags), null, true);\r\n        }\r\n        return regex;\r\n    }\r\n\r\n/*\r\n * Returns the last index at which a given value can be found in an array, or `-1` if it's not\r\n * present. The array is searched backwards.\r\n * @private\r\n * @param {Array} array Array to search.\r\n * @param {*} value Value to locate in the array.\r\n * @returns {Number} Last zero-based index at which the item is found, or -1.\r\n */\r\n    function lastIndexOf(array, value) {\r\n        var i = array.length;\r\n        if (Array.prototype.lastIndexOf) {\r\n            return array.lastIndexOf(value); // Use the native method if available\r\n        }\r\n        while (i--) {\r\n            if (array[i] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n/**\r\n * Determines whether an object is of the specified type.\r\n * @private\r\n * @param {*} value Object to check.\r\n * @param {String} type Type to check for, in lowercase.\r\n * @returns {Boolean} Whether the object matches the type.\r\n */\r\n    function isType(value, type) {\r\n        return Object.prototype.toString.call(value).toLowerCase() === \"[object \" + type + \"]\";\r\n    }\r\n\r\n/**\r\n * Prepares an options object from the given value.\r\n * @private\r\n * @param {String|Object} value Value to convert to an options object.\r\n * @returns {Object} Options object.\r\n */\r\n    function prepareOptions(value) {\r\n        value = value || {};\r\n        if (value === \"all\" || value.all) {\r\n            value = {natives: true, extensibility: true};\r\n        } else if (isType(value, \"string\")) {\r\n            value = self.forEach(value, /[^\\s,]+/, function (m) {\r\n                this[m] = true;\r\n            }, {});\r\n        }\r\n        return value;\r\n    }\r\n\r\n/**\r\n * Runs built-in/custom tokens in reverse insertion order, until a match is found.\r\n * @private\r\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\r\n * @param {Number} pos Position to search for tokens within `pattern`.\r\n * @param {Number} scope Current regex scope.\r\n * @param {Object} context Context object assigned to token handler functions.\r\n * @returns {Object} Object with properties `output` (the substitution string returned by the\r\n *   successful token handler) and `match` (the token's match array), or null.\r\n */\r\n    function runTokens(pattern, pos, scope, context) {\r\n        var i = tokens.length,\r\n            result = null,\r\n            match,\r\n            t;\r\n        // Protect against constructing XRegExps within token handler and trigger functions\r\n        isInsideConstructor = true;\r\n        // Must reset `isInsideConstructor`, even if a `trigger` or `handler` throws\r\n        try {\r\n            while (i--) { // Run in reverse order\r\n                t = tokens[i];\r\n                if ((t.scope === \"all\" || t.scope === scope) && (!t.trigger || t.trigger.call(context))) {\r\n                    t.pattern.lastIndex = pos;\r\n                    match = fixed.exec.call(t.pattern, pattern); // Fixed `exec` here allows use of named backreferences, etc.\r\n                    if (match && match.index === pos) {\r\n                        result = {\r\n                            output: t.handler.call(context, match, scope),\r\n                            match: match\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        } finally {\r\n            isInsideConstructor = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n/**\r\n * Enables or disables XRegExp syntax and flag extensibility.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setExtensibility(on) {\r\n        self.addToken = addToken[on ? \"on\" : \"off\"];\r\n        features.extensibility = on;\r\n    }\r\n\r\n/**\r\n * Enables or disables native method overrides.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setNatives(on) {\r\n        RegExp.prototype.exec = (on ? fixed : nativ).exec;\r\n        RegExp.prototype.test = (on ? fixed : nativ).test;\r\n        String.prototype.match = (on ? fixed : nativ).match;\r\n        String.prototype.replace = (on ? fixed : nativ).replace;\r\n        String.prototype.split = (on ? fixed : nativ).split;\r\n        features.natives = on;\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Constructor\r\n *------------------------------------*/\r\n\r\n/**\r\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\r\n * native regular expression in that additional syntax and flags are supported. The returned object\r\n * is in fact a native `RegExp` and works with all native methods.\r\n * @class XRegExp\r\n * @constructor\r\n * @param {String|RegExp} pattern Regex pattern string, or an existing `RegExp` object to copy.\r\n * @param {String} [flags] Any combination of flags:\r\n *   <li>`g` - global\r\n *   <li>`i` - ignore case\r\n *   <li>`m` - multiline anchors\r\n *   <li>`n` - explicit capture\r\n *   <li>`s` - dot matches all (aka singleline)\r\n *   <li>`x` - free-spacing and line comments (aka extended)\r\n *   <li>`y` - sticky (Firefox 3+ only)\r\n *   Flags cannot be provided when constructing one `RegExp` from another.\r\n * @returns {RegExp} Extended regular expression object.\r\n * @example\r\n *\r\n * // With named capture and flag x\r\n * date = XRegExp('(?<year>  [0-9]{4}) -?  # year  \\n\\\r\n *                 (?<month> [0-9]{2}) -?  # month \\n\\\r\n *                 (?<day>   [0-9]{2})     # day   ', 'x');\r\n *\r\n * // Passing a regex object to copy it. The copy maintains special properties for named capture,\r\n * // is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property (set to\r\n * // zero). Native regexes are not recompiled using XRegExp syntax.\r\n * XRegExp(/regex/);\r\n */\r\n    self = function (pattern, flags) {\r\n        if (self.isRegExp(pattern)) {\r\n            if (flags !== undef) {\r\n                throw new TypeError(\"can't supply flags when constructing one RegExp from another\");\r\n            }\r\n            return copy(pattern);\r\n        }\r\n        // Tokens become part of the regex construction process, so protect against infinite recursion\r\n        // when an XRegExp is constructed within a token handler function\r\n        if (isInsideConstructor) {\r\n            throw new Error(\"can't call the XRegExp constructor within token definition functions\");\r\n        }\r\n\r\n        var output = [],\r\n            scope = defaultScope,\r\n            tokenContext = {\r\n                hasNamedCapture: false,\r\n                captureNames: [],\r\n                hasFlag: function (flag) {\r\n                    return flags.indexOf(flag) > -1;\r\n                }\r\n            },\r\n            pos = 0,\r\n            tokenResult,\r\n            match,\r\n            chr;\r\n        pattern = pattern === undef ? \"\" : String(pattern);\r\n        flags = flags === undef ? \"\" : String(flags);\r\n\r\n        if (nativ.match.call(flags, duplicateFlags)) { // Don't use test/exec because they would update lastIndex\r\n            throw new SyntaxError(\"invalid duplicate regular expression flag\");\r\n        }\r\n        // Strip/apply leading mode modifier with any combination of flags except g or y: (?imnsx)\r\n        pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function ($0, $1) {\r\n            if (nativ.test.call(/[gy]/, $1)) {\r\n                throw new SyntaxError(\"can't use flag g or y in mode modifier\");\r\n            }\r\n            flags = nativ.replace.call(flags + $1, duplicateFlags, \"\");\r\n            return \"\";\r\n        });\r\n        self.forEach(flags, /[\\s\\S]/, function (m) {\r\n            if (registeredFlags.indexOf(m[0]) < 0) {\r\n                throw new SyntaxError(\"invalid regular expression flag \" + m[0]);\r\n            }\r\n        });\r\n\r\n        while (pos < pattern.length) {\r\n            // Check for custom tokens at the current position\r\n            tokenResult = runTokens(pattern, pos, scope, tokenContext);\r\n            if (tokenResult) {\r\n                output.push(tokenResult.output);\r\n                pos += (tokenResult.match[0].length || 1);\r\n            } else {\r\n                // Check for native tokens (except character classes) at the current position\r\n                match = nativ.exec.call(nativeTokens[scope], pattern.slice(pos));\r\n                if (match) {\r\n                    output.push(match[0]);\r\n                    pos += match[0].length;\r\n                } else {\r\n                    chr = pattern.charAt(pos);\r\n                    if (chr === \"[\") {\r\n                        scope = classScope;\r\n                    } else if (chr === \"]\") {\r\n                        scope = defaultScope;\r\n                    }\r\n                    // Advance position by one character\r\n                    output.push(chr);\r\n                    ++pos;\r\n                }\r\n            }\r\n        }\r\n\r\n        return augment(new RegExp(output.join(\"\"), nativ.replace.call(flags, /[^gimy]+/g, \"\")),\r\n                       tokenContext.hasNamedCapture ? tokenContext.captureNames : null);\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Public methods/properties\r\n *------------------------------------*/\r\n\r\n// Installed and uninstalled states for `XRegExp.addToken`\r\n    addToken = {\r\n        on: function (regex, handler, options) {\r\n            options = options || {};\r\n            if (regex) {\r\n                tokens.push({\r\n                    pattern: copy(regex, \"g\" + (hasNativeY ? \"y\" : \"\")),\r\n                    handler: handler,\r\n                    scope: options.scope || defaultScope,\r\n                    trigger: options.trigger || null\r\n                });\r\n            }\r\n            // Providing `customFlags` with null `regex` and `handler` allows adding flags that do\r\n            // nothing, but don't throw an error\r\n            if (options.customFlags) {\r\n                registeredFlags = nativ.replace.call(registeredFlags + options.customFlags, duplicateFlags, \"\");\r\n            }\r\n        },\r\n        off: function () {\r\n            throw new Error(\"extensibility must be installed before using addToken\");\r\n        }\r\n    };\r\n\r\n/**\r\n * Extends or changes XRegExp syntax and allows custom flags. This is used internally and can be\r\n * used to create XRegExp addons. `XRegExp.install('extensibility')` must be run before calling\r\n * this function, or an error is thrown. If more than one token can match the same string, the last\r\n * added wins.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex object that matches the new token.\r\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\r\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\r\n *   properties of the regex being built, through `this`. Invoked with two arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The regex scope where the match was found.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   <li>`scope` {String} Scopes where the token applies: 'default', 'class', or 'all'.\r\n *   <li>`trigger` {Function} Function that returns `true` when the token should be applied; e.g.,\r\n *     if a flag is set. If `false` is returned, the matched string can be matched by other tokens.\r\n *     Has access to persistent properties of the regex being built, through `this` (including\r\n *     function `this.hasFlag`).\r\n *   <li>`customFlags` {String} Nonnative flags used by the token's handler or trigger functions.\r\n *     Prevents XRegExp from throwing an invalid flag error when the specified flags are used.\r\n * @example\r\n *\r\n * // Basic usage: Adds \\a for ALERT character\r\n * XRegExp.addToken(\r\n *   /\\\\a/,\r\n *   function () {return '\\\\x07';},\r\n *   {scope: 'all'}\r\n * );\r\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\r\n */\r\n    self.addToken = addToken.off;\r\n\r\n/**\r\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\r\n * the same pattern and flag combination, the cached copy is returned.\r\n * @memberOf XRegExp\r\n * @param {String} pattern Regex pattern string.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Cached XRegExp object.\r\n * @example\r\n *\r\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\r\n *   // The regex is compiled once only\r\n * }\r\n */\r\n    self.cache = function (pattern, flags) {\r\n        var key = pattern + \"/\" + (flags || \"\");\r\n        return cache[key] || (cache[key] = self(pattern, flags));\r\n    };\r\n\r\n/**\r\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\r\n * can safely be used at any point within a regex that uses any flags.\r\n * @memberOf XRegExp\r\n * @param {String} str String to escape.\r\n * @returns {String} String with regex metacharacters escaped.\r\n * @example\r\n *\r\n * XRegExp.escape('Escaped? <.>');\r\n * // -> 'Escaped\\?\\ <\\.>'\r\n */\r\n    self.escape = function (str) {\r\n        return nativ.replace.call(str, /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\r\n * regex uses named capture, named backreference properties are included on the match array.\r\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\r\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\r\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n * @example\r\n *\r\n * // Basic use, with named backreference\r\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\r\n * match.hex; // -> '2620'\r\n *\r\n * // With pos and sticky, in a loop\r\n * var pos = 2, result = [], match;\r\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\r\n *   result.push(match[1]);\r\n *   pos = match.index + match[0].length;\r\n * }\r\n * // result -> ['2', '3', '4']\r\n */\r\n    self.exec = function (str, regex, pos, sticky) {\r\n        var r2 = copy(regex, \"g\" + (sticky && hasNativeY ? \"y\" : \"\"), (sticky === false ? \"y\" : \"\")),\r\n            match;\r\n        r2.lastIndex = pos = pos || 0;\r\n        match = fixed.exec.call(r2, str); // Fixed `exec` required for `lastIndex` fix, etc.\r\n        if (sticky && match && match.index !== pos) {\r\n            match = null;\r\n        }\r\n        if (regex.global) {\r\n            regex.lastIndex = match ? r2.lastIndex : 0;\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Executes a provided function once per regex match.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The zero-based match index.\r\n *   <li>The string being traversed.\r\n *   <li>The regex object being used to traverse the string.\r\n * @param {*} [context] Object to use as `this` when executing `callback`.\r\n * @returns {*} Provided `context` object.\r\n * @example\r\n *\r\n * // Extracts every other digit from a string\r\n * XRegExp.forEach('1a2345', /\\d/, function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n    self.forEach = function (str, regex, callback, context) {\r\n        var pos = 0,\r\n            i = -1,\r\n            match;\r\n        while ((match = self.exec(str, regex, pos))) {\r\n            callback.call(context, match, ++i, str, regex);\r\n            pos = match.index + (match[0].length || 1);\r\n        }\r\n        return context;\r\n    };\r\n\r\n/**\r\n * Copies a regex object and adds flag `g`. The copy maintains special properties for named\r\n * capture, is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property\r\n * (set to zero). Native regexes are not recompiled using XRegExp syntax.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex to globalize.\r\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\r\n * @example\r\n *\r\n * var globalCopy = XRegExp.globalize(/regex/);\r\n * globalCopy.global; // -> true\r\n */\r\n    self.globalize = function (regex) {\r\n        return copy(regex, \"g\");\r\n    };\r\n\r\n/**\r\n * Installs optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.install({\r\n *   // Overrides native regex methods with fixed/extended versions that support named\r\n *   // backreferences and fix numerous cross-browser bugs\r\n *   natives: true,\r\n *\r\n *   // Enables extensibility of XRegExp syntax and flags\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.install('natives extensibility');\r\n *\r\n * // Using a shortcut to install all optional features\r\n * XRegExp.install('all');\r\n */\r\n    self.install = function (options) {\r\n        options = prepareOptions(options);\r\n        if (!features.natives && options.natives) {\r\n            setNatives(true);\r\n        }\r\n        if (!features.extensibility && options.extensibility) {\r\n            setExtensibility(true);\r\n        }\r\n    };\r\n\r\n/**\r\n * Checks whether an individual optional feature is installed.\r\n * @memberOf XRegExp\r\n * @param {String} feature Name of the feature to check. One of:\r\n *   <li>`natives`\r\n *   <li>`extensibility`\r\n * @returns {Boolean} Whether the feature is installed.\r\n * @example\r\n *\r\n * XRegExp.isInstalled('natives');\r\n */\r\n    self.isInstalled = function (feature) {\r\n        return !!(features[feature]);\r\n    };\r\n\r\n/**\r\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\r\n * created in another frame, when `instanceof` and `constructor` checks would fail.\r\n * @memberOf XRegExp\r\n * @param {*} value Object to check.\r\n * @returns {Boolean} Whether the object is a `RegExp` object.\r\n * @example\r\n *\r\n * XRegExp.isRegExp('string'); // -> false\r\n * XRegExp.isRegExp(/regex/i); // -> true\r\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\r\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\r\n */\r\n    self.isRegExp = function (value) {\r\n        return isType(value, \"regexp\");\r\n    };\r\n\r\n/**\r\n * Retrieves the matches from searching a string using a chain of regexes that successively search\r\n * within previous matches. The provided `chain` array can contain regexes and objects with `regex`\r\n * and `backref` properties. When a backreference is specified, the named or numbered backreference\r\n * is passed forward to the next regex or returned.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} chain Regexes that each search for matches within preceding results.\r\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage; matches numbers within <b> tags\r\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\r\n *   XRegExp('(?is)<b>.*?</b>'),\r\n *   /\\d+/\r\n * ]);\r\n * // -> ['2', '4', '56']\r\n *\r\n * // Passing forward and returning specific backreferences\r\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\r\n *         <a href=\"http://www.google.com/\">Google</a>';\r\n * XRegExp.matchChain(html, [\r\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\r\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\r\n * ]);\r\n * // -> ['xregexp.com', 'www.google.com']\r\n */\r\n    self.matchChain = function (str, chain) {\r\n        return (function recurseChain(values, level) {\r\n            var item = chain[level].regex ? chain[level] : {regex: chain[level]},\r\n                matches = [],\r\n                addMatch = function (match) {\r\n                    matches.push(item.backref ? (match[item.backref] || \"\") : match[0]);\r\n                },\r\n                i;\r\n            for (i = 0; i < values.length; ++i) {\r\n                self.forEach(values[i], item.regex, addMatch);\r\n            }\r\n            return ((level === chain.length - 1) || !matches.length) ?\r\n                    matches :\r\n                    recurseChain(matches, level + 1);\r\n        }([str], 0));\r\n    };\r\n\r\n/**\r\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\r\n * or regex, and the replacement can be a string or a function to be called for each match. To\r\n * perform a global search and replace, use the optional `scope` argument or include flag `g` if\r\n * using a regex. Replacement strings can use `${n}` for named and numbered backreferences.\r\n * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser\r\n * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n *   Replacement strings can include special replacement syntax:\r\n *     <li>$$ - Inserts a literal '$'.\r\n *     <li>$&, $0 - Inserts the matched substring.\r\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\r\n *     <li>$' - Inserts the string that follows the matched substring (right context).\r\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\r\n *       backreference n/nn.\r\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\r\n *       group, inserts backreference n.\r\n *   Replacement functions are invoked with three or more arguments:\r\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\r\n *       properties of this first argument.\r\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\r\n *     <li>The zero-based index of the match within the total search string.\r\n *     <li>The total string being searched.\r\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\r\n *   explicitly specified and using a regex with flag `g`, `scope` is 'all'.\r\n * @returns {String} New string with one or all matches replaced.\r\n * @example\r\n *\r\n * // Regex search, using named backreferences in replacement string\r\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\r\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\r\n * // -> 'Smith, John'\r\n *\r\n * // Regex search, using named backreferences in replacement function\r\n * XRegExp.replace('John Smith', name, function (match) {\r\n *   return match.last + ', ' + match.first;\r\n * });\r\n * // -> 'Smith, John'\r\n *\r\n * // Global string search/replacement\r\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\r\n * // -> 'XRegExp builds XRegExps'\r\n */\r\n    self.replace = function (str, search, replacement, scope) {\r\n        var isRegex = self.isRegExp(search),\r\n            search2 = search,\r\n            result;\r\n        if (isRegex) {\r\n            if (scope === undef && search.global) {\r\n                scope = \"all\"; // Follow flag g when `scope` isn't explicit\r\n            }\r\n            // Note that since a copy is used, `search`'s `lastIndex` isn't updated *during* replacement iterations\r\n            search2 = copy(search, scope === \"all\" ? \"g\" : \"\", scope === \"all\" ? \"\" : \"g\");\r\n        } else if (scope === \"all\") {\r\n            search2 = new RegExp(self.escape(String(search)), \"g\");\r\n        }\r\n        result = fixed.replace.call(String(str), search2, replacement); // Fixed `replace` required for named backreferences, etc.\r\n        if (isRegex && search.global) {\r\n            search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Splits a string into an array of strings using a regex or string separator. Matches of the\r\n * separator are not included in the result array. However, if `separator` is a regex that contains\r\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\r\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\r\n * cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to split.\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.split('a b c', ' ');\r\n * // -> ['a', 'b', 'c']\r\n *\r\n * // With limit\r\n * XRegExp.split('a b c', ' ', 2);\r\n * // -> ['a', 'b']\r\n *\r\n * // Backreferences in result array\r\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\r\n * // -> ['..', 'word', '1', '..']\r\n */\r\n    self.split = function (str, separator, limit) {\r\n        return fixed.split.call(str, separator, limit);\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\r\n * `sticky` arguments specify the search start position, and whether the match must start at the\r\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\r\n * updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.test` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.test('abc', /c/); // -> true\r\n *\r\n * // With pos and sticky\r\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\r\n */\r\n    self.test = function (str, regex, pos, sticky) {\r\n        // Do this the easy way :-)\r\n        return !!self.exec(str, regex, pos, sticky);\r\n    };\r\n\r\n/**\r\n * Uninstalls optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.uninstall({\r\n *   // Restores native regex methods\r\n *   natives: true,\r\n *\r\n *   // Disables additional syntax and flag extensions\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.uninstall('natives extensibility');\r\n *\r\n * // Using a shortcut to uninstall all optional features\r\n * XRegExp.uninstall('all');\r\n */\r\n    self.uninstall = function (options) {\r\n        options = prepareOptions(options);\r\n        if (features.natives && options.natives) {\r\n            setNatives(false);\r\n        }\r\n        if (features.extensibility && options.extensibility) {\r\n            setExtensibility(false);\r\n        }\r\n    };\r\n\r\n/**\r\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\r\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\r\n * Backreferences in provided regex objects are automatically renumbered to work correctly. Native\r\n * flags used by provided regexes are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {Array} patterns Regexes and strings to combine.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Union of the provided regexes and strings.\r\n * @example\r\n *\r\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\r\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\r\n *\r\n * XRegExp.union([XRegExp('(?<pet>dogs)\\\\k<pet>'), XRegExp('(?<pet>cats)\\\\k<pet>')]);\r\n * // -> XRegExp('(?<pet>dogs)\\\\k<pet>|(?<pet>cats)\\\\k<pet>')\r\n */\r\n    self.union = function (patterns, flags) {\r\n        var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n            numCaptures = 0,\r\n            numPriorCaptures,\r\n            captureNames,\r\n            rewrite = function (match, paren, backref) {\r\n                var name = captureNames[numCaptures - numPriorCaptures];\r\n                if (paren) { // Capturing group\r\n                    ++numCaptures;\r\n                    if (name) { // If the current capture has a name\r\n                        return \"(?<\" + name + \">\";\r\n                    }\r\n                } else if (backref) { // Backreference\r\n                    return \"\\\\\" + (+backref + numPriorCaptures);\r\n                }\r\n                return match;\r\n            },\r\n            output = [],\r\n            pattern,\r\n            i;\r\n        if (!(isType(patterns, \"array\") && patterns.length)) {\r\n            throw new TypeError(\"patterns must be a nonempty array\");\r\n        }\r\n        for (i = 0; i < patterns.length; ++i) {\r\n            pattern = patterns[i];\r\n            if (self.isRegExp(pattern)) {\r\n                numPriorCaptures = numCaptures;\r\n                captureNames = (pattern.xregexp && pattern.xregexp.captureNames) || [];\r\n                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns\r\n                // are independently valid; helps keep this simple. Named captures are put back\r\n                output.push(self(pattern.source).source.replace(parts, rewrite));\r\n            } else {\r\n                output.push(self.escape(pattern));\r\n            }\r\n        }\r\n        return self(output.join(\"|\"), flags);\r\n    };\r\n\r\n/**\r\n * The XRegExp version number.\r\n * @static\r\n * @memberOf XRegExp\r\n * @type String\r\n */\r\n    self.version = \"2.0.0\";\r\n\r\n/*--------------------------------------\r\n *  Fixed/extended native methods\r\n *------------------------------------*/\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method. Use via `XRegExp.exec` without overriding natives.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n */\r\n    fixed.exec = function (str) {\r\n        var match, name, r2, origLastIndex, i;\r\n        if (!this.global) {\r\n            origLastIndex = this.lastIndex;\r\n        }\r\n        match = nativ.exec.apply(this, arguments);\r\n        if (match) {\r\n            // Fix browsers whose `exec` methods don't consistently return `undefined` for\r\n            // nonparticipating capturing groups\r\n            if (!compliantExecNpcg && match.length > 1 && lastIndexOf(match, \"\") > -1) {\r\n                r2 = new RegExp(this.source, nativ.replace.call(getNativeFlags(this), \"g\", \"\"));\r\n                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\r\n                // matching due to characters outside the match\r\n                nativ.replace.call(String(str).slice(match.index), r2, function () {\r\n                    var i;\r\n                    for (i = 1; i < arguments.length - 2; ++i) {\r\n                        if (arguments[i] === undef) {\r\n                            match[i] = undef;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // Attach named capture properties\r\n            if (this.xregexp && this.xregexp.captureNames) {\r\n                for (i = 1; i < match.length; ++i) {\r\n                    name = this.xregexp.captureNames[i - 1];\r\n                    if (name) {\r\n                        match[name] = match[i];\r\n                    }\r\n                }\r\n            }\r\n            // Fix browsers that increment `lastIndex` after zero-length matches\r\n            if (this.global && !match[0].length && (this.lastIndex > match.index)) {\r\n                this.lastIndex = match.index;\r\n            }\r\n        }\r\n        if (!this.global) {\r\n            this.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n */\r\n    fixed.test = function (str) {\r\n        // Do this the easy way :-)\r\n        return !!fixed.exec.call(this, str);\r\n    };\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method.\r\n * @private\r\n * @param {RegExp} regex Regex to search with.\r\n * @returns {Array} If `regex` uses flag g, an array of match strings or null. Without flag g, the\r\n *   result of calling `regex.exec(this)`.\r\n */\r\n    fixed.match = function (regex) {\r\n        if (!self.isRegExp(regex)) {\r\n            regex = new RegExp(regex); // Use native `RegExp`\r\n        } else if (regex.global) {\r\n            var result = nativ.match.apply(this, arguments);\r\n            regex.lastIndex = 0; // Fixes IE bug\r\n            return result;\r\n        }\r\n        return fixed.exec.call(regex, this);\r\n    };\r\n\r\n/**\r\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\r\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes\r\n * browser bugs in replacement text syntax when performing a replacement using a nonregex search\r\n * value, and the value of a replacement regex's `lastIndex` property during replacement iterations\r\n * and upon completion. Note that this doesn't support SpiderMonkey's proprietary third (`flags`)\r\n * argument. Calling `XRegExp.install('natives')` uses this to override the native method. Use via\r\n * `XRegExp.replace` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n * @returns {String} New string with one or all matches replaced.\r\n */\r\n    fixed.replace = function (search, replacement) {\r\n        var isRegex = self.isRegExp(search), captureNames, result, str, origLastIndex;\r\n        if (isRegex) {\r\n            if (search.xregexp) {\r\n                captureNames = search.xregexp.captureNames;\r\n            }\r\n            if (!search.global) {\r\n                origLastIndex = search.lastIndex;\r\n            }\r\n        } else {\r\n            search += \"\";\r\n        }\r\n        if (isType(replacement, \"function\")) {\r\n            result = nativ.replace.call(String(this), search, function () {\r\n                var args = arguments, i;\r\n                if (captureNames) {\r\n                    // Change the `arguments[0]` string primitive to a `String` object that can store properties\r\n                    args[0] = new String(args[0]);\r\n                    // Store named backreferences on the first argument\r\n                    for (i = 0; i < captureNames.length; ++i) {\r\n                        if (captureNames[i]) {\r\n                            args[0][captureNames[i]] = args[i + 1];\r\n                        }\r\n                    }\r\n                }\r\n                // Update `lastIndex` before calling `replacement`.\r\n                // Fixes IE, Chrome, Firefox, Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\r\n                if (isRegex && search.global) {\r\n                    search.lastIndex = args[args.length - 2] + args[0].length;\r\n                }\r\n                return replacement.apply(null, args);\r\n            });\r\n        } else {\r\n            str = String(this); // Ensure `args[args.length - 1]` will be a string when given nonstring `this`\r\n            result = nativ.replace.call(str, search, function () {\r\n                var args = arguments; // Keep this function's `arguments` available through closure\r\n                return nativ.replace.call(String(replacement), replacementToken, function ($0, $1, $2) {\r\n                    var n;\r\n                    // Named or numbered backreference with curly brackets\r\n                    if ($1) {\r\n                        /* XRegExp behavior for `${n}`:\r\n                         * 1. Backreference to numbered capture, where `n` is 1+ digits. `0`, `00`, etc. is the entire match.\r\n                         * 2. Backreference to named capture `n`, if it exists and is not a number overridden by numbered capture.\r\n                         * 3. Otherwise, it's an error.\r\n                         */\r\n                        n = +$1; // Type-convert; drop leading zeros\r\n                        if (n <= args.length - 3) {\r\n                            return args[n] || \"\";\r\n                        }\r\n                        n = captureNames ? lastIndexOf(captureNames, $1) : -1;\r\n                        if (n < 0) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[n + 1] || \"\";\r\n                    }\r\n                    // Else, special variable or numbered backreference (without curly brackets)\r\n                    if ($2 === \"$\") return \"$\";\r\n                    if ($2 === \"&\" || +$2 === 0) return args[0]; // $&, $0 (not followed by 1-9), $00\r\n                    if ($2 === \"`\") return args[args.length - 1].slice(0, args[args.length - 2]);\r\n                    if ($2 === \"'\") return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\r\n                    // Else, numbered backreference (without curly brackets)\r\n                    $2 = +$2; // Type-convert; drop leading zero\r\n                    /* XRegExp behavior:\r\n                     * - Backreferences without curly brackets end after 1 or 2 digits. Use `${..}` for more digits.\r\n                     * - `$1` is an error if there are no capturing groups.\r\n                     * - `$10` is an error if there are less than 10 capturing groups. Use `${1}0` instead.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's an error.\r\n                     * - `$0` (not followed by 1-9), `$00`, and `$&` are the entire match.\r\n                     * Native behavior, for comparison:\r\n                     * - Backreferences end after 1 or 2 digits. Cannot use backreference to capturing group 100+.\r\n                     * - `$1` is a literal `$1` if there are no capturing groups.\r\n                     * - `$10` is `$1` followed by a literal `0` if there are less than 10 capturing groups.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's a literal `$01`.\r\n                     * - `$0` is a literal `$0`. `$&` is the entire match.\r\n                     */\r\n                    if (!isNaN($2)) {\r\n                        if ($2 > args.length - 3) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[$2] || \"\";\r\n                    }\r\n                    throw new SyntaxError(\"invalid token \" + $0);\r\n                });\r\n            });\r\n        }\r\n        if (isRegex) {\r\n            if (search.global) {\r\n                search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n            } else {\r\n                search.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n */\r\n    fixed.split = function (separator, limit) {\r\n        if (!self.isRegExp(separator)) {\r\n            return nativ.split.apply(this, arguments); // use faster native method\r\n        }\r\n        var str = String(this),\r\n            origLastIndex = separator.lastIndex,\r\n            output = [],\r\n            lastLastIndex = 0,\r\n            lastLength;\r\n        /* Values for `limit`, per the spec:\r\n         * If undefined: pow(2,32) - 1\r\n         * If 0, Infinity, or NaN: 0\r\n         * If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\r\n         * If negative number: pow(2,32) - floor(abs(limit))\r\n         * If other: Type-convert, then use the above rules\r\n         */\r\n        limit = (limit === undef ? -1 : limit) >>> 0;\r\n        self.forEach(str, separator, function (match) {\r\n            if ((match.index + match[0].length) > lastLastIndex) { // != `if (match[0].length)`\r\n                output.push(str.slice(lastLastIndex, match.index));\r\n                if (match.length > 1 && match.index < str.length) {\r\n                    Array.prototype.push.apply(output, match.slice(1));\r\n                }\r\n                lastLength = match[0].length;\r\n                lastLastIndex = match.index + lastLength;\r\n            }\r\n        });\r\n        if (lastLastIndex === str.length) {\r\n            if (!nativ.test.call(separator, \"\") || lastLength) {\r\n                output.push(\"\");\r\n            }\r\n        } else {\r\n            output.push(str.slice(lastLastIndex));\r\n        }\r\n        separator.lastIndex = origLastIndex;\r\n        return output.length > limit ? output.slice(0, limit) : output;\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Built-in tokens\r\n *------------------------------------*/\r\n\r\n// Shortcut\r\n    add = addToken.on;\r\n\r\n/* Letter identity escapes that natively match literal characters: \\p, \\P, etc.\r\n * Should be SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-\r\n * browser consistency and to reserve their syntax, but lets them be superseded by XRegExp addons.\r\n */\r\n    add(/\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4})|x(?![\\dA-Fa-f]{2}))/,\r\n        function (match, scope) {\r\n            // \\B is allowed in default scope only\r\n            if (match[1] === \"B\" && scope === defaultScope) {\r\n                return match[0];\r\n            }\r\n            throw new SyntaxError(\"invalid escape \" + match[0]);\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Empty character class: [] or [^]\r\n * Fixes a critical cross-browser syntax inconsistency. Unless this is standardized (per the spec),\r\n * regex syntax can't be accurately parsed because character class endings can't be determined.\r\n */\r\n    add(/\\[(\\^?)]/,\r\n        function (match) {\r\n            // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\r\n            // (?!) should work like \\b\\B, but is unreliable in Firefox\r\n            return match[1] ? \"[\\\\s\\\\S]\" : \"\\\\b\\\\B\";\r\n        });\r\n\r\n/* Comment pattern: (?# )\r\n * Inline comments are an alternative to the line comments allowed in free-spacing mode (flag x).\r\n */\r\n    add(/(?:\\(\\?#[^)]*\\))+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        });\r\n\r\n/* Named backreference: \\k<name>\r\n * Backreference names can use the characters A-Z, a-z, 0-9, _, and $ only.\r\n */\r\n    add(/\\\\k<([\\w$]+)>/,\r\n        function (match) {\r\n            var index = isNaN(match[1]) ? (lastIndexOf(this.captureNames, match[1]) + 1) : +match[1],\r\n                endIndex = match.index + match[0].length;\r\n            if (!index || index > this.captureNames.length) {\r\n                throw new SyntaxError(\"backreference to undefined group \" + match[0]);\r\n            }\r\n            // Keep backreferences separate from subsequent literal numbers\r\n            return \"\\\\\" + index + (\r\n                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ? \"\" : \"(?:)\"\r\n            );\r\n        });\r\n\r\n/* Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\r\n */\r\n    add(/(?:\\s+|#.*)+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"x\");\r\n            },\r\n            customFlags: \"x\"\r\n        });\r\n\r\n/* Dot, in dotall mode (aka singleline mode, flag s) only.\r\n */\r\n    add(/\\./,\r\n        function () {\r\n            return \"[\\\\s\\\\S]\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"s\");\r\n            },\r\n            customFlags: \"s\"\r\n        });\r\n\r\n/* Named capturing group; match the opening delimiter only: (?<name>\r\n * Capture names can use the characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers.\r\n * Supports Python-style (?P<name> as an alternate syntax to avoid issues in recent Opera (which\r\n * natively supports the Python-style syntax). Otherwise, XRegExp might treat numbered\r\n * backreferences to Python-style named capture as octals.\r\n */\r\n    add(/\\(\\?P?<([\\w$]+)>/,\r\n        function (match) {\r\n            if (!isNaN(match[1])) {\r\n                // Avoid incorrect lookups, since named backreferences are added to match arrays\r\n                throw new SyntaxError(\"can't use integer as capture name \" + match[0]);\r\n            }\r\n            this.captureNames.push(match[1]);\r\n            this.hasNamedCapture = true;\r\n            return \"(\";\r\n        });\r\n\r\n/* Numbered backreference or octal, plus any following digits: \\0, \\11, etc.\r\n * Octals except \\0 not followed by 0-9 and backreferences to unopened capture groups throw an\r\n * error. Other matches are returned unaltered. IE <= 8 doesn't support backreferences greater than\r\n * \\99 in regex syntax.\r\n */\r\n    add(/\\\\(\\d+)/,\r\n        function (match, scope) {\r\n            if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) &&\r\n                    match[1] !== \"0\") {\r\n                throw new SyntaxError(\"can't use octal escape or backreference to undefined group \" + match[0]);\r\n            }\r\n            return match[0];\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Capturing group; match the opening parenthesis only.\r\n * Required for support of named capturing groups. Also adds explicit capture mode (flag n).\r\n */\r\n    add(/\\((?!\\?)/,\r\n        function () {\r\n            if (this.hasFlag(\"n\")) {\r\n                return \"(?:\";\r\n            }\r\n            this.captureNames.push(null);\r\n            return \"(\";\r\n        },\r\n        {customFlags: \"n\"});\r\n\r\n/*--------------------------------------\r\n *  Expose XRegExp\r\n *------------------------------------*/\r\n\r\n// For CommonJS enviroments\r\n    if (typeof exports !== \"undefined\") {\r\n        exports.XRegExp = self;\r\n    }\r\n\r\n    return self;\r\n\r\n}());\r\n\r\n\n/***** unicode-base.js *****/\n\n/*!\r\n * XRegExp Unicode Base v1.0.0\r\n * (c) 2008-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for the `\\p{L}` or `\\p{Letter}` Unicode category. Addon packages for other Unicode\r\n * categories, scripts, blocks, and properties are available separately. All Unicode tokens can be\r\n * inverted using `\\P{..}` or `\\p{^..}`. Token names are case insensitive, and any spaces, hyphens,\r\n * and underscores are ignored.\r\n * @requires XRegExp\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var unicode = {};\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n// Generates a standardized token name (lowercase, with hyphens, spaces, and underscores removed)\r\n    function slug(name) {\r\n        return name.replace(/[- _]+/g, \"\").toLowerCase();\r\n    }\r\n\r\n// Expands a list of Unicode code points and ranges to be usable in a regex character class\r\n    function expand(str) {\r\n        return str.replace(/\\w{4}/g, \"\\\\u$&\");\r\n    }\r\n\r\n// Adds leading zeros if shorter than four characters\r\n    function pad4(str) {\r\n        while (str.length < 4) {\r\n            str = \"0\" + str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n// Converts a hexadecimal number to decimal\r\n    function dec(hex) {\r\n        return parseInt(hex, 16);\r\n    }\r\n\r\n// Converts a decimal number to hexadecimal\r\n    function hex(dec) {\r\n        return parseInt(dec, 10).toString(16);\r\n    }\r\n\r\n// Inverts a list of Unicode code points and ranges\r\n    function invert(range) {\r\n        var output = [],\r\n            lastEnd = -1,\r\n            start;\r\n        XRegExp.forEach(range, /\\\\u(\\w{4})(?:-\\\\u(\\w{4}))?/, function (m) {\r\n            start = dec(m[1]);\r\n            if (start > (lastEnd + 1)) {\r\n                output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n                if (start > (lastEnd + 2)) {\r\n                    output.push(\"-\\\\u\" + pad4(hex(start - 1)));\r\n                }\r\n            }\r\n            lastEnd = dec(m[2] || m[1]);\r\n        });\r\n        if (lastEnd < 0xFFFF) {\r\n            output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n            if (lastEnd < 0xFFFE) {\r\n                output.push(\"-\\\\uFFFF\");\r\n            }\r\n        }\r\n        return output.join(\"\");\r\n    }\r\n\r\n// Generates an inverted token on first use\r\n    function cacheInversion(item) {\r\n        return unicode[\"^\" + item] || (unicode[\"^\" + item] = invert(unicode[item]));\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Core functionality\r\n *------------------------------------*/\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n/**\r\n * Adds to the list of Unicode properties that XRegExp regexes can match via \\p{..} or \\P{..}.\r\n * @memberOf XRegExp\r\n * @param {Object} pack Named sets of Unicode code points and ranges.\r\n * @param {Object} [aliases] Aliases for the primary token names.\r\n * @example\r\n *\r\n * XRegExp.addUnicodePackage({\r\n *   XDigit: '0030-00390041-00460061-0066' // 0-9A-Fa-f\r\n * }, {\r\n *   XDigit: 'Hexadecimal'\r\n * });\r\n */\r\n    XRegExp.addUnicodePackage = function (pack, aliases) {\r\n        var p;\r\n        if (!XRegExp.isInstalled(\"extensibility\")) {\r\n            throw new Error(\"extensibility must be installed before adding Unicode packages\");\r\n        }\r\n        if (pack) {\r\n            for (p in pack) {\r\n                if (pack.hasOwnProperty(p)) {\r\n                    unicode[slug(p)] = expand(pack[p]);\r\n                }\r\n            }\r\n        }\r\n        if (aliases) {\r\n            for (p in aliases) {\r\n                if (aliases.hasOwnProperty(p)) {\r\n                    unicode[slug(aliases[p])] = unicode[slug(p)];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n/* Adds data for the Unicode `Letter` category. Addon packages include other categories, scripts,\r\n * blocks, and properties.\r\n */\r\n    XRegExp.addUnicodePackage({\r\n        L: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A008A2-08AC0904-0939093D09500958-09610971-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A697A6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\"\r\n    }, {\r\n        L: \"Letter\"\r\n    });\r\n\r\n/* Adds Unicode property syntax to XRegExp: \\p{..}, \\P{..}, \\p{^..}\r\n */\r\n    XRegExp.addToken(\r\n        /\\\\([pP]){(\\^?)([^}]*)}/,\r\n        function (match, scope) {\r\n            var inv = (match[1] === \"P\" || match[2]) ? \"^\" : \"\",\r\n                item = slug(match[3]);\r\n            // The double negative \\P{^..} is invalid\r\n            if (match[1] === \"P\" && match[2]) {\r\n                throw new SyntaxError(\"invalid double negation \\\\P{^\");\r\n            }\r\n            if (!unicode.hasOwnProperty(item)) {\r\n                throw new SyntaxError(\"invalid or unknown Unicode property \" + match[0]);\r\n            }\r\n            return scope === \"class\" ?\r\n                    (inv ? cacheInversion(item) : unicode[item]) :\r\n                    \"[\" + inv + unicode[item] + \"]\";\r\n        },\r\n        {scope: \"all\"}\r\n    );\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-categories.js *****/\n\n/*!\r\n * XRegExp Unicode Categories v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode categories (aka properties) E.g., `\\p{Lu}` or\r\n * `\\p{Uppercase Letter}`. Token names are case insensitive, and any spaces, hyphens, and\r\n * underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Categories\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        //L: \"\", // Included in the Unicode Base addon\r\n        Ll: \"0061-007A00B500DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02AF037103730377037B-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1D2B1D6B-1D771D79-1D9A1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF7210A210E210F2113212F21342139213C213D2146-2149214E21842C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7B2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76FA771-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        Lu: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F214521832C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lt: \"01C501C801CB01F21F88-1F8F1F98-1F9F1FA8-1FAF1FBC1FCC1FFC\",\r\n        Lm: \"02B0-02C102C6-02D102E0-02E402EC02EE0374037A0559064006E506E607F407F507FA081A0824082809710E460EC610FC17D718431AA71C78-1C7D1D2C-1D6A1D781D9B-1DBF2071207F2090-209C2C7C2C7D2D6F2E2F30053031-3035303B309D309E30FC-30FEA015A4F8-A4FDA60CA67FA717-A71FA770A788A7F8A7F9A9CFAA70AADDAAF3AAF4FF70FF9EFF9F\",\r\n        Lo: \"00AA00BA01BB01C0-01C3029405D0-05EA05F0-05F20620-063F0641-064A066E066F0671-06D306D506EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA0800-08150840-085808A008A2-08AC0904-0939093D09500958-09610972-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E450E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10D0-10FA10FD-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317DC1820-18421844-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C771CE9-1CEC1CEE-1CF11CF51CF62135-21382D30-2D672D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE3006303C3041-3096309F30A1-30FA30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A014A016-A48CA4D0-A4F7A500-A60BA610-A61FA62AA62BA66EA6A0-A6E5A7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2AA00-AA28AA40-AA42AA44-AA4BAA60-AA6FAA71-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADBAADCAAE0-AAEAAAF2AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF66-FF6FFF71-FF9DFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        M: \"0300-036F0483-04890591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0903093A-093C093E-094F0951-0957096209630981-098309BC09BE-09C409C709C809CB-09CD09D709E209E30A01-0A030A3C0A3E-0A420A470A480A4B-0A4D0A510A700A710A750A81-0A830ABC0ABE-0AC50AC7-0AC90ACB-0ACD0AE20AE30B01-0B030B3C0B3E-0B440B470B480B4B-0B4D0B560B570B620B630B820BBE-0BC20BC6-0BC80BCA-0BCD0BD70C01-0C030C3E-0C440C46-0C480C4A-0C4D0C550C560C620C630C820C830CBC0CBE-0CC40CC6-0CC80CCA-0CCD0CD50CD60CE20CE30D020D030D3E-0D440D46-0D480D4A-0D4D0D570D620D630D820D830DCA0DCF-0DD40DD60DD8-0DDF0DF20DF30E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F3E0F3F0F71-0F840F860F870F8D-0F970F99-0FBC0FC6102B-103E1056-1059105E-10601062-10641067-106D1071-10741082-108D108F109A-109D135D-135F1712-17141732-1734175217531772177317B4-17D317DD180B-180D18A91920-192B1930-193B19B0-19C019C819C91A17-1A1B1A55-1A5E1A60-1A7C1A7F1B00-1B041B34-1B441B6B-1B731B80-1B821BA1-1BAD1BE6-1BF31C24-1C371CD0-1CD21CD4-1CE81CED1CF2-1CF41DC0-1DE61DFC-1DFF20D0-20F02CEF-2CF12D7F2DE0-2DFF302A-302F3099309AA66F-A672A674-A67DA69FA6F0A6F1A802A806A80BA823-A827A880A881A8B4-A8C4A8E0-A8F1A926-A92DA947-A953A980-A983A9B3-A9C0AA29-AA36AA43AA4CAA4DAA7BAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAEB-AAEFAAF5AAF6ABE3-ABEAABECABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mn: \"0300-036F0483-04870591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0902093A093C0941-0948094D0951-095709620963098109BC09C1-09C409CD09E209E30A010A020A3C0A410A420A470A480A4B-0A4D0A510A700A710A750A810A820ABC0AC1-0AC50AC70AC80ACD0AE20AE30B010B3C0B3F0B41-0B440B4D0B560B620B630B820BC00BCD0C3E-0C400C46-0C480C4A-0C4D0C550C560C620C630CBC0CBF0CC60CCC0CCD0CE20CE30D41-0D440D4D0D620D630DCA0DD2-0DD40DD60E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F71-0F7E0F80-0F840F860F870F8D-0F970F99-0FBC0FC6102D-10301032-10371039103A103D103E10581059105E-10601071-1074108210851086108D109D135D-135F1712-17141732-1734175217531772177317B417B517B7-17BD17C617C9-17D317DD180B-180D18A91920-19221927192819321939-193B1A171A181A561A58-1A5E1A601A621A65-1A6C1A73-1A7C1A7F1B00-1B031B341B36-1B3A1B3C1B421B6B-1B731B801B811BA2-1BA51BA81BA91BAB1BE61BE81BE91BED1BEF-1BF11C2C-1C331C361C371CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF20D0-20DC20E120E5-20F02CEF-2CF12D7F2DE0-2DFF302A-302D3099309AA66FA674-A67DA69FA6F0A6F1A802A806A80BA825A826A8C4A8E0-A8F1A926-A92DA947-A951A980-A982A9B3A9B6-A9B9A9BCAA29-AA2EAA31AA32AA35AA36AA43AA4CAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAECAAEDAAF6ABE5ABE8ABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mc: \"0903093B093E-09400949-094C094E094F0982098309BE-09C009C709C809CB09CC09D70A030A3E-0A400A830ABE-0AC00AC90ACB0ACC0B020B030B3E0B400B470B480B4B0B4C0B570BBE0BBF0BC10BC20BC6-0BC80BCA-0BCC0BD70C01-0C030C41-0C440C820C830CBE0CC0-0CC40CC70CC80CCA0CCB0CD50CD60D020D030D3E-0D400D46-0D480D4A-0D4C0D570D820D830DCF-0DD10DD8-0DDF0DF20DF30F3E0F3F0F7F102B102C10311038103B103C105610571062-10641067-106D108310841087-108C108F109A-109C17B617BE-17C517C717C81923-19261929-192B193019311933-193819B0-19C019C819C91A19-1A1B1A551A571A611A631A641A6D-1A721B041B351B3B1B3D-1B411B431B441B821BA11BA61BA71BAA1BAC1BAD1BE71BEA-1BEC1BEE1BF21BF31C24-1C2B1C341C351CE11CF21CF3302E302FA823A824A827A880A881A8B4-A8C3A952A953A983A9B4A9B5A9BAA9BBA9BD-A9C0AA2FAA30AA33AA34AA4DAA7BAAEBAAEEAAEFAAF5ABE3ABE4ABE6ABE7ABE9ABEAABEC\",\r\n        Me: \"0488048920DD-20E020E2-20E4A670-A672\",\r\n        N: \"0030-003900B200B300B900BC-00BE0660-066906F0-06F907C0-07C90966-096F09E6-09EF09F4-09F90A66-0A6F0AE6-0AEF0B66-0B6F0B72-0B770BE6-0BF20C66-0C6F0C78-0C7E0CE6-0CEF0D66-0D750E50-0E590ED0-0ED90F20-0F331040-10491090-10991369-137C16EE-16F017E0-17E917F0-17F91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C5920702074-20792080-20892150-21822185-21892460-249B24EA-24FF2776-27932CFD30073021-30293038-303A3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA620-A629A6E6-A6EFA830-A835A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nd: \"0030-00390660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nl: \"16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF\",\r\n        No: \"00B200B300B900BC-00BE09F4-09F90B72-0B770BF0-0BF20C78-0C7E0D70-0D750F2A-0F331369-137C17F0-17F919DA20702074-20792080-20892150-215F21892460-249B24EA-24FF2776-27932CFD3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA830-A835\",\r\n        P: \"0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100A700AB00B600B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F3A-0F3D0F850FD0-0FD40FD90FDA104A-104F10FB1360-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2D702E00-2E2E2E30-2E3B3001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65\",\r\n        Pd: \"002D058A05BE140018062010-20152E172E1A2E3A2E3B301C303030A0FE31FE32FE58FE63FF0D\",\r\n        Ps: \"0028005B007B0F3A0F3C169B201A201E2045207D208D23292768276A276C276E27702772277427C527E627E827EA27EC27EE2983298529872989298B298D298F299129932995299729D829DA29FC2E222E242E262E283008300A300C300E3010301430163018301A301DFD3EFE17FE35FE37FE39FE3BFE3DFE3FFE41FE43FE47FE59FE5BFE5DFF08FF3BFF5BFF5FFF62\",\r\n        Pe: \"0029005D007D0F3B0F3D169C2046207E208E232A2769276B276D276F27712773277527C627E727E927EB27ED27EF298429862988298A298C298E2990299229942996299829D929DB29FD2E232E252E272E293009300B300D300F3011301530173019301B301E301FFD3FFE18FE36FE38FE3AFE3CFE3EFE40FE42FE44FE48FE5AFE5CFE5EFF09FF3DFF5DFF60FF63\",\r\n        Pi: \"00AB2018201B201C201F20392E022E042E092E0C2E1C2E20\",\r\n        Pf: \"00BB2019201D203A2E032E052E0A2E0D2E1D2E21\",\r\n        Pc: \"005F203F20402054FE33FE34FE4D-FE4FFF3F\",\r\n        Po: \"0021-00230025-0027002A002C002E002F003A003B003F0040005C00A100A700B600B700BF037E0387055A-055F058905C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F850FD0-0FD40FD90FDA104A-104F10FB1360-1368166D166E16EB-16ED1735173617D4-17D617D8-17DA1800-18051807-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD3201620172020-20272030-2038203B-203E2041-20432047-205120532055-205E2CF9-2CFC2CFE2CFF2D702E002E012E06-2E082E0B2E0E-2E162E182E192E1B2E1E2E1F2E2A-2E2E2E30-2E393001-3003303D30FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFE10-FE16FE19FE30FE45FE46FE49-FE4CFE50-FE52FE54-FE57FE5F-FE61FE68FE6AFE6BFF01-FF03FF05-FF07FF0AFF0CFF0EFF0FFF1AFF1BFF1FFF20FF3CFF61FF64FF65\",\r\n        S: \"0024002B003C-003E005E0060007C007E00A2-00A600A800A900AC00AE-00B100B400B800D700F702C2-02C502D2-02DF02E5-02EB02ED02EF-02FF03750384038503F60482058F0606-0608060B060E060F06DE06E906FD06FE07F609F209F309FA09FB0AF10B700BF3-0BFA0C7F0D790E3F0F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-139917DB194019DE-19FF1B61-1B6A1B74-1B7C1FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE20442052207A-207C208A-208C20A0-20B9210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B2140-2144214A-214D214F2190-2328232B-23F32400-24262440-244A249C-24E92500-26FF2701-27672794-27C427C7-27E527F0-29822999-29D729DC-29FB29FE-2B4C2B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F309B309C319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A700-A716A720A721A789A78AA828-A82BA836-A839AA77-AA79FB29FBB2-FBC1FDFCFDFDFE62FE64-FE66FE69FF04FF0BFF1C-FF1EFF3EFF40FF5CFF5EFFE0-FFE6FFE8-FFEEFFFCFFFD\",\r\n        Sm: \"002B003C-003E007C007E00AC00B100D700F703F60606-060820442052207A-207C208A-208C21182140-2144214B2190-2194219A219B21A021A321A621AE21CE21CF21D221D421F4-22FF2308-230B23202321237C239B-23B323DC-23E125B725C125F8-25FF266F27C0-27C427C7-27E527F0-27FF2900-29822999-29D729DC-29FB29FE-2AFF2B30-2B442B47-2B4CFB29FE62FE64-FE66FF0BFF1C-FF1EFF5CFF5EFFE2FFE9-FFEC\",\r\n        Sc: \"002400A2-00A5058F060B09F209F309FB0AF10BF90E3F17DB20A0-20B9A838FDFCFE69FF04FFE0FFE1FFE5FFE6\",\r\n        Sk: \"005E006000A800AF00B400B802C2-02C502D2-02DF02E5-02EB02ED02EF-02FF0375038403851FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE309B309CA700-A716A720A721A789A78AFBB2-FBC1FF3EFF40FFE3\",\r\n        So: \"00A600A900AE00B00482060E060F06DE06E906FD06FE07F609FA0B700BF3-0BF80BFA0C7F0D790F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-1399194019DE-19FF1B61-1B6A1B74-1B7C210021012103-210621082109211421162117211E-2123212521272129212E213A213B214A214C214D214F2195-2199219C-219F21A121A221A421A521A7-21AD21AF-21CD21D021D121D321D5-21F32300-2307230C-231F2322-2328232B-237B237D-239A23B4-23DB23E2-23F32400-24262440-244A249C-24E92500-25B625B8-25C025C2-25F72600-266E2670-26FF2701-27672794-27BF2800-28FF2B00-2B2F2B452B462B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A828-A82BA836A837A839AA77-AA79FDFDFFE4FFE8FFEDFFEEFFFCFFFD\",\r\n        Z: \"002000A01680180E2000-200A20282029202F205F3000\",\r\n        Zs: \"002000A01680180E2000-200A202F205F3000\",\r\n        Zl: \"2028\",\r\n        Zp: \"2029\",\r\n        C: \"0000-001F007F-009F00AD03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-0605061C061D06DD070E070F074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF200B-200F202A-202E2060-206F20722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-F8FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFD-FF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFFBFFFEFFFF\",\r\n        Cc: \"0000-001F007F-009F\",\r\n        Cf: \"00AD0600-060406DD070F200B-200F202A-202E2060-2064206A-206FFEFFFFF9-FFFB\",\r\n        Co: \"E000-F8FF\",\r\n        Cs: \"D800-DFFF\",\r\n        Cn: \"03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-05FF0605061C061D070E074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF2065-206920722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-D7FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFDFEFEFF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFF8FFFEFFFF\"\r\n    }, {\r\n        //L: \"Letter\", // Included in the Unicode Base addon\r\n        Ll: \"Lowercase_Letter\",\r\n        Lu: \"Uppercase_Letter\",\r\n        Lt: \"Titlecase_Letter\",\r\n        Lm: \"Modifier_Letter\",\r\n        Lo: \"Other_Letter\",\r\n        M: \"Mark\",\r\n        Mn: \"Nonspacing_Mark\",\r\n        Mc: \"Spacing_Mark\",\r\n        Me: \"Enclosing_Mark\",\r\n        N: \"Number\",\r\n        Nd: \"Decimal_Number\",\r\n        Nl: \"Letter_Number\",\r\n        No: \"Other_Number\",\r\n        P: \"Punctuation\",\r\n        Pd: \"Dash_Punctuation\",\r\n        Ps: \"Open_Punctuation\",\r\n        Pe: \"Close_Punctuation\",\r\n        Pi: \"Initial_Punctuation\",\r\n        Pf: \"Final_Punctuation\",\r\n        Pc: \"Connector_Punctuation\",\r\n        Po: \"Other_Punctuation\",\r\n        S: \"Symbol\",\r\n        Sm: \"Math_Symbol\",\r\n        Sc: \"Currency_Symbol\",\r\n        Sk: \"Modifier_Symbol\",\r\n        So: \"Other_Symbol\",\r\n        Z: \"Separator\",\r\n        Zs: \"Space_Separator\",\r\n        Zl: \"Line_Separator\",\r\n        Zp: \"Paragraph_Separator\",\r\n        C: \"Other\",\r\n        Cc: \"Control\",\r\n        Cf: \"Format\",\r\n        Co: \"Private_Use\",\r\n        Cs: \"Surrogate\",\r\n        Cn: \"Unassigned\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-scripts.js *****/\n\n/*!\r\n * XRegExp Unicode Scripts v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode scripts in the Basic Multilingual Plane (U+0000-U+FFFF).\r\n * E.g., `\\p{Latin}`. Token names are case insensitive, and any spaces, hyphens, and underscores\r\n * are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Scripts\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Arabic: \"0600-06040606-060B060D-061A061E0620-063F0641-064A0656-065E066A-066F0671-06DC06DE-06FF0750-077F08A008A2-08AC08E4-08FEFB50-FBC1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFCFE70-FE74FE76-FEFC\",\r\n        Armenian: \"0531-05560559-055F0561-0587058A058FFB13-FB17\",\r\n        Balinese: \"1B00-1B4B1B50-1B7C\",\r\n        Bamum: \"A6A0-A6F7\",\r\n        Batak: \"1BC0-1BF31BFC-1BFF\",\r\n        Bengali: \"0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB\",\r\n        Bopomofo: \"02EA02EB3105-312D31A0-31BA\",\r\n        Braille: \"2800-28FF\",\r\n        Buginese: \"1A00-1A1B1A1E1A1F\",\r\n        Buhid: \"1740-1753\",\r\n        Canadian_Aboriginal: \"1400-167F18B0-18F5\",\r\n        Cham: \"AA00-AA36AA40-AA4DAA50-AA59AA5C-AA5F\",\r\n        Cherokee: \"13A0-13F4\",\r\n        Common: \"0000-0040005B-0060007B-00A900AB-00B900BB-00BF00D700F702B9-02DF02E5-02E902EC-02FF0374037E038503870589060C061B061F06400660-066906DD096409650E3F0FD5-0FD810FB16EB-16ED173517361802180318051CD31CE11CE9-1CEC1CEE-1CF31CF51CF62000-200B200E-2064206A-20702074-207E2080-208E20A0-20B92100-21252127-2129212C-21312133-214D214F-215F21892190-23F32400-24262440-244A2460-26FF2701-27FF2900-2B4C2B50-2B592E00-2E3B2FF0-2FFB3000-300430063008-30203030-3037303C-303F309B309C30A030FB30FC3190-319F31C0-31E33220-325F327F-32CF3358-33FF4DC0-4DFFA700-A721A788-A78AA830-A839FD3EFD3FFDFDFE10-FE19FE30-FE52FE54-FE66FE68-FE6BFEFFFF01-FF20FF3B-FF40FF5B-FF65FF70FF9EFF9FFFE0-FFE6FFE8-FFEEFFF9-FFFD\",\r\n        Coptic: \"03E2-03EF2C80-2CF32CF9-2CFF\",\r\n        Cyrillic: \"0400-04840487-05271D2B1D782DE0-2DFFA640-A697A69F\",\r\n        Devanagari: \"0900-09500953-09630966-09770979-097FA8E0-A8FB\",\r\n        Ethiopic: \"1200-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-13992D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDEAB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2E\",\r\n        Georgian: \"10A0-10C510C710CD10D0-10FA10FC-10FF2D00-2D252D272D2D\",\r\n        Glagolitic: \"2C00-2C2E2C30-2C5E\",\r\n        Greek: \"0370-03730375-0377037A-037D038403860388-038A038C038E-03A103A3-03E103F0-03FF1D26-1D2A1D5D-1D611D66-1D6A1DBF1F00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2126\",\r\n        Gujarati: \"0A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF1\",\r\n        Gurmukhi: \"0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A75\",\r\n        Han: \"2E80-2E992E9B-2EF32F00-2FD5300530073021-30293038-303B3400-4DB54E00-9FCCF900-FA6DFA70-FAD9\",\r\n        Hangul: \"1100-11FF302E302F3131-318E3200-321E3260-327EA960-A97CAC00-D7A3D7B0-D7C6D7CB-D7FBFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Hanunoo: \"1720-1734\",\r\n        Hebrew: \"0591-05C705D0-05EA05F0-05F4FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FB4F\",\r\n        Hiragana: \"3041-3096309D-309F\",\r\n        Inherited: \"0300-036F04850486064B-0655065F0670095109521CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF200C200D20D0-20F0302A-302D3099309AFE00-FE0FFE20-FE26\",\r\n        Javanese: \"A980-A9CDA9CF-A9D9A9DEA9DF\",\r\n        Kannada: \"0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF2\",\r\n        Katakana: \"30A1-30FA30FD-30FF31F0-31FF32D0-32FE3300-3357FF66-FF6FFF71-FF9D\",\r\n        Kayah_Li: \"A900-A92F\",\r\n        Khmer: \"1780-17DD17E0-17E917F0-17F919E0-19FF\",\r\n        Lao: \"0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF\",\r\n        Latin: \"0041-005A0061-007A00AA00BA00C0-00D600D8-00F600F8-02B802E0-02E41D00-1D251D2C-1D5C1D62-1D651D6B-1D771D79-1DBE1E00-1EFF2071207F2090-209C212A212B2132214E2160-21882C60-2C7FA722-A787A78B-A78EA790-A793A7A0-A7AAA7F8-A7FFFB00-FB06FF21-FF3AFF41-FF5A\",\r\n        Lepcha: \"1C00-1C371C3B-1C491C4D-1C4F\",\r\n        Limbu: \"1900-191C1920-192B1930-193B19401944-194F\",\r\n        Lisu: \"A4D0-A4FF\",\r\n        Malayalam: \"0D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F\",\r\n        Mandaic: \"0840-085B085E\",\r\n        Meetei_Mayek: \"AAE0-AAF6ABC0-ABEDABF0-ABF9\",\r\n        Mongolian: \"1800180118041806-180E1810-18191820-18771880-18AA\",\r\n        Myanmar: \"1000-109FAA60-AA7B\",\r\n        New_Tai_Lue: \"1980-19AB19B0-19C919D0-19DA19DE19DF\",\r\n        Nko: \"07C0-07FA\",\r\n        Ogham: \"1680-169C\",\r\n        Ol_Chiki: \"1C50-1C7F\",\r\n        Oriya: \"0B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B77\",\r\n        Phags_Pa: \"A840-A877\",\r\n        Rejang: \"A930-A953A95F\",\r\n        Runic: \"16A0-16EA16EE-16F0\",\r\n        Samaritan: \"0800-082D0830-083E\",\r\n        Saurashtra: \"A880-A8C4A8CE-A8D9\",\r\n        Sinhala: \"0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF4\",\r\n        Sundanese: \"1B80-1BBF1CC0-1CC7\",\r\n        Syloti_Nagri: \"A800-A82B\",\r\n        Syriac: \"0700-070D070F-074A074D-074F\",\r\n        Tagalog: \"1700-170C170E-1714\",\r\n        Tagbanwa: \"1760-176C176E-177017721773\",\r\n        Tai_Le: \"1950-196D1970-1974\",\r\n        Tai_Tham: \"1A20-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD\",\r\n        Tai_Viet: \"AA80-AAC2AADB-AADF\",\r\n        Tamil: \"0B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA\",\r\n        Telugu: \"0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F\",\r\n        Thaana: \"0780-07B1\",\r\n        Thai: \"0E01-0E3A0E40-0E5B\",\r\n        Tibetan: \"0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FD40FD90FDA\",\r\n        Tifinagh: \"2D30-2D672D6F2D702D7F\",\r\n        Vai: \"A500-A62B\",\r\n        Yi: \"A000-A48CA490-A4C6\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-blocks.js *****/\n\n/*!\r\n * XRegExp Unicode Blocks v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode blocks in the Basic Multilingual Plane (U+0000-U+FFFF). Unicode\r\n * blocks use the prefix \"In\". E.g., `\\p{InBasicLatin}`. Token names are case insensitive, and any\r\n * spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Blocks\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        InBasic_Latin: \"0000-007F\",\r\n        InLatin_1_Supplement: \"0080-00FF\",\r\n        InLatin_Extended_A: \"0100-017F\",\r\n        InLatin_Extended_B: \"0180-024F\",\r\n        InIPA_Extensions: \"0250-02AF\",\r\n        InSpacing_Modifier_Letters: \"02B0-02FF\",\r\n        InCombining_Diacritical_Marks: \"0300-036F\",\r\n        InGreek_and_Coptic: \"0370-03FF\",\r\n        InCyrillic: \"0400-04FF\",\r\n        InCyrillic_Supplement: \"0500-052F\",\r\n        InArmenian: \"0530-058F\",\r\n        InHebrew: \"0590-05FF\",\r\n        InArabic: \"0600-06FF\",\r\n        InSyriac: \"0700-074F\",\r\n        InArabic_Supplement: \"0750-077F\",\r\n        InThaana: \"0780-07BF\",\r\n        InNKo: \"07C0-07FF\",\r\n        InSamaritan: \"0800-083F\",\r\n        InMandaic: \"0840-085F\",\r\n        InArabic_Extended_A: \"08A0-08FF\",\r\n        InDevanagari: \"0900-097F\",\r\n        InBengali: \"0980-09FF\",\r\n        InGurmukhi: \"0A00-0A7F\",\r\n        InGujarati: \"0A80-0AFF\",\r\n        InOriya: \"0B00-0B7F\",\r\n        InTamil: \"0B80-0BFF\",\r\n        InTelugu: \"0C00-0C7F\",\r\n        InKannada: \"0C80-0CFF\",\r\n        InMalayalam: \"0D00-0D7F\",\r\n        InSinhala: \"0D80-0DFF\",\r\n        InThai: \"0E00-0E7F\",\r\n        InLao: \"0E80-0EFF\",\r\n        InTibetan: \"0F00-0FFF\",\r\n        InMyanmar: \"1000-109F\",\r\n        InGeorgian: \"10A0-10FF\",\r\n        InHangul_Jamo: \"1100-11FF\",\r\n        InEthiopic: \"1200-137F\",\r\n        InEthiopic_Supplement: \"1380-139F\",\r\n        InCherokee: \"13A0-13FF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics: \"1400-167F\",\r\n        InOgham: \"1680-169F\",\r\n        InRunic: \"16A0-16FF\",\r\n        InTagalog: \"1700-171F\",\r\n        InHanunoo: \"1720-173F\",\r\n        InBuhid: \"1740-175F\",\r\n        InTagbanwa: \"1760-177F\",\r\n        InKhmer: \"1780-17FF\",\r\n        InMongolian: \"1800-18AF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics_Extended: \"18B0-18FF\",\r\n        InLimbu: \"1900-194F\",\r\n        InTai_Le: \"1950-197F\",\r\n        InNew_Tai_Lue: \"1980-19DF\",\r\n        InKhmer_Symbols: \"19E0-19FF\",\r\n        InBuginese: \"1A00-1A1F\",\r\n        InTai_Tham: \"1A20-1AAF\",\r\n        InBalinese: \"1B00-1B7F\",\r\n        InSundanese: \"1B80-1BBF\",\r\n        InBatak: \"1BC0-1BFF\",\r\n        InLepcha: \"1C00-1C4F\",\r\n        InOl_Chiki: \"1C50-1C7F\",\r\n        InSundanese_Supplement: \"1CC0-1CCF\",\r\n        InVedic_Extensions: \"1CD0-1CFF\",\r\n        InPhonetic_Extensions: \"1D00-1D7F\",\r\n        InPhonetic_Extensions_Supplement: \"1D80-1DBF\",\r\n        InCombining_Diacritical_Marks_Supplement: \"1DC0-1DFF\",\r\n        InLatin_Extended_Additional: \"1E00-1EFF\",\r\n        InGreek_Extended: \"1F00-1FFF\",\r\n        InGeneral_Punctuation: \"2000-206F\",\r\n        InSuperscripts_and_Subscripts: \"2070-209F\",\r\n        InCurrency_Symbols: \"20A0-20CF\",\r\n        InCombining_Diacritical_Marks_for_Symbols: \"20D0-20FF\",\r\n        InLetterlike_Symbols: \"2100-214F\",\r\n        InNumber_Forms: \"2150-218F\",\r\n        InArrows: \"2190-21FF\",\r\n        InMathematical_Operators: \"2200-22FF\",\r\n        InMiscellaneous_Technical: \"2300-23FF\",\r\n        InControl_Pictures: \"2400-243F\",\r\n        InOptical_Character_Recognition: \"2440-245F\",\r\n        InEnclosed_Alphanumerics: \"2460-24FF\",\r\n        InBox_Drawing: \"2500-257F\",\r\n        InBlock_Elements: \"2580-259F\",\r\n        InGeometric_Shapes: \"25A0-25FF\",\r\n        InMiscellaneous_Symbols: \"2600-26FF\",\r\n        InDingbats: \"2700-27BF\",\r\n        InMiscellaneous_Mathematical_Symbols_A: \"27C0-27EF\",\r\n        InSupplemental_Arrows_A: \"27F0-27FF\",\r\n        InBraille_Patterns: \"2800-28FF\",\r\n        InSupplemental_Arrows_B: \"2900-297F\",\r\n        InMiscellaneous_Mathematical_Symbols_B: \"2980-29FF\",\r\n        InSupplemental_Mathematical_Operators: \"2A00-2AFF\",\r\n        InMiscellaneous_Symbols_and_Arrows: \"2B00-2BFF\",\r\n        InGlagolitic: \"2C00-2C5F\",\r\n        InLatin_Extended_C: \"2C60-2C7F\",\r\n        InCoptic: \"2C80-2CFF\",\r\n        InGeorgian_Supplement: \"2D00-2D2F\",\r\n        InTifinagh: \"2D30-2D7F\",\r\n        InEthiopic_Extended: \"2D80-2DDF\",\r\n        InCyrillic_Extended_A: \"2DE0-2DFF\",\r\n        InSupplemental_Punctuation: \"2E00-2E7F\",\r\n        InCJK_Radicals_Supplement: \"2E80-2EFF\",\r\n        InKangxi_Radicals: \"2F00-2FDF\",\r\n        InIdeographic_Description_Characters: \"2FF0-2FFF\",\r\n        InCJK_Symbols_and_Punctuation: \"3000-303F\",\r\n        InHiragana: \"3040-309F\",\r\n        InKatakana: \"30A0-30FF\",\r\n        InBopomofo: \"3100-312F\",\r\n        InHangul_Compatibility_Jamo: \"3130-318F\",\r\n        InKanbun: \"3190-319F\",\r\n        InBopomofo_Extended: \"31A0-31BF\",\r\n        InCJK_Strokes: \"31C0-31EF\",\r\n        InKatakana_Phonetic_Extensions: \"31F0-31FF\",\r\n        InEnclosed_CJK_Letters_and_Months: \"3200-32FF\",\r\n        InCJK_Compatibility: \"3300-33FF\",\r\n        InCJK_Unified_Ideographs_Extension_A: \"3400-4DBF\",\r\n        InYijing_Hexagram_Symbols: \"4DC0-4DFF\",\r\n        InCJK_Unified_Ideographs: \"4E00-9FFF\",\r\n        InYi_Syllables: \"A000-A48F\",\r\n        InYi_Radicals: \"A490-A4CF\",\r\n        InLisu: \"A4D0-A4FF\",\r\n        InVai: \"A500-A63F\",\r\n        InCyrillic_Extended_B: \"A640-A69F\",\r\n        InBamum: \"A6A0-A6FF\",\r\n        InModifier_Tone_Letters: \"A700-A71F\",\r\n        InLatin_Extended_D: \"A720-A7FF\",\r\n        InSyloti_Nagri: \"A800-A82F\",\r\n        InCommon_Indic_Number_Forms: \"A830-A83F\",\r\n        InPhags_pa: \"A840-A87F\",\r\n        InSaurashtra: \"A880-A8DF\",\r\n        InDevanagari_Extended: \"A8E0-A8FF\",\r\n        InKayah_Li: \"A900-A92F\",\r\n        InRejang: \"A930-A95F\",\r\n        InHangul_Jamo_Extended_A: \"A960-A97F\",\r\n        InJavanese: \"A980-A9DF\",\r\n        InCham: \"AA00-AA5F\",\r\n        InMyanmar_Extended_A: \"AA60-AA7F\",\r\n        InTai_Viet: \"AA80-AADF\",\r\n        InMeetei_Mayek_Extensions: \"AAE0-AAFF\",\r\n        InEthiopic_Extended_A: \"AB00-AB2F\",\r\n        InMeetei_Mayek: \"ABC0-ABFF\",\r\n        InHangul_Syllables: \"AC00-D7AF\",\r\n        InHangul_Jamo_Extended_B: \"D7B0-D7FF\",\r\n        InHigh_Surrogates: \"D800-DB7F\",\r\n        InHigh_Private_Use_Surrogates: \"DB80-DBFF\",\r\n        InLow_Surrogates: \"DC00-DFFF\",\r\n        InPrivate_Use_Area: \"E000-F8FF\",\r\n        InCJK_Compatibility_Ideographs: \"F900-FAFF\",\r\n        InAlphabetic_Presentation_Forms: \"FB00-FB4F\",\r\n        InArabic_Presentation_Forms_A: \"FB50-FDFF\",\r\n        InVariation_Selectors: \"FE00-FE0F\",\r\n        InVertical_Forms: \"FE10-FE1F\",\r\n        InCombining_Half_Marks: \"FE20-FE2F\",\r\n        InCJK_Compatibility_Forms: \"FE30-FE4F\",\r\n        InSmall_Form_Variants: \"FE50-FE6F\",\r\n        InArabic_Presentation_Forms_B: \"FE70-FEFF\",\r\n        InHalfwidth_and_Fullwidth_Forms: \"FF00-FFEF\",\r\n        InSpecials: \"FFF0-FFFF\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-properties.js *****/\n\n/*!\r\n * XRegExp Unicode Properties v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds Unicode properties necessary to meet Level 1 Unicode support (detailed in UTS#18 RL1.2).\r\n * Includes code points from the Basic Multilingual Plane (U+0000-U+FFFF) only. Token names are\r\n * case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Properties\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Alphabetic: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE03450370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705B0-05BD05BF05C105C205C405C505C705D0-05EA05F0-05F20610-061A0620-06570659-065F066E-06D306D5-06DC06E1-06E806ED-06EF06FA-06FC06FF0710-073F074D-07B107CA-07EA07F407F507FA0800-0817081A-082C0840-085808A008A2-08AC08E4-08E908F0-08FE0900-093B093D-094C094E-09500955-09630971-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BD-09C409C709C809CB09CC09CE09D709DC09DD09DF-09E309F009F10A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3E-0A420A470A480A4B0A4C0A510A59-0A5C0A5E0A70-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD-0AC50AC7-0AC90ACB0ACC0AD00AE0-0AE30B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D-0B440B470B480B4B0B4C0B560B570B5C0B5D0B5F-0B630B710B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCC0BD00BD70C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4C0C550C560C580C590C60-0C630C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD-0CC40CC6-0CC80CCA-0CCC0CD50CD60CDE0CE0-0CE30CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4C0D4E0D570D60-0D630D7A-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCF-0DD40DD60DD8-0DDF0DF20DF30E01-0E3A0E40-0E460E4D0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60ECD0EDC-0EDF0F000F40-0F470F49-0F6C0F71-0F810F88-0F970F99-0FBC1000-10361038103B-103F1050-10621065-1068106E-1086108E109C109D10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135F1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16EE-16F01700-170C170E-17131720-17331740-17531760-176C176E-1770177217731780-17B317B6-17C817D717DC1820-18771880-18AA18B0-18F51900-191C1920-192B1930-19381950-196D1970-19741980-19AB19B0-19C91A00-1A1B1A20-1A5E1A61-1A741AA71B00-1B331B35-1B431B45-1B4B1B80-1BA91BAC-1BAF1BBA-1BE51BE7-1BF11C00-1C351C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF31CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E2160-218824B6-24E92C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2DFF2E2F3005-30073021-30293031-30353038-303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA674-A67BA67F-A697A69F-A6EFA717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A827A840-A873A880-A8C3A8F2-A8F7A8FBA90A-A92AA930-A952A960-A97CA980-A9B2A9B4-A9BFA9CFAA00-AA36AA40-AA4DAA60-AA76AA7AAA80-AABEAAC0AAC2AADB-AADDAAE0-AAEFAAF2-AAF5AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEAAC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Uppercase: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F21452160-216F218324B6-24CF2C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lowercase: \"0061-007A00AA00B500BA00DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02B802C002C102E0-02E40345037103730377037A-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1DBF1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF72071207F2090-209C210A210E210F2113212F21342139213C213D2146-2149214E2170-217F218424D0-24E92C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7D2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76F-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7F8-A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        White_Space: \"0009-000D0020008500A01680180E2000-200A20282029202F205F3000\",\r\n        Noncharacter_Code_Point: \"FDD0-FDEFFFFEFFFF\",\r\n        Default_Ignorable_Code_Point: \"00AD034F115F116017B417B5180B-180D200B-200F202A-202E2060-206F3164FE00-FE0FFEFFFFA0FFF0-FFF8\",\r\n        // \\p{Any} matches a code unit. To match any code point via surrogate pairs, use (?:[\\0-\\uD7FF\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])\r\n        Any: \"0000-FFFF\", // \\p{^Any} compiles to [^\\u0000-\\uFFFF]; [\\p{^Any}] to []\r\n        Ascii: \"0000-007F\",\r\n        // \\p{Assigned} is equivalent to \\p{^Cn}\r\n        //Assigned: XRegExp(\"[\\\\p{^Cn}]\").source.replace(/[[\\]]|\\\\u/g, \"\") // Negation inside a character class triggers inversion\r\n        Assigned: \"0000-0377037A-037E0384-038A038C038E-03A103A3-05270531-05560559-055F0561-05870589058A058F0591-05C705D0-05EA05F0-05F40600-06040606-061B061E-070D070F-074A074D-07B107C0-07FA0800-082D0830-083E0840-085B085E08A008A2-08AC08E4-08FE0900-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF10B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B770B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF40E01-0E3A0E3F-0E5B0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FDA1000-10C510C710CD10D0-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-139913A0-13F41400-169C16A0-16F01700-170C170E-17141720-17361740-17531760-176C176E-1770177217731780-17DD17E0-17E917F0-17F91800-180E1810-18191820-18771880-18AA18B0-18F51900-191C1920-192B1930-193B19401944-196D1970-19741980-19AB19B0-19C919D0-19DA19DE-1A1B1A1E-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD1B00-1B4B1B50-1B7C1B80-1BF31BFC-1C371C3B-1C491C4D-1C7F1CC0-1CC71CD0-1CF61D00-1DE61DFC-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2000-2064206A-20712074-208E2090-209C20A0-20B920D0-20F02100-21892190-23F32400-24262440-244A2460-26FF2701-2B4C2B50-2B592C00-2C2E2C30-2C5E2C60-2CF32CF9-2D252D272D2D2D30-2D672D6F2D702D7F-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2E3B2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB3000-303F3041-30963099-30FF3105-312D3131-318E3190-31BA31C0-31E331F0-321E3220-32FE3300-4DB54DC0-9FCCA000-A48CA490-A4C6A4D0-A62BA640-A697A69F-A6F7A700-A78EA790-A793A7A0-A7AAA7F8-A82BA830-A839A840-A877A880-A8C4A8CE-A8D9A8E0-A8FBA900-A953A95F-A97CA980-A9CDA9CF-A9D9A9DEA9DFAA00-AA36AA40-AA4DAA50-AA59AA5C-AA7BAA80-AAC2AADB-AAF6AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEDABF0-ABF9AC00-D7A3D7B0-D7C6D7CB-D7FBD800-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBC1FBD3-FD3FFD50-FD8FFD92-FDC7FDF0-FDFDFE00-FE19FE20-FE26FE30-FE52FE54-FE66FE68-FE6BFE70-FE74FE76-FEFCFEFFFF01-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDCFFE0-FFE6FFE8-FFEEFFF9-FFFD\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** matchrecursive.js *****/\n\n/*!\r\n * XRegExp.matchRecursive v0.2.0\r\n * (c) 2009-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Returns a match detail object composed of the provided values.\r\n * @private\r\n */\r\n    function row(value, name, start, end) {\r\n        return {value:value, name:name, start:start, end:end};\r\n    }\r\n\r\n/**\r\n * Returns an array of match strings between outermost left and right delimiters, or an array of\r\n * objects with detailed match parts and position data. An error is thrown if delimiters are\r\n * unbalanced within the data.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {String} left Left delimiter as an XRegExp pattern.\r\n * @param {String} right Right delimiter as an XRegExp pattern.\r\n * @param {String} [flags] Flags for the left and right delimiters. Use any of: `gimnsxy`.\r\n * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\r\n * @returns {Array} Array of matches, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage\r\n * var str = '(t((e))s)t()(ing)';\r\n * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\r\n * // -> ['t((e))s', '', 'ing']\r\n *\r\n * // Extended information mode with valueNames\r\n * str = 'Here is <div> <div>an</div></div> example';\r\n * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\r\n *   valueNames: ['between', 'left', 'match', 'right']\r\n * });\r\n * // -> [\r\n * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\r\n * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\r\n * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\r\n * // {name: 'right',   value: '</div>',         start: 27, end: 33},\r\n * // {name: 'between', value: ' example',       start: 33, end: 41}\r\n * // ]\r\n *\r\n * // Omitting unneeded parts with null valueNames, and using escapeChar\r\n * str = '...{1}\\\\{{function(x,y){return y+x;}}';\r\n * XRegExp.matchRecursive(str, '{', '}', 'g', {\r\n *   valueNames: ['literal', null, 'value', null],\r\n *   escapeChar: '\\\\'\r\n * });\r\n * // -> [\r\n * // {name: 'literal', value: '...', start: 0, end: 3},\r\n * // {name: 'value',   value: '1',   start: 4, end: 5},\r\n * // {name: 'literal', value: '\\\\{', start: 6, end: 8},\r\n * // {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}\r\n * // ]\r\n *\r\n * // Sticky mode via flag y\r\n * str = '<1><<<2>>><3>4<5>';\r\n * XRegExp.matchRecursive(str, '<', '>', 'gy');\r\n * // -> ['1', '<<2>>', '3']\r\n */\r\n    XRegExp.matchRecursive = function (str, left, right, flags, options) {\r\n        flags = flags || \"\";\r\n        options = options || {};\r\n        var global = flags.indexOf(\"g\") > -1,\r\n            sticky = flags.indexOf(\"y\") > -1,\r\n            basicFlags = flags.replace(/y/g, \"\"), // Flag y controlled internally\r\n            escapeChar = options.escapeChar,\r\n            vN = options.valueNames,\r\n            output = [],\r\n            openTokens = 0,\r\n            delimStart = 0,\r\n            delimEnd = 0,\r\n            lastOuterEnd = 0,\r\n            outerStart,\r\n            innerStart,\r\n            leftMatch,\r\n            rightMatch,\r\n            esc;\r\n        left = XRegExp(left, basicFlags);\r\n        right = XRegExp(right, basicFlags);\r\n\r\n        if (escapeChar) {\r\n            if (escapeChar.length > 1) {\r\n                throw new SyntaxError(\"can't use more than one escape character\");\r\n            }\r\n            escapeChar = XRegExp.escape(escapeChar);\r\n            // Using XRegExp.union safely rewrites backreferences in `left` and `right`\r\n            esc = new RegExp(\r\n                \"(?:\" + escapeChar + \"[\\\\S\\\\s]|(?:(?!\" + XRegExp.union([left, right]).source + \")[^\" + escapeChar + \"])+)+\",\r\n                flags.replace(/[^im]+/g, \"\") // Flags gy not needed here; flags nsx handled by XRegExp\r\n            );\r\n        }\r\n\r\n        while (true) {\r\n            // If using an escape character, advance to the delimiter's next starting position,\r\n            // skipping any escaped characters in between\r\n            if (escapeChar) {\r\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, \"sticky\") || [\"\"])[0].length;\r\n            }\r\n            leftMatch = XRegExp.exec(str, left, delimEnd);\r\n            rightMatch = XRegExp.exec(str, right, delimEnd);\r\n            // Keep the leftmost match only\r\n            if (leftMatch && rightMatch) {\r\n                if (leftMatch.index <= rightMatch.index) {\r\n                    rightMatch = null;\r\n                } else {\r\n                    leftMatch = null;\r\n                }\r\n            }\r\n            /* Paths (LM:leftMatch, RM:rightMatch, OT:openTokens):\r\n            LM | RM | OT | Result\r\n            1  | 0  | 1  | loop\r\n            1  | 0  | 0  | loop\r\n            0  | 1  | 1  | loop\r\n            0  | 1  | 0  | throw\r\n            0  | 0  | 1  | throw\r\n            0  | 0  | 0  | break\r\n            * Doesn't include the sticky mode special case\r\n            * Loop ends after the first completed match if `!global` */\r\n            if (leftMatch || rightMatch) {\r\n                delimStart = (leftMatch || rightMatch).index;\r\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n            } else if (!openTokens) {\r\n                break;\r\n            }\r\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n                break;\r\n            }\r\n            if (leftMatch) {\r\n                if (!openTokens) {\r\n                    outerStart = delimStart;\r\n                    innerStart = delimEnd;\r\n                }\r\n                ++openTokens;\r\n            } else if (rightMatch && openTokens) {\r\n                if (!--openTokens) {\r\n                    if (vN) {\r\n                        if (vN[0] && outerStart > lastOuterEnd) {\r\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\r\n                        }\r\n                        if (vN[1]) {\r\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\r\n                        }\r\n                        if (vN[2]) {\r\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\r\n                        }\r\n                        if (vN[3]) {\r\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\r\n                        }\r\n                    } else {\r\n                        output.push(str.slice(innerStart, delimStart));\r\n                    }\r\n                    lastOuterEnd = delimEnd;\r\n                    if (!global) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"string contains unbalanced delimiters\");\r\n            }\r\n            // If the delimiter matched an empty string, avoid an infinite loop\r\n            if (delimStart === delimEnd) {\r\n                ++delimEnd;\r\n            }\r\n        }\r\n\r\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\r\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** build.js *****/\n\n/*!\r\n * XRegExp.build v0.1.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Inspired by RegExp.create by Lea Verou <http://lea.verou.me/>\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var subparts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n        parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subparts], \"g\");\r\n\r\n/**\r\n * Strips a leading `^` and trailing unescaped `$`, if both are present.\r\n * @private\r\n * @param {String} pattern Pattern to process.\r\n * @returns {String} Pattern with edge anchors removed.\r\n */\r\n    function deanchor(pattern) {\r\n        var startAnchor = /^(?:\\(\\?:\\))?\\^/, // Leading `^` or `(?:)^` (handles /x cruft)\r\n            endAnchor = /\\$(?:\\(\\?:\\))?$/; // Trailing `$` or `$(?:)` (handles /x cruft)\r\n        if (endAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, \"\"))) { // Ensure trailing `$` isn't escaped\r\n            return pattern.replace(startAnchor, \"\").replace(endAnchor, \"\");\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n/**\r\n * Converts the provided value to an XRegExp.\r\n * @private\r\n * @param {String|RegExp} value Value to convert.\r\n * @returns {RegExp} XRegExp object with XRegExp syntax applied.\r\n */\r\n    function asXRegExp(value) {\r\n        return XRegExp.isRegExp(value) ?\r\n                (value.xregexp && !value.xregexp.isNative ? value : XRegExp(value.source)) :\r\n                XRegExp(value);\r\n    }\r\n\r\n/**\r\n * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in the\r\n * outer pattern and provided subpatterns are automatically renumbered to work correctly. Native\r\n * flags used by provided subpatterns are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\r\n *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\r\n *   character classes.\r\n * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\r\n *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Regex with interpolated subpatterns.\r\n * @example\r\n *\r\n * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\r\n *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\r\n *     h12: /1[0-2]|0?[1-9]/,\r\n *     h24: /2[0-3]|[01][0-9]/\r\n *   }, 'x'),\r\n *   minutes: /^[0-5][0-9]$/\r\n * });\r\n * time.test('10:59'); // -> true\r\n * XRegExp.exec('10:59', time).minutes; // -> '59'\r\n */\r\n    XRegExp.build = function (pattern, subs, flags) {\r\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\r\n            data = {},\r\n            numCaps = 0, // Caps is short for captures\r\n            numPriorCaps,\r\n            numOuterCaps = 0,\r\n            outerCapsMap = [0],\r\n            outerCapNames,\r\n            sub,\r\n            p;\r\n\r\n        // Add flags within a leading mode modifier to the overall pattern's flags\r\n        if (inlineFlags) {\r\n            flags = flags || \"\";\r\n            inlineFlags[1].replace(/./g, function (flag) {\r\n                flags += (flags.indexOf(flag) > -1 ? \"\" : flag); // Don't add duplicates\r\n            });\r\n        }\r\n\r\n        for (p in subs) {\r\n            if (subs.hasOwnProperty(p)) {\r\n                // Passing to XRegExp enables entended syntax for subpatterns provided as strings\r\n                // and ensures independent validity, lest an unescaped `(`, `)`, `[`, or trailing\r\n                // `\\` breaks the `(?:)` wrapper. For subpatterns provided as regexes, it dies on\r\n                // octals and adds the `xregexp` property, for simplicity\r\n                sub = asXRegExp(subs[p]);\r\n                // Deanchoring allows embedding independently useful anchored regexes. If you\r\n                // really need to keep your anchors, double them (i.e., `^^...$$`)\r\n                data[p] = {pattern: deanchor(sub.source), names: sub.xregexp.captureNames || []};\r\n            }\r\n        }\r\n\r\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\r\n        // helps keep this simple. Named captures will be put back\r\n        pattern = asXRegExp(pattern);\r\n        outerCapNames = pattern.xregexp.captureNames || [];\r\n        pattern = pattern.source.replace(parts, function ($0, $1, $2, $3, $4) {\r\n            var subName = $1 || $2, capName, intro;\r\n            if (subName) { // Named subpattern\r\n                if (!data.hasOwnProperty(subName)) {\r\n                    throw new ReferenceError(\"undefined property \" + $0);\r\n                }\r\n                if ($1) { // Named subpattern was wrapped in a capturing group\r\n                    capName = outerCapNames[numOuterCaps];\r\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\r\n                    // as the capture name\r\n                    intro = \"(?<\" + (capName || subName) + \">\";\r\n                } else {\r\n                    intro = \"(?:\";\r\n                }\r\n                numPriorCaps = numCaps;\r\n                return intro + data[subName].pattern.replace(subparts, function (match, paren, backref) {\r\n                    if (paren) { // Capturing group\r\n                        capName = data[subName].names[numCaps - numPriorCaps];\r\n                        ++numCaps;\r\n                        if (capName) { // If the current capture has a name, preserve the name\r\n                            return \"(?<\" + capName + \">\";\r\n                        }\r\n                    } else if (backref) { // Backreference\r\n                        return \"\\\\\" + (+backref + numPriorCaps); // Rewrite the backreference\r\n                    }\r\n                    return match;\r\n                }) + \")\";\r\n            }\r\n            if ($3) { // Capturing group\r\n                capName = outerCapNames[numOuterCaps];\r\n                outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                if (capName) { // If the current capture has a name, preserve the name\r\n                    return \"(?<\" + capName + \">\";\r\n                }\r\n            } else if ($4) { // Backreference\r\n                return \"\\\\\" + outerCapsMap[+$4]; // Rewrite the backreference\r\n            }\r\n            return $0;\r\n        });\r\n\r\n        return XRegExp(pattern, flags);\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** prototypes.js *****/\n\n/*!\r\n * XRegExp Prototype Methods v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * Adds a collection of methods to `XRegExp.prototype`. RegExp objects copied by XRegExp are also\r\n * augmented with any `XRegExp.prototype` methods. Hence, the following work equivalently:\r\n *\r\n * XRegExp('[a-z]', 'ig').xexec('abc');\r\n * XRegExp(/[a-z]/ig).xexec('abc');\r\n * XRegExp.globalize(/[a-z]/i).xexec('abc');\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Copy properties of `b` to `a`.\r\n * @private\r\n * @param {Object} a Object that will receive new properties.\r\n * @param {Object} b Object whose properties will be copied.\r\n */\r\n    function extend(a, b) {\r\n        for (var p in b) {\r\n            if (b.hasOwnProperty(p)) {\r\n                a[p] = b[p];\r\n            }\r\n        }\r\n        //return a;\r\n    }\r\n\r\n    extend(XRegExp.prototype, {\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the first value in the provided arguments array.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.apply`.\r\n * @param {Array} args Array with the string to search as its first value.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').apply(null, ['abc']); // -> true\r\n */\r\n        apply: function (context, args) {\r\n            return this.test(args[0]);\r\n        },\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the provided string.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.call`.\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').call(null, 'abc'); // -> true\r\n */\r\n        call: function (context, str) {\r\n            return this.test(str);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.forEach}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('\\\\d').forEach('1a2345', function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n        forEach: function (str, callback, context) {\r\n            return XRegExp.forEach(str, this, callback, context);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.globalize}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var globalCopy = XRegExp('regex').globalize();\r\n * globalCopy.global; // -> true\r\n */\r\n        globalize: function () {\r\n            return XRegExp.globalize(this);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.exec}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var match = XRegExp('U\\\\+(?<hex>[0-9A-F]{4})').xexec('U+2620');\r\n * match.hex; // -> '2620'\r\n */\r\n        xexec: function (str, pos, sticky) {\r\n            return XRegExp.exec(str, this, pos, sticky);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.test}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('c').xtest('abc'); // -> true\r\n */\r\n        xtest: function (str, pos, sticky) {\r\n            return XRegExp.test(str, this, pos, sticky);\r\n        }\r\n\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n},{}]},{},[10])\n\n","/**\n * Baobab Public Interface\n * ========================\n *\n * Exposes the main library classes.\n */\nvar Baobab = require('./src/baobab.js'),\n    helpers = require('./src/helpers.js');\n\n// Non-writable version\nObject.defineProperty(Baobab, 'version', {\n  value: '0.4.4'\n});\n\n// Exposing helpers\nBaobab.getIn = helpers.getIn;\n\n// Exporting\nmodule.exports = Baobab;\n","/**\n * Baobab Data Structure\n * ======================\n *\n * A handy data tree with cursors.\n */\nvar Cursor = require('./cursor.js'),\n    EventEmitter = require('emmett'),\n    Typology = require('typology'),\n    helpers = require('./helpers.js'),\n    update = require('./update.js'),\n    merge = require('./merge.js'),\n    mixins = require('./mixins.js'),\n    defaults = require('../defaults.js'),\n    type = require('./type.js');\n\nfunction complexHash(type) {\n  return type + '$' +\n    (new Date()).getTime() + (''  + Math.random()).replace('0.', '');\n}\n\n/**\n * Main Class\n */\nfunction Baobab(initialData, opts) {\n  if (arguments.length < 1)\n    initialData = {};\n\n  // New keyword optional\n  if (!(this instanceof Baobab))\n    return new Baobab(initialData, opts);\n\n  if (!type.Object(initialData) && !type.Array(initialData))\n    throw Error('Baobab: invalid data.');\n\n  // Extending\n  EventEmitter.call(this);\n\n  // Merging defaults\n  this.options = helpers.shallowMerge(defaults, opts);\n  this._cloner = this.options.cloningFunction || helpers.deepClone;\n\n  // Privates\n  this._transaction = {};\n  this._future = undefined;\n  this._history = [];\n  this._cursors = {};\n\n  // Internal typology\n  this.typology = this.options.typology ?\n    (this.options.typology instanceof Typology ?\n      this.options.typology :\n      new Typology(this.options.typology)) :\n    new Typology();\n\n  // Internal validation\n  this.validate = this.options.validate || null;\n\n  if (this.validate)\n    try {\n      this.typology.check(initialData, this.validate, true);\n    }\n    catch (e) {\n      e.message = '/' + e.path.join('/') + ': ' + e.message;\n      throw e;\n    }\n\n  // Properties\n  this.data = this._cloner(initialData);\n\n  // Mixin\n  this.mixin = mixins.baobab(this);\n}\n\nhelpers.inherits(Baobab, EventEmitter);\n\n/**\n * Private prototype\n */\nBaobab.prototype._archive = function() {\n  if (this.options.maxHistory <= 0)\n    return;\n\n  var record = {\n    data: this._cloner(this.data)\n  };\n\n  // Replacing\n  if (this._history.length === this.options.maxHistory) {\n    this._history.pop();\n  }\n  this._history.unshift(record);\n\n  return record;\n};\n\n/**\n * Prototype\n */\nBaobab.prototype.commit = function(referenceRecord) {\n  var self = this,\n      log;\n\n  if (referenceRecord) {\n\n    // Override\n    this.data = referenceRecord.data;\n    log = referenceRecord.log;\n  }\n  else {\n\n    // Shifting root reference\n    if (this.options.shiftReferences)\n      this.data = helpers.shallowClone(this.data);\n\n    // Applying modification (mutation)\n    var record = this._archive();\n    log = update(this.data, this._transaction, this.options);\n\n    if (record)\n      record.log = log;\n  }\n\n  if (this.validate) {\n    var errors = [],\n        l = log.length,\n        d,\n        i;\n\n    for (i = 0; i < l; i++) {\n      d = helpers.getIn(this.validate, log[i]);\n\n      if (!d)\n        continue;\n\n      try {\n        this.typology.check(this.get(log[i]), d, true);\n      }\n      catch (e) {\n        e.path = log[i].concat((e.path || []));\n        errors.push(e);\n      }\n    }\n\n    if (errors.length)\n      this.emit('invalid', {errors: errors});\n  }\n\n  // Resetting\n  this._transaction = {};\n\n  if (this._future)\n    this._future = clearTimeout(this._future);\n\n  // Baobab-level update event\n  this.emit('update', {\n    log: log\n  });\n\n  return this;\n};\n\nBaobab.prototype.select = function(path) {\n  if (!path)\n    throw Error('Baobab.select: invalid path.');\n\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.select: invalid path.');\n\n  // Casting to array\n  path = !type.Array(path) ? [path] : path;\n\n  // Complex path?\n  var complex = type.ComplexPath(path);\n\n  var solvedPath;\n\n  if (complex)\n    solvedPath = helpers.solvePath(this.data, path);\n\n  // Registering a new cursor or giving the already existing one for path\n  if (!this.options.cursorSingletons) {\n    return new Cursor(this, path);\n  }\n  else {\n    var hash = path.map(function(step) {\n      if (type.Function(step))\n        return complexHash('fn');\n      else if (type.Object(step))\n        return complexHash('ob');\n      else\n        return step;\n    }).join('λ');\n\n    if (!this._cursors[hash]) {\n      var cursor = new Cursor(this, path, solvedPath, hash);\n      this._cursors[hash] = cursor;\n      return cursor;\n    }\n    else {\n      return this._cursors[hash];\n    }\n  }\n};\n\nBaobab.prototype.root = function() {\n  return this.select([]);\n};\n\nBaobab.prototype.reference = function(path) {\n  var data;\n\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('Baobab.get: invalid path.');\n\n  return helpers.getIn(\n    this.data, type.String(path) || type.Number(path) ? [path] : path\n  );\n};\n\nBaobab.prototype.get = function() {\n  var ref = this.reference.apply(this, arguments);\n\n  return this.options.clone ? this._cloner(ref) : ref;\n};\n\nBaobab.prototype.clone = function(path) {\n  return this._cloner(this.reference.apply(this, arguments));\n};\n\nBaobab.prototype.set = function(key, val) {\n\n  if (arguments.length < 2)\n    throw Error('Baobab.set: expects a key and a value.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(this.data, key);\n\n    if (!path)\n      throw Error('Baobab.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nBaobab.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('Baobab.unset: expects a valid key to unset.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n\n  return this.update(spec);\n};\n\nBaobab.prototype.update = function(spec) {\n  var self = this;\n\n  if (!type.Object(spec))\n    throw Error('Baobab.update: wrong specification.');\n\n  this._transaction = merge(spec, this._transaction);\n\n  // Should we let the user commit?\n  if (!this.options.autoCommit)\n    return this;\n\n  // Should we update synchronously?\n  if (!this.options.asynchronous)\n    return this.commit();\n\n  // Updating asynchronously\n  if (!this._future)\n    this._future = setTimeout(self.commit.bind(self, null), 0);\n\n  return this;\n};\n\nBaobab.prototype.hasHistory = function() {\n  return !!this._history.length;\n};\n\nBaobab.prototype.getHistory = function() {\n  return this._history;\n};\n\nBaobab.prototype.undo = function() {\n  if (!this.hasHistory())\n    throw Error('Baobab.undo: no history recorded, cannot undo.');\n\n  var lastRecord = this._history.shift();\n  this.commit(lastRecord);\n};\n\nBaobab.prototype.release = function() {\n\n  delete this.data;\n  delete this._transaction;\n  delete this._history;\n\n  // Releasing cursors\n  for (var k in this._cursors)\n    this._cursors[k].release();\n  delete this._cursors;\n\n  // Killing event emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nBaobab.prototype.toJSON = function() {\n  return this.reference();\n};\n\n/**\n * Export\n */\nmodule.exports = Baobab;\n","/**\n * Baobab Cursor Combination\n * ==========================\n *\n * A useful abstraction dealing with cursor's update logical combinations.\n */\nvar EventEmitter = require('emmett'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Utilities\n */\nfunction bindCursor(c, cursor) {\n  cursor.on('update', c.cursorListener);\n  c.tree.off('update', c.treeListener);\n  c.tree.on('update', c.treeListener);\n}\n\n/**\n * Main Class\n */\nfunction Combination(operator /*, &cursors */) {\n  var self = this;\n\n  // Safeguard\n  if (arguments.length < 2)\n    throw Error('baobab.Combination: not enough arguments.');\n\n  var first = arguments[1],\n      rest = helpers.arrayOf(arguments).slice(2);\n\n  if (first instanceof Array) {\n    rest = first.slice(1);\n    first = first[0];\n  }\n\n  if (!type.Cursor(first))\n    throw Error('baobab.Combination: argument should be a cursor.');\n\n  if (operator !== 'or' && operator !== 'and')\n    throw Error('baobab.Combination: invalid operator.');\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Properties\n  this.cursors = [first];\n  this.operators = [];\n  this.tree = first.tree;\n\n  // State\n  this.updates = new Array(this.cursors.length);\n\n  // Listeners\n  this.cursorListener = function() {\n    self.updates[self.cursors.indexOf(this)] = true;\n  };\n\n  this.treeListener = function() {\n    var shouldFire = self.updates[0],\n        i,\n        l;\n\n    for (i = 1, l = self.cursors.length; i < l; i++) {\n      shouldFire = self.operators[i - 1] === 'or' ?\n        shouldFire || self.updates[i] :\n        shouldFire && self.updates[i];\n    }\n\n    if (shouldFire)\n      self.emit('update');\n\n    // Waiting for next update\n    self.updates = new Array(self.cursors.length);\n  };\n\n  // Lazy binding\n  this.bound = false;\n\n  var regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (self.bound)\n      return;\n    self.bound = true;\n    self.cursors.forEach(function(cursor) {\n      bindCursor(self, cursor);\n    });\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n\n  // Attaching any other passed cursors\n  rest.forEach(function(cursor) {\n    this[operator](cursor);\n  }, this);\n}\n\nhelpers.inherits(Combination, EventEmitter);\n\n/**\n * Prototype\n */\nfunction makeOperator(operator) {\n  Combination.prototype[operator] = function(cursor) {\n\n    // Safeguard\n    if (!type.Cursor(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': argument should be a cursor.');\n    }\n\n    if (~this.cursors.indexOf(cursor)) {\n      this.release();\n      throw Error('baobab.Combination.' + operator + ': cursor already in combination.');\n    }\n\n    this.cursors.push(cursor);\n    this.operators.push(operator);\n    this.updates.length++;\n\n    if (this.bound)\n      bindCursor(this, cursor);\n\n    return this;\n  };\n}\n\nmakeOperator('or');\nmakeOperator('and');\n\nCombination.prototype.release = function() {\n\n  // Dropping cursors listeners\n  this.cursors.forEach(function(cursor) {\n    cursor.off('update', this.cursorListener);\n  }, this);\n\n  // Dropping tree listener\n  this.tree.off('update', this.treeListener);\n\n  // Cleaning\n  this.cursors = null;\n  this.operators = null;\n  this.tree = null;\n  this.updates = null;\n\n  // Dropping own listeners\n  this.kill();\n};\n\n/**\n * Exporting\n */\nmodule.exports = Combination;\n","/**\n * Baobab Cursor Abstraction\n * ==========================\n *\n * Nested selection into a baobab tree.\n */\nvar EventEmitter = require('emmett'),\n    Combination = require('./combination.js'),\n    mixins = require('./mixins.js'),\n    helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n/**\n * Main Class\n */\nfunction Cursor(tree, path, solvedPath, hash) {\n  var self = this;\n\n  // Extending event emitter\n  EventEmitter.call(this);\n\n  // Enforcing array\n  path = path || [];\n\n  // Properties\n  this.tree = tree;\n  this.path = path;\n  this.hash = hash;\n  this.relevant = this.reference() !== undefined;\n\n  // Complex path?\n  this.complexPath = !!solvedPath;\n  this.solvedPath = this.complexPath ? solvedPath : this.path;\n\n  // Root listeners\n  this.updateHandler = function(e) {\n    var log = e.data.log,\n        shouldFire = false,\n        c, p, l, m, i, j;\n\n    // Solving path if needed\n    if (self.complexPath)\n      self.solvedPath = helpers.solvePath(self.tree.data, self.path);\n\n    // If selector listens at tree, we fire\n    if (!self.path.length)\n      return self.emit('update');\n\n    // Checking update log to see whether the cursor should update.\n    outer:\n    for (i = 0, l = log.length; i < l; i++) {\n      c = log[i];\n\n      for (j = 0, m = c.length; j < m; j++) {\n        p = c[j];\n\n        // If path is not relevant to us, we break\n        if (p !== '' + self.solvedPath[j])\n          break;\n\n        // If we reached last item and we are relevant, we fire\n        if (j + 1 === m || j + 1 === self.solvedPath.length) {\n          shouldFire = true;\n          break outer;\n        }\n      }\n    }\n\n    // Handling relevancy\n    var data = self.reference() !== undefined;\n\n    if (self.relevant) {\n      if (data && shouldFire) {\n        self.emit('update');\n      }\n      else if (!data) {\n        self.emit('irrelevant');\n        self.relevant = false;\n      }\n    }\n    else {\n      if (data && shouldFire) {\n        self.emit('relevant');\n        self.emit('update');\n        self.relevant = true;\n      }\n    }\n  };\n\n  // Making mixin\n  this.mixin = mixins.cursor(this);\n\n  // Lazy binding\n  var bound = false,\n      regularOn = this.on,\n      regularOnce = this.once;\n\n  var lazyBind = function() {\n    if (bound)\n      return;\n    bound = true;\n    self.tree.on('update', self.updateHandler);\n  };\n\n  this.on = function() {\n    lazyBind();\n    return regularOn.apply(this, arguments);\n  };\n\n  this.once = function() {\n    lazyBind();\n    return regularOnce.apply(this, arguments);\n  };\n}\n\nhelpers.inherits(Cursor, EventEmitter);\n\n/**\n * Predicates\n */\nCursor.prototype.isRoot = function() {\n  return !this.path.length;\n};\n\nCursor.prototype.isLeaf = function() {\n  return type.Primitive(this.reference());\n};\n\nCursor.prototype.isBranch = function() {\n  return !this.isLeaf() && !this.isRoot();\n};\n\n/**\n * Traversal\n */\nCursor.prototype.root = function() {\n  return this.tree.root();\n};\n\nCursor.prototype.select = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (!type.Path(path))\n    throw Error('baobab.Cursor.select: invalid path.');\n  return this.tree.select(this.path.concat(path));\n};\n\nCursor.prototype.up = function() {\n  if (this.solvedPath && this.solvedPath.length)\n    return this.tree.select(this.path.slice(0, -1));\n  else\n    return null;\n};\n\nCursor.prototype.left = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.left: cannot go left on a non-list type.');\n\n  return last ?\n    this.tree.select(this.solvedPath.slice(0, -1).concat(last - 1)) :\n    null;\n};\n\nCursor.prototype.leftmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.leftmost: cannot go left on a non-list type.');\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(0));\n};\n\nCursor.prototype.right = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  if (last + 1 === this.up().reference().length)\n    return null;\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(last + 1));\n};\n\nCursor.prototype.rightmost = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (isNaN(last))\n    throw Error('baobab.Cursor.right: cannot go right on a non-list type.');\n\n  var list = this.up().reference();\n\n  return this.tree.select(this.solvedPath.slice(0, -1).concat(list.length - 1));\n};\n\nCursor.prototype.down = function() {\n  var last = +this.solvedPath[this.solvedPath.length - 1];\n\n  if (!(this.reference() instanceof Array))\n    return null;\n\n  return this.tree.select(this.solvedPath.concat(0));\n};\n\n/**\n * Access\n */\nCursor.prototype.get = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.get(this.solvedPath.concat(path));\n  else\n    return this.tree.get(this.solvedPath);\n};\n\nCursor.prototype.reference = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.reference(this.solvedPath.concat(path));\n  else\n    return this.tree.reference(this.solvedPath);\n};\n\nCursor.prototype.clone = function(path) {\n  if (arguments.length > 1)\n    path = helpers.arrayOf(arguments);\n\n  if (type.Step(path))\n    return this.tree.clone(this.solvedPath.concat(path));\n  else\n    return this.tree.clone(this.solvedPath);\n};\n\n/**\n * Update\n */\nCursor.prototype.set = function(key, val) {\n  if (arguments.length < 2)\n    throw Error('baobab.Cursor.set: expecting at least key/value.');\n\n  var data = this.reference();\n\n  if (typeof data !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n\n  if (type.Array(key)) {\n    var path = helpers.solvePath(data, key);\n\n    if (!path)\n      throw Error('baobab.Cursor.set: could not solve dynamic path.');\n\n    spec = helpers.pathObject(path, {$set: val});\n  }\n  else {\n    spec[key] = {$set: val};\n  }\n\n  return this.update(spec);\n};\n\nCursor.prototype.edit = function(val) {\n  return this.update({$set: val});\n};\n\nCursor.prototype.unset = function(key) {\n  if (!key && key !== 0)\n    throw Error('baobab.Cursor.unset: expects a valid key to unset.');\n\n  if (typeof this.reference() !== 'object')\n    throw Error('baobab.Cursor.set: trying to set key to a non-object.');\n\n  var spec = {};\n  spec[key] = {$unset: true};\n  return this.update(spec);\n};\n\nCursor.prototype.remove = function() {\n  if (this.isRoot())\n    throw Error('baobab.Cursor.remove: cannot remove root node.');\n\n  return this.update({$unset: true});\n};\n\nCursor.prototype.apply = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.apply: argument is not a function.');\n\n  return this.update({$apply: fn});\n};\n\nCursor.prototype.chain = function(fn) {\n  if (typeof fn !== 'function')\n    throw Error('baobab.Cursor.chain: argument is not a function.');\n\n  return this.update({$chain: fn});\n};\n\nCursor.prototype.push = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$push: helpers.arrayOf(arguments)});\n  else\n    return this.update({$push: value});\n};\n\nCursor.prototype.unshift = function(value) {\n  if (!(this.reference() instanceof Array))\n    throw Error('baobab.Cursor.push: trying to push to non-array value.');\n\n  if (arguments.length > 1)\n    return this.update({$unshift: helpers.arrayOf(arguments)});\n  else\n    return this.update({$unshift: value});\n};\n\nCursor.prototype.merge = function(o) {\n  if (!type.Object(o))\n    throw Error('baobab.Cursor.merge: trying to merge a non-object.');\n\n  if (!type.Object(this.reference()))\n    throw Error('baobab.Cursor.merge: trying to merge into a non-object.');\n\n  this.update({$merge: o});\n};\n\nCursor.prototype.update = function(spec) {\n  this.tree.update(helpers.pathObject(this.solvedPath, spec));\n  return this;\n};\n\n/**\n * Combination\n */\nCursor.prototype.or = function(otherCursor) {\n  return new Combination('or', this, otherCursor);\n};\n\nCursor.prototype.and = function(otherCursor) {\n  return new Combination('and', this, otherCursor);\n};\n\n/**\n * Releasing\n */\nCursor.prototype.release = function() {\n\n  // Removing listener on parent\n  this.tree.off('update', this.updateHandler);\n\n  // If the cursor is hashed, we unsubscribe from the parent\n  if (this.hash)\n    delete this.tree._cursors[this.hash];\n\n  // Dereferencing\n  delete this.tree;\n  delete this.path;\n  delete this.solvedPath;\n\n  // Killing emitter\n  this.kill();\n};\n\n/**\n * Output\n */\nCursor.prototype.toJSON = function() {\n  return this.reference();\n};\n\ntype.Cursor = function (value) {\n  return value instanceof Cursor;\n};\n\n/**\n * Export\n */\nmodule.exports = Cursor;\n","/**\n * Baobab Helpers\n * ===============\n *\n * Miscellaneous helper functions.\n */\nvar type = require('./type.js');\n\n// Make a real array of an array-like object\nfunction arrayOf(o) {\n  return Array.prototype.slice.call(o);\n}\n\n// Shallow merge\nfunction shallowMerge(o1, o2) {\n  var o = {},\n      k;\n\n  for (k in o1) o[k] = o1[k];\n  for (k in o2) o[k] = o2[k];\n\n  return o;\n}\n\n// Clone a regexp\nfunction cloneRegexp(re) {\n  var pattern = re.source,\n      flags = '';\n\n  if (re.global) flags += 'g';\n  if (re.multiline) flags += 'm';\n  if (re.ignoreCase) flags += 'i';\n  if (re.sticky) flags += 'y';\n  if (re.unicode) flags += 'u';\n\n  return new RegExp(pattern, flags);\n}\n\n// Cloning function\nfunction clone(deep, item) {\n  if (!item ||\n      typeof item !== 'object' ||\n      item instanceof Error ||\n      ('ArrayBuffer' in global && item instanceof ArrayBuffer))\n    return item;\n\n  // Array\n  if (type.Array(item)) {\n    if (deep) {\n      var i, l, a = [];\n      for (i = 0, l = item.length; i < l; i++)\n        a.push(deepClone(item[i]));\n      return a;\n    }\n    else {\n      return item.slice(0);\n    }\n  }\n\n  // Date\n  if (type.Date(item))\n    return new Date(item.getTime());\n\n  // RegExp\n  if (item instanceof RegExp)\n    return cloneRegexp(item);\n\n  // Object\n  if (type.Object(item)) {\n    var k, o = {};\n\n    if (item.constructor && item.constructor !== Object)\n      o = Object.create(item.constructor.prototype);\n\n    for (k in item)\n      if (item.hasOwnProperty(k))\n        o[k] = deep ? deepClone(item[k]) : item[k];\n    return o;\n  }\n\n  return item;\n}\n\n// Shallow & deep cloning functions\nvar shallowClone = clone.bind(null, false),\n    deepClone = clone.bind(null, true);\n\n// Simplistic composition\nfunction compose(fn1, fn2) {\n  return function(arg) {\n    return fn2(fn1(arg));\n  };\n}\n\n// Get first item matching predicate in list\nfunction first(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return a[i];\n  }\n  return;\n}\n\nfunction index(a, fn) {\n  var i, l;\n  for (i = 0, l = a.length; i < l; i++) {\n    if (fn(a[i]))\n      return i;\n  }\n  return -1;\n}\n\n// Compare object to spec\nfunction compare(object, spec) {\n  var ok = true,\n      k;\n\n  // If we reached here via a recursive call, object may be undefined because\n  // not all items in a collection will have the same deep nesting structure\n  if (!object) {\n    return false;\n  }\n\n  for (k in spec) {\n    if (type.Object(spec[k])) {\n      ok = ok && compare(object[k], spec[k]);\n    }\n    else if (type.Array(spec[k])) {\n      ok = ok && !!~spec[k].indexOf(object[k]);\n    }\n    else {\n      if (object[k] !== spec[k])\n        return false;\n    }\n  }\n\n  return ok;\n}\n\nfunction firstByComparison(object, spec) {\n  return first(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\nfunction indexByComparison(object, spec) {\n  return index(object, function(e) {\n    return compare(e, spec);\n  });\n}\n\n// Retrieve nested objects\nfunction getIn(object, path) {\n  path = path || [];\n\n  var c = object,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      c = first(c, path[i]);\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      c = firstByComparison(c, path[i]);\n    }\n    else {\n      c = c[path[i]];\n    }\n  }\n\n  return c;\n}\n\n// Solve a complex path\nfunction solvePath(object, path) {\n  var solvedPath = [],\n      c = object,\n      idx,\n      i,\n      l;\n\n  for (i = 0, l = path.length; i < l; i++) {\n    if (!c)\n      return null;\n\n    if (typeof path[i] === 'function') {\n      if (!type.Array(c))\n        return;\n\n      idx = index(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else if (typeof path[i] === 'object') {\n      if (!type.Array(c))\n        return;\n\n      idx = indexByComparison(c, path[i]);\n      solvedPath.push(idx);\n      c = c[idx];\n    }\n    else {\n      solvedPath.push(path[i]);\n      c = c[path[i]] || {};\n    }\n  }\n\n  return solvedPath;\n}\n\n// Return a fake object relative to the given path\nfunction pathObject(path, spec) {\n  var l = path.length,\n      o = {},\n      c = o,\n      i;\n\n  if (!l)\n    o = spec;\n\n  for (i = 0; i < l; i++) {\n    c[path[i]] = (i + 1 === l) ? spec : {};\n    c = c[path[i]];\n  }\n\n  return o;\n}\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\nmodule.exports = {\n  arrayOf: arrayOf,\n  deepClone: deepClone,\n  shallowClone: shallowClone,\n  shallowMerge: shallowMerge,\n  compose: compose,\n  getIn: getIn,\n  inherits: inherits,\n  pathObject: pathObject,\n  solvePath: solvePath\n};\n","/**\n * Baobab Merge\n * =============\n *\n * A function used to merge updates in the stack.\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\n// Helpers\nfunction hasKey(o, key) {\n  return key in (o || {});\n}\n\nfunction conflict(a, b, key) {\n  return hasKey(a, key) && hasKey(b, key);\n}\n\n// Main function\nfunction merge() {\n  var res = {},\n      current,\n      next,\n      l = arguments.length,\n      i,\n      k;\n\n  for (i = l - 1; i >= 0; i--) {\n\n    // Upper $set/$apply... and conflicts\n    // When solving conflicts, here is the priority to apply:\n    // -- 0) $unset\n    // -- 1) $set\n    // -- 2) $merge\n    // -- 3) $apply\n    // -- 4) $chain\n    if (arguments[i].$unset) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$merge;\n      res.$unset = arguments[i].$unset;\n    }\n    else if (arguments[i].$set) {\n      delete res.$apply;\n      delete res.$merge;\n      delete res.$unset;\n      res.$set = arguments[i].$set;\n      continue;\n    }\n    else if (arguments[i].$merge) {\n      delete res.$set;\n      delete res.$apply;\n      delete res.$unset;\n      res.$merge = arguments[i].$merge;\n      continue;\n    }\n    else if (arguments[i].$apply){\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n      res.$apply = arguments[i].$apply;\n      continue;\n    }\n    else if (arguments[i].$chain) {\n      delete res.$set;\n      delete res.$merge;\n      delete res.$unset;\n\n      if (res.$apply)\n        res.$apply = helpers.compose(res.$apply, arguments[i].$chain);\n      else\n        res.$apply = arguments[i].$chain;\n      continue;\n    }\n\n    for (k in arguments[i]) {\n      current = res[k];\n      next = arguments[i][k];\n\n      if (current && type.Object(next)) {\n\n        // $push conflict\n        if (conflict(current, next, '$push')) {\n          if (type.Array(current.$push))\n            current.$push = current.$push.concat(next.$push);\n          else\n            current.$push = [current.$push].concat(next.$push);\n        }\n\n        // $unshift conflict\n        else if (conflict(current, next, '$unshift')) {\n          if (type.Array(next.$unshift))\n            current.$unshift = next.$unshift.concat(current.$unshift);\n          else\n            current.$unshift = [next.$unshift].concat(current.$unshift);\n        }\n\n        // No conflict\n        else {\n          res[k] = merge(next, current);\n        }\n      }\n      else {\n        res[k] = next;\n      }\n    }\n  }\n\n  return res;\n}\n\nmodule.exports = merge;\n","/**\n * Baobab React Mixins\n * ====================\n *\n * Compilation of react mixins designed to deal with cursors integration.\n */\nvar Combination = require('./combination.js'),\n    type = require('./type.js');\n\nmodule.exports = {\n  baobab: function(baobab) {\n    return {\n\n      // Run Baobab mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding baobab to instance\n          this.tree = baobab;\n\n          // Is there any cursors to create?\n          if (!this.cursor && !this.cursors)\n            return {};\n\n          // Is there conflicting definitions?\n          if (this.cursor && this.cursors)\n            throw Error('baobab.mixin: you cannot have both ' +\n                        '`component.cursor` and `component.cursors`. Please ' +\n                        'make up your mind.');\n\n          // Type\n          this.__type = null;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState(this.__getCursorData());\n          }).bind(this);\n\n          if (this.cursor) {\n            if (!type.MixinCursor(this.cursor))\n              throw Error('baobab.mixin.cursor: invalid data (cursor, ' +\n                          'string, array or function).');\n\n            if (type.Function(this.cursor))\n              this.cursor = this.cursor();\n\n            if (!type.Cursor(this.cursor))\n              this.cursor = baobab.select(this.cursor);\n\n            this.__getCursorData = (function() {\n              return {cursor: this.cursor.get()};\n            }).bind(this);\n            this.__type = 'single';\n          }\n          else if (this.cursors) {\n            if (!type.MixinCursors(this.cursors))\n              throw Error('baobab.mixin.cursor: invalid data (object, array or function).');\n\n            if (type.Function(this.cursors))\n              this.cursors = this.cursors();\n\n            if (type.Array(this.cursors)) {\n              this.cursors = this.cursors.map(function(path) {\n                return type.Cursor(path) ? path : baobab.select(path);\n              });\n\n              this.__getCursorData = (function() {\n                return {cursors: this.cursors.map(function(cursor) {\n                  return cursor.get();\n                })};\n              }).bind(this);\n              this.__type = 'array';\n            }\n            else {\n              for (var k in this.cursors) {\n                if (!type.Cursor(this.cursors[k]))\n                  this.cursors[k] = baobab.select(this.cursors[k]);\n              }\n\n              this.__getCursorData = (function() {\n                var d = {};\n                for (k in this.cursors)\n                  d[k] = this.cursors[k].get();\n                return {cursors: d};\n              }).bind(this);\n              this.__type = 'object';\n            }\n          }\n\n          return this.__getCursorData();\n        },\n        componentDidMount: function() {\n          if (this.__type === 'single') {\n            this.__combination = new Combination('or', [this.cursor]);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'array') {\n            this.__combination = new Combination('or', this.cursors);\n            this.__combination.on('update', this.__updateHandler);\n          }\n          else if (this.__type === 'object') {\n            this.__combination = new Combination(\n              'or',\n              Object.keys(this.cursors).map(function(k) {\n                return this.cursors[k];\n              }, this)\n            );\n            this.__combination.on('update', this.__updateHandler);\n          }\n        },\n        componentWillUnmount: function() {\n          if (this.__combination)\n            this.__combination.release();\n        }\n      }].concat(baobab.options.mixins)\n    };\n  },\n  cursor: function(cursor) {\n    return {\n\n      // Run cursor mixin first to allow mixins to access cursors\n      mixins: [{\n        getInitialState: function() {\n\n          // Binding cursor to instance\n          this.cursor = cursor;\n\n          // Making update handler\n          this.__updateHandler = (function() {\n            this.setState({cursor: this.cursor.get()});\n          }).bind(this);\n\n          return {cursor: this.cursor.get()};\n        },\n        componentDidMount: function() {\n\n          // Listening to updates\n          this.cursor.on('update', this.__updateHandler);\n        },\n        componentWillUnmount: function() {\n\n          // Unbinding handler\n          this.cursor.off('update', this.__updateHandler);\n        }\n      }].concat(cursor.tree.options.mixins)\n    };\n  }\n};\n","/**\n * Baobab Type Checking\n * =====================\n *\n * Misc helpers functions used throughout the library to perform some type\n * tests at runtime.\n *\n * @christianalfoni\n */\n\n// Not reusing methods as it will just be an extra\n// call on the stack\nvar type = function (value) {\n  if (Array.isArray(value)) {\n    return 'array';\n  } else if (typeof value === 'object' && value !== null) {\n    return 'object';\n  } else if (typeof value === 'string') {\n    return 'string';\n  } else if (typeof value === 'number') {\n    return 'number';\n  } else if (typeof value === 'boolean') {\n    return 'boolean';\n  } else if (typeof value === 'function') {\n    return 'function';\n  } else if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  } else if (value instanceof Date) {\n    return 'date';\n  } else {\n    return 'invalid';\n  }\n};\n\ntype.Array = function (value) {\n  return Array.isArray(value);\n};\n\ntype.Object = function (value) {\n  return !Array.isArray(value) && typeof value === 'object' && value !== null;\n};\n\ntype.String = function (value) {\n  return typeof value === 'string';\n};\n\ntype.Number = function (value) {\n  return typeof value === 'number';\n};\n\ntype.Boolean = function (value) {\n  return typeof value === 'boolean';\n};\n\ntype.Function = function (value) {\n  return typeof value === 'function';\n};\n\ntype.Primitive = function (value) {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean';\n};\n\ntype.Date = function (value) {\n  return value instanceof Date;\n};\n\ntype.Step = function (value) {\n  var valueType = type(value);\n  var notValid = ['null', 'undefined', 'invalid', 'date'];\n  return notValid.indexOf(valueType) === -1;\n};\n\n// Should undefined be allowed?\ntype.Path = function (value) {\n  var types = ['object', 'string', 'number', 'function', 'undefined'];\n  if (type.Array(value)) {\n    for (var x = 0; x < value.length; x++) {\n      if (types.indexOf(type(value[x])) === -1) {\n        return false;\n      }\n    }\n  } else {\n    return types.indexOf(type(value)) >= 0;\n  }\n  return true;\n\n};\n\n// string|number|array|cursor|function\ntype.MixinCursor = function (value) {\n  var allowedValues = ['string', 'number', 'array', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0 || type.Cursor(value);\n};\n\n// array|object|function\ntype.MixinCursors = function (value) {\n  var allowedValues = ['array', 'object', 'function'];\n  return allowedValues.indexOf(type(value)) >= 0;\n};\n\n// Already know this is an array\ntype.ComplexPath = function (value) {\n  var complexTypes = ['object', 'function'];\n  for (var x = 0; x < value.length; x++) {\n    if (complexTypes.indexOf(type(value[x])) >= 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = type;\n","/**\n * Baobab Update\n * ==============\n *\n * A handy method to mutate an atom according to the given specification.\n * Mostly inspired by http://facebook.github.io/react/docs/update.html\n */\nvar helpers = require('./helpers.js'),\n    type = require('./type.js');\n\nvar COMMANDS = {};\n[\n  '$set',\n  '$push',\n  '$unshift',\n  '$apply',\n  '$merge'\n].forEach(function(c) {\n  COMMANDS[c] = true;\n});\n\n// Helpers\nfunction makeError(path, message) {\n  var e = new Error('baobab.update: ' + message + ' at path /' +\n                    path.toString());\n\n  e.path = path;\n  return e;\n}\n\n// Core function\nfunction update(target, spec, opts) {\n  opts = opts || {shiftReferences: false};\n  var log = {};\n\n  // Closure mutating the internal object\n  (function mutator(o, spec, path, parent) {\n    path = path || [];\n\n    var hash = path.join('λ'),\n        fn,\n        h,\n        k,\n        v;\n\n    for (k in spec) {\n      if (COMMANDS[k]) {\n        v = spec[k];\n\n        // Logging update\n        log[hash] = true;\n\n        // TODO: this could be before in the recursion\n        // Applying\n        switch (k) {\n          case '$push':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $push to a non array');\n\n            if (!type.Array(v))\n              o.push(v);\n            else\n              o.push.apply(o, v);\n            break;\n          case '$unshift':\n            if (!type.Array(o))\n              throw makeError(path, 'using command $unshift to a non array');\n\n            if (!type.Array(v))\n              o.unshift(v);\n            else\n              o.unshift.apply(o, v);\n            break;\n        }\n      }\n      else {\n        h = hash ? hash + 'λ' + k : k;\n\n        if ('$unset' in (spec[k] || {})) {\n\n          // Logging update\n          log[h] = true;\n\n          if (type.Array(o)) {\n            if (!opts.shiftReferences)\n              o.splice(k, 1);\n            else\n              parent[path[path.length - 1]] = o.slice(0, +k).concat(o.slice(+k + 1));\n          }\n          else {\n            delete o[k];\n          }\n        }\n        else if ('$set' in (spec[k] || {})) {\n          v = spec[k].$set;\n\n          // Logging update\n          log[h] = true;\n          o[k] = v;\n        }\n        else if ('$apply' in (spec[k] || {}) || '$chain' in (spec[k] || {})) {\n\n          // TODO: this should not happen likewise.\n          fn = spec[k].$apply || spec[k].$chain;\n\n          if (typeof fn !== 'function')\n            throw makeError(path.concat(k), 'using command $apply with a non function');\n\n          // Logging update\n          log[h] = true;\n          o[k] = fn.call(null, o[k]);\n        }\n        else if ('$merge' in (spec[k] || {})) {\n          v = spec[k].$merge;\n\n          if (!type.Object(o[k]))\n            throw makeError(path.concat(k), 'using command $merge on a non-object');\n\n          // Logging update\n          log[h] = true;\n          o[k] = helpers.shallowMerge(o[k], v);\n        }\n        else if (opts.shiftReferences &&\n                 ('$push' in (spec[k] || {}) ||\n                  '$unshift' in (spec[k] || {}))) {\n          if ('$push' in (spec[k] || {})) {\n            v = spec[k].$push;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $push to a non array');\n            o[k] = o[k].concat(v);\n          }\n          if ('$unshift' in (spec[k] || {})) {\n            v = spec[k].$unshift;\n\n            if (!type.Array(o[k]))\n              throw makeError(path.concat(k), 'using command $unshift to a non array');\n            o[k] = (v instanceof Array ? v : [v]).concat(o[k]);\n          }\n\n          // Logging update\n          log[h] = true;\n        }\n        else {\n\n          // If nested object does not exist, we create it\n          if (typeof o[k] === 'undefined')\n            o[k] = {};\n\n          // Shifting reference\n          if (opts.shiftReferences)\n            o[k] = helpers.shallowClone(o[k]);\n\n          // Recur\n          // TODO: fix this horrendous behaviour.\n          mutator(\n            o[k],\n            spec[k],\n            path.concat(k),\n            o\n          );\n        }\n      }\n    }\n  })(target, spec);\n\n  return Object.keys(log).map(function(hash) {\n    return hash.split('λ');\n  });\n}\n\n// Exporting\nmodule.exports = update;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\nfunction classNames() {\n\tvar classes = '';\n\tvar arg;\n\n\tfor (var i = 0; i < arguments.length; i++) {\n\t\targ = arguments[i];\n\t\tif (!arg) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ('string' === typeof arg || 'number' === typeof arg) {\n\t\t\tclasses += ' ' + arg;\n\t\t} else if (Object.prototype.toString.call(arg) === '[object Array]') {\n\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\t\t} else if ('object' === typeof arg) {\n\t\t\tfor (var key in arg) {\n\t\t\t\tif (!arg.hasOwnProperty(key) || !arg[key]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tclasses += ' ' + key;\n\t\t\t}\n\t\t}\n\t}\n\treturn classes.substr(1);\n}\n\n// safely export classNames for node / browserify\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = classNames;\n}\n\n// safely export classNames for RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n\tdefine('classnames', [], function() {\n\t\treturn classNames;\n\t});\n}\n","(function() {\n  'use strict';\n\n  /**\n   * Here is the list of every allowed parameter when using Emitter#on:\n   * @type {Object}\n   */\n  var __allowedOptions = {\n    once: 'boolean',\n    scope: 'object'\n  };\n\n\n  /**\n   * The emitter's constructor. It initializes the handlers-per-events store and\n   * the global handlers store.\n   *\n   * Emitters are useful for non-DOM events communication. Read its methods\n   * documentation for more information about how it works.\n   *\n   * @return {Emitter}         The fresh new instance.\n   */\n  var Emitter = function() {\n    this._enabled = true;\n    this._children = [];\n    this._handlers = {};\n    this._handlersAll = [];\n  };\n\n\n  /**\n   * This method binds one or more functions to the emitter, handled to one or a\n   * suite of events. So, these functions will be executed anytime one related\n   * event is emitted.\n   *\n   * It is also possible to bind a function to any emitted event by not\n   * specifying any event to bind the function to.\n   *\n   * Recognized options:\n   * *******************\n   *  - {?boolean} once   If true, the handlers will be unbound after the first\n   *                      execution. Default value: false.\n   *  - {?object}  scope  If a scope is given, then the listeners will be called\n   *                      with this scope as \"this\".\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.on('myEvent', function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on('myEvent', function(e) { console.log(e); }, { once: true });\n   *\n   * @param  {string}   event   The event to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >);\n   * > // Or:\n   * > myEmitter.on(\n   * >   ['myEvent1', 'myEvent2'],\n   * >   function(e) { console.log(e); }\n   * >   { once: true }}\n   * >);\n   *\n   * @param  {array}    events  The events to listen to.\n   * @param  {function} handler The function to bind.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > });\n   * > // Or:\n   * > myEmitter.on({\n   * >   myEvent1: function(e) { console.log(e); },\n   * >   myEvent2: function(e) { console.log(e); }\n   * > }, { once: true });\n   *\n   * @param  {object}  bindings An object containing pairs event / function.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.on(function(e) { console.log(e); });\n   * > // Or:\n   * > myEmitter.on(function(e) { console.log(e); }, { once: true});\n   *\n   * @param  {function} handler The function to bind to every events.\n   * @param  {?object}  options Eventually some options.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.on = function(a, b, c) {\n    var i,\n        l,\n        k,\n        event,\n        eArray,\n        bindingObject;\n\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      eArray = typeof a === 'string' ?\n        [a] :\n        a;\n\n      for (i = 0, l = eArray.length; i !== l; i += 1) {\n        event = eArray[i];\n\n        // Check that event is not '':\n        if (!event)\n          continue;\n\n        if (!this._handlers[event])\n          this._handlers[event] = [];\n\n        bindingObject = {\n          handler: b\n        };\n\n        for (k in c || {})\n          if (__allowedOptions[k])\n            bindingObject[k] = c[k];\n          else\n            throw new Error(\n              'The option \"' + k + '\" is not recognized by Emmett.'\n            );\n\n        this._handlers[event].push(bindingObject);\n      }\n\n    // Variant 3:\n    } else if (a && typeof a === 'object' && !Array.isArray(a))\n      for (event in a)\n        Emitter.prototype.on.call(this, event, a[event], b);\n\n    // Variant 4:\n    else if (typeof a === 'function') {\n      bindingObject = {\n        handler: a\n      };\n\n      for (k in c || {})\n        if (__allowedOptions[k])\n          bindingObject[k] = c[k];\n        else\n          throw new Error(\n            'The option \"' + k + '\" is not recognized by Emmett.'\n          );\n\n      this._handlersAll.push(bindingObject);\n    }\n\n    // No matching variant:\n    else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method works exactly as the previous #on, but will add an options\n   * object if none is given, and set the option \"once\" to true.\n   *\n   * The polymorphism works exactly as with the #on method.\n   */\n  Emitter.prototype.once = function(a, b, c) {\n    // Variant 1 and 2:\n    if (typeof b === 'function') {\n      c = c || {};\n      c.once = true;\n      this.on(a, b, c);\n\n    // Variants 3 and 4:\n    } else if (\n      // Variant 3:\n      (a && typeof a === 'object' && !Array.isArray(a)) ||\n      // Variant 4:\n      (typeof a === 'function')\n    ) {\n      b = b || {};\n      b.once = true;\n      this.on(a, b);\n\n    // No matching variant:\n    } else\n      throw new Error('Wrong arguments.');\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds one or more functions from events of the emitter. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Variant 1:\n   * **********\n   * > myEmitter.off('myEvent', myHandler);\n   *\n   * @param  {string}   event   The event to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 2:\n   * **********\n   * > myEmitter.off(['myEvent1', 'myEvent2'], myHandler);\n   *\n   * @param  {array}    events  The events to unbind the handler from.\n   * @param  {function} handler The function to unbind.\n   * @return {Emitter}          Returns this.\n   *\n   * Variant 3:\n   * **********\n   * > myEmitter.off({\n   * >   myEvent1: myHandler1,\n   * >   myEvent2: myHandler2\n   * > });\n   *\n   * @param  {object} bindings An object containing pairs event / function.\n   * @return {Emitter}         Returns this.\n   *\n   * Variant 4:\n   * **********\n   * > myEmitter.off(myHandler);\n   *\n   * @param  {function} handler The function to unbind from every events.\n   * @return {Emitter}          Returns this.\n   */\n  Emitter.prototype.off = function(events, handler) {\n    var i,\n        n,\n        j,\n        m,\n        k,\n        a,\n        event,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    if (arguments.length === 1 && typeof eArray === 'function') {\n      handler = arguments[0];\n\n      // Handlers bound to events:\n      for (k in this._handlers) {\n        a = [];\n        for (i = 0, n = this._handlers[k].length; i !== n; i += 1)\n          if (this._handlers[k][i].handler !== handler)\n            a.push(this._handlers[k][i]);\n        this._handlers[k] = a;\n      }\n\n      a = [];\n      for (i = 0, n = this._handlersAll.length; i !== n; i += 1)\n        if (this._handlersAll[i].handler !== handler)\n          a.push(this._handlersAll[i]);\n      this._handlersAll = a;\n    }\n\n    else if (arguments.length === 2) {\n      for (i = 0, n = eArray.length; i !== n; i += 1) {\n        event = eArray[i];\n        if (this._handlers[event]) {\n          a = [];\n          for (j = 0, m = this._handlers[event].length; j !== m; j += 1)\n            if (this._handlers[event][j].handler !== handler)\n              a.push(this._handlers[event][j]);\n\n          this._handlers[event] = a;\n        }\n\n        if (this._handlers[event] && this._handlers[event].length === 0)\n          delete this._handlers[event];\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method unbinds every handlers attached to every or any events. So,\n   * these functions will no more be executed when the related events are\n   * emitted. If the functions were not bound to the events, nothing will\n   * happen, and no error will be thrown.\n   *\n   * Usage:\n   * ******\n   * > myEmitter.unbindAll();\n   *\n   * @return {Emitter}      Returns this.\n   */\n  Emitter.prototype.unbindAll = function() {\n    var k;\n\n    this._handlersAll = [];\n    for (k in this._handlers)\n      delete this._handlers[k];\n\n    return this;\n  };\n\n\n  /**\n   * This method emits the specified event(s), and executes every handlers bound\n   * to the event(s).\n   *\n   * Use cases:\n   * **********\n   * > myEmitter.emit('myEvent');\n   * > myEmitter.emit('myEvent', myData);\n   * > myEmitter.emit(['myEvent1', 'myEvent2']);\n   * > myEmitter.emit(['myEvent1', 'myEvent2'], myData);\n   *\n   * @param  {string|array} events The event(s) to emit.\n   * @param  {object?}      data   The data.\n   * @return {Emitter}             Returns this.\n   */\n  Emitter.prototype.emit = function(events, data) {\n    var i,\n        n,\n        j,\n        m,\n        z,\n        a,\n        event,\n        child,\n        handlers,\n        eventName,\n        self = this,\n        eArray = typeof events === 'string' ?\n          [events] :\n          events;\n\n    // Check that the emitter is enabled:\n    if (!this._enabled)\n      return this;\n\n    data = data === undefined ? {} : data;\n\n    for (i = 0, n = eArray.length; i !== n; i += 1) {\n      eventName = eArray[i];\n      handlers = (this._handlers[eventName] || []).concat(this._handlersAll);\n\n      if (handlers.length) {\n        event = {\n          type: eventName,\n          data: data || {},\n          target: this\n        };\n        a = [];\n\n        for (j = 0, m = handlers.length; j !== m; j += 1) {\n\n          // We have to verify that the handler still exists in the array,\n          // as it might have been mutated already\n          if (\n            (\n              this._handlers[eventName] &&\n              this._handlers[eventName].indexOf(handlers[j]) >= 0\n            ) ||\n            this._handlersAll.indexOf(handlers[j]) >= 0\n          ) {\n            handlers[j].handler.call(\n              'scope' in handlers[j] ? handlers[j].scope : this,\n              event\n            );\n\n            // Since the listener callback can mutate the _handlers,\n            // we register the handlers we want to remove, not the ones\n            // we want to keep\n            if (handlers[j].once)\n              a.push(handlers[j]);\n          }\n        }\n\n        // Go through handlers to remove\n        for (z = 0; z < a.length; z++) {\n          this._handlers[eventName].splice(a.indexOf(a[z]), 1);\n        }\n      }\n    }\n\n    // Events propagation:\n    for (i = 0, n = this._children.length; i !== n; i += 1) {\n      child = this._children[i];\n      child.emit.apply(child, arguments);\n    }\n\n    return this;\n  };\n\n\n  /**\n   * This method creates a new instance of Emitter and binds it as a child. Here\n   * is what children do:\n   *  - When the parent emits an event, the children will emit the same later\n   *  - When a child is killed, it is automatically unreferenced from the parent\n   *  - When the parent is killed, all children will be killed as well\n   *\n   * @return {Emitter} Returns the fresh new child.\n   */\n  Emitter.prototype.child = function() {\n    var self = this,\n        child = new Emitter();\n\n    child.on('emmett:kill', function() {\n      if (self._children)\n        for (var i = 0, l = self._children.length; i < l; i++)\n          if (self._children[i] === child) {\n            self._children.splice(i, 1);\n            break;\n          }\n    });\n    this._children.push(child);\n\n    return child;\n  };\n\n  /**\n   * This returns an array of handler functions corresponding to the given\n   * event or every handler functions if an event were not to be given.\n   *\n   * @param  {?string} event Name of the event.\n   * @return {Emitter} Returns this.\n   */\n  function mapHandlers(a) {\n    var i, l, h = [];\n\n    for (i = 0, l = a.length; i < l; i++)\n      h.push(a[i].handler);\n\n    return h;\n  }\n\n  Emitter.prototype.listeners = function(event) {\n    var handlers = [],\n        k,\n        i,\n        l;\n\n    // If no event is passed, we return every handlers\n    if (!event) {\n      handlers = mapHandlers(this._handlersAll);\n\n      for (k in this._handlers)\n        handlers = handlers.concat(mapHandlers(this._handlers[k]));\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners());\n    }\n\n    // Else we only retrieve the needed handlers\n    else {\n      handlers = mapHandlers(this._handlers[event]);\n\n      // Retrieving handlers per children\n      for (i = 0, l = this._children.length; i < l; i++)\n        handlers = handlers.concat(this._children[i].listeners(event));\n    }\n\n    return handlers;\n  };\n\n\n  /**\n   * This method will first dispatch a \"emmett:kill\" event, and then unbinds all\n   * listeners and make it impossible to ever rebind any listener to any event.\n   */\n  Emitter.prototype.kill = function() {\n    this.emit('emmett:kill');\n\n    this.unbindAll();\n    this._handlers = null;\n    this._handlersAll = null;\n    this._enabled = false;\n\n    if (this._children)\n      for (var i = 0, l = this._children.length; i < l; i++)\n        this._children[i].kill();\n\n    this._children = null;\n  };\n\n\n  /**\n   * This method disabled the emitter, which means its emit method will do\n   * nothing.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.disable = function() {\n    this._enabled = false;\n\n    return this;\n  };\n\n\n  /**\n   * This method enables the emitter.\n   *\n   * @return {Emitter} Returns this.\n   */\n  Emitter.prototype.enable = function() {\n    this._enabled = true;\n\n    return this;\n  };\n\n\n  /**\n   * Version:\n   */\n  Emitter.version = '2.1.2';\n\n\n  // Export:\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = Emitter;\n    exports.Emitter = Emitter;\n  } else if (typeof define === 'function' && define.amd)\n    define('emmett', [], function() {\n      return Emitter;\n    });\n  else\n    this.Emitter = Emitter;\n}).call(this);\n","/**\n * typology.js - A data validation library for Node.js and the browser,\n *\n * Version: 0.3.1\n * Sources: http://github.com/jacomyal/typology\n * Doc:     http://github.com/jacomyal/typology#readme\n *\n * License:\n * --------\n * Copyright © 2014 Alexis Jacomy (@jacomyal), Guillaume Plique (@Yomguithereal)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * The Software is provided \"as is\", without warranty of any kind, express or\n * implied, including but not limited to the warranties of merchantability,\n * fitness for a particular purpose and noninfringement. In no event shall the\n * authors or copyright holders be liable for any claim, damages or other\n * liability, whether in an action of contract, tort or otherwise, arising\n * from, out of or in connection with the software or the use or other dealings\n * in the Software.\n */\n(function(global) {\n  'use strict';\n\n  /**\n   * Code conventions:\n   * *****************\n   *  - 80 characters max per line\n   *  - Write \"__myVar\" for any global private variable\n   *  - Write \"_myVar\" for any instance private variable\n   *  - Write \"myVar\" any local variable\n   */\n\n\n\n  /**\n   * PRIVATE GLOBALS:\n   * ****************\n   */\n\n  /**\n   * This object is a dictionnary that maps \"[object Something]\" strings to the\n   * typology form \"something\":\n   */\n  var __class2type = {};\n\n  /**\n   * This array is the list of every types considered native by typology:\n   */\n  var __nativeTypes = ['*'];\n\n  (function() {\n    var k,\n        className,\n        classes = [\n          'Arguments',\n          'Boolean',\n          'Number',\n          'String',\n          'Function',\n          'Array',\n          'Date',\n          'RegExp',\n          'Object'\n        ];\n\n    // Fill types\n    for (k in classes) {\n      className = classes[k];\n      __nativeTypes.push(className.toLowerCase());\n      __class2type['[object ' + className + ']'] = className.toLowerCase();\n    }\n  })();\n\n\n\n  /**\n   * CONSTRUCTOR:\n   * ************\n   */\n  function Typology(defs) {\n    /**\n     * INSTANCE PRIVATES:\n     * ******************\n     */\n\n    var _self = this;\n\n    /**\n     * This objects will contain every instance-specific custom types:\n     */\n    var _customTypes = {};\n\n    /**\n     * This function will recursively scan an object to check wether or not it\n     * matches a given type. It will return null if it matches, and an Error\n     * object else.\n     *\n     * Examples:\n     * *********\n     * 1. When the type matches:\n     *  > _scan('abc', 'string');\n     *  will return null.\n     *\n     * 2. When a top-level type does not match:\n     *  > _scan('abc', 'number');\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *\n     * 3. When a sub-object type does not its type:\n     *  > _scan({ a: 'abc' }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a' ]\n     *\n     * 4. When a deep sub-object type does not its type:\n     *  > _scan({ a: [ 123, 'abc' ] }, { a: ['number'] });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"string\".\n     *   - path: [ 'a', 1 ]\n     *\n     * 5. When a required key is missing:\n     *  > _scan({}, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Expected a \"number\" but found a \"undefined\".\n     *   - path: [ 'a' ]\n     *\n     * 6. When an unexpected key is present:\n     *  > _scan({ a: 123, b: 456 }, { a: 'number' });\n     *  will return an Error object with the following information:\n     *   - message: Unexpected key \"b\".\n     *\n     * @param  {*}      obj  The value to validate.\n     * @param  {type}   type The type.\n     * @return {?Error}      Returns null or an Error object.\n     */\n    function _scan(obj, type) {\n      var a,\n          i,\n          l,\n          k,\n          error,\n          subError,\n          hasStar,\n          hasTypeOf,\n          optional = false,\n          exclusive = false,\n          typeOf = _self.get(obj);\n\n      if (_self.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        l = a.length;\n        for (i = 0; i < l; i++)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            throw new Error('Invalid type.');\n\n        if (type.match(/^\\?/))\n          optional = true;\n\n        if (type.replace(/^\\?/, '').match(/^\\!/))\n          exclusive = true;\n\n        if (exclusive && optional)\n          throw new Error('Invalid type.');\n\n        for (i in a)\n          if (_customTypes[a[i]])\n            if (\n              (typeof _customTypes[a[i]].type === 'function') ?\n                (_customTypes[a[i]].type.call(_self, obj) === true) :\n                !_scan(obj, _customTypes[a[i]].type)\n            ) {\n              if (exclusive) {\n                error = new Error();\n                error.message = 'Expected a \"' + type + '\" but found a ' +\n                                '\"' + a[i] + '\".';\n              error.expected = type;\n              error.type = a[i];\n              error.value = obj;\n                return error;\n              } else\n                return null;\n            }\n\n        if (obj === null || obj === undefined) {\n          if (!exclusive && !optional) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          } else\n            return null;\n\n        } else {\n          hasStar = ~a.indexOf('*');\n          hasTypeOf = ~a.indexOf(typeOf);\n          if (exclusive && (hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + (hasTypeOf ? typeOf : '*') + '\".';\n            error.type = hasTypeOf ? typeOf : '*';\n            error.expected = type;\n            error.value = obj;\n            return error;\n\n          } else if (!exclusive && !(hasStar || hasTypeOf)) {\n            error = new Error();\n            error.message = 'Expected a \"' + type + '\" but found a ' +\n                            '\"' + typeOf + '\".';\n            error.expected = type;\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n\n          } else\n            return null;\n        }\n\n      } else if (_self.get(type) === 'object') {\n        if (typeOf !== 'object') {\n          error = new Error();\n          error.message = 'Expected an object but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        for (k in type)\n          if ((subError = _scan(obj[k], type[k]))) {\n            error = subError;\n            error.path = error.path ?\n              [k].concat(error.path) :\n              [k];\n            return error;\n          }\n\n        for (k in obj)\n          if (type[k] === undefined) {\n            error = new Error();\n            error.message = 'Unexpected key \"' + k + '\".';\n            error.type = typeOf;\n            error.value = obj;\n            return error;\n          }\n\n        return null;\n\n      } else if (_self.get(type) === 'array') {\n        if (type.length !== 1)\n          throw new Error('Invalid type.');\n\n        if (typeOf !== 'array') {\n          error = new Error();\n          error.message = 'Expected an array but found a \"' + typeOf + '\".';\n          error.expected = type;\n          error.type = typeOf;\n          error.value = obj;\n          return error;\n        }\n\n        l = obj.length;\n        for (i = 0; i < l; i++)\n          if ((subError = _scan(obj[i], type[0]))) {\n            error = subError;\n            error.path = error.path ?\n              [i].concat(error.path) :\n              [i];\n            return error;\n          }\n\n        return null;\n      } else\n        throw new Error('Invalid type.');\n    }\n\n\n\n    /**\n     * INSTANCE METHODS:\n     * *****************\n     */\n\n    /**\n     * This method registers a custom type into the Typology instance. A type\n     * is registered under a unique name, and is described by an object (like\n     * classical C structures) or a function.\n     *\n     * Variant 1:\n     * **********\n     * > types.add('user', { id: 'string', name: '?string' });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {object}   type The corresponding structure.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 2:\n     * **********\n     * > types.add('integer', function(value) {\n     * >   return typeof value === 'number' && value === value | 0;\n     * > });\n     *\n     * @param  {string}   id   The unique id of the type.\n     * @param  {function} type The function validating the type.\n     * @return {Typology}      Returns this.\n     *\n     * Variant 3:\n     * **********\n     * > types.add({\n     * >   id: 'user',\n     * >   type: { id: 'string', name: '?string' }\n     * > });\n     *\n     * > types.add({\n     * >   id: 'integer',\n     * >   type: function(value) {\n     * >     return typeof value === 'number' && value === value | 0;\n     * >   }\n     * > });\n     *\n     * @param  {object}   specs An object describing fully the type.\n     * @return {Typology}       Returns this.\n     *\n     * Recognized parameters:\n     * **********************\n     * Here is the exhaustive list of every accepted parameters in the specs\n     * object:\n     *\n     *   {string}          id    The unique id of the type.\n     *   {function|object} type  The function or the structure object\n     *                           validating the type.\n     *   {?[string]}       proto Eventually an array of ids of types that are\n     *                           referenced in the structure but do not exist\n     *                           yet.\n     */\n    this.add = function(a1, a2) {\n      var o,\n          k,\n          a,\n          id,\n          tmp,\n          type;\n\n      // Polymorphism:\n      if (arguments.length === 1) {\n        if (this.get(a1) === 'object') {\n          o = a1;\n          id = o.id;\n          type = o.type;\n        } else\n          throw new Error('If types.add is called with one argument, ' +\n                          'this one has to be an object.');\n      } else if (arguments.length === 2) {\n        if (typeof a1 !== 'string' || !a1)\n          throw new Error('If types.add is called with more than one ' +\n                          'argument, the first one must be the string id.');\n        else\n          id = a1;\n\n        type = a2;\n      } else\n        throw new Error('types.add has to be called ' +\n                        'with one or two arguments.');\n\n      if (this.get(id) !== 'string' || id.length === 0)\n        throw new Error('A type requires an string id.');\n\n      if (_customTypes[id] !== undefined && _customTypes[id] !== 'proto')\n        throw new Error('The type \"' + id + '\" already exists.');\n\n      if (~__nativeTypes.indexOf(id))\n        throw new Error('\"' + id + '\" is a reserved type name.');\n\n      _customTypes[id] = 1;\n\n      // Check given prototypes:\n      a = (o || {}).proto || [];\n      a = Array.isArray(a) ? a : [a];\n      tmp = {};\n      for (k in a)\n        if (_customTypes[a[k]] === undefined) {\n          _customTypes[a[k]] = 1;\n          tmp[a[k]] = 1;\n        }\n\n      if ((this.get(type) !== 'function') && !this.isValid(type))\n        throw new Error('A type requires a valid definition. ' +\n                        'This one can be a preexistant type or else ' +\n                        'a function testing given objects.');\n\n      // Effectively add the type:\n      _customTypes[id] = (o === undefined) ?\n        {\n          id: id,\n          type: type\n        } :\n        {};\n\n      if (o !== undefined)\n        for (k in o)\n          _customTypes[id][k] = o[k];\n\n      // Delete prototypes:\n      for (k in tmp)\n        if (k !== id)\n          delete _customTypes[k];\n\n      return this;\n    };\n\n    /**\n     * This method returns true if a custom type is already registered in this\n     * instance under the given key.\n     *\n     * @param  {string}  key A type name.\n     * @return {boolean}     Returns true if the key is registered.\n     */\n    this.has = function(key) {\n      return !!_customTypes[key];\n    };\n\n    /**\n     * This method returns the native type of a given value.\n     *\n     * Examples:\n     * *********\n     * > types.get({ a: 1 }); // returns \"object\"\n     * > types.get('abcde');  // returns \"string\"\n     * > types.get(1234567);  // returns \"number\"\n     * > types.get([1, 2]);   // returns \"array\"\n     *\n     * @param  {*}      value Anything.\n     * @return {string}       Returns the native type of the value.\n     */\n    this.get = function(obj) {\n      return (obj === null || obj === undefined) ?\n        String(obj) :\n        __class2type[Object.prototype.toString.call(obj)] || 'object';\n    };\n\n    /**\n     * This method validates some value against a given type. If the flag throws\n     * has a truthy value, then the method will throw an error instead of\n     * returning false.\n     *\n     * To know more about the error thrown, you can read the documentation of\n     * the private method _scan.\n     *\n     * Examples:\n     * *********\n     * > types.check({ a: 1 }, 'object');                      // returns true\n     * > types.check({ a: 1 }, { a: 'string' });               // returns true\n     * > types.check({ a: 1 }, { a: 'string', b: '?number' }); // returns true\n     *\n     * > types.check({ a: 1 }, { a: 'string', b: 'number' }); // returns false\n     * > types.check({ a: 1 }, { a: 'number' });              // returns false\n     * > types.check({ a: 1 }, 'array');                      // returns false\n     *\n     * > types.check({ a: 1 }, 'array', true); // throws an Error\n     *\n     * @param  {*}        value  Anything.\n     * @param  {type}     type   A valid type.\n     * @param  {?boolean} throws If true, this method will throw an error\n     *                           instead of returning false.\n     * @return {boolean}         Returns true if the value matches the type, and\n     *                           not else.\n     */\n    this.check = function(obj, type, throws) {\n      var result = _scan(obj, type);\n      if (throws && result)\n        throw result;\n      else\n        return !result;\n    };\n\n    /**\n     * This method validates a type. If the type is not referenced or is not\n     * valid, it will return false.\n     *\n     * To know more about that function, don't hesitate to read the related\n     * unit tests.\n     *\n     * Examples:\n     * *********\n     * > types.isValid('string');        // returns true\n     * > types.isValid('?string');       // returns true\n     * > types.isValid('!string');       // returns true\n     * > types.isValid('string|number'); // returns true\n     * > types.isValid({ a: 'string' }); // returns true\n     * > types.isValid(['string']);      // returns true\n     *\n     * > types.isValid('!?string');                // returns false\n     * > types.isValid('myNotDefinedType');        // returns false\n     * > types.isValid(['myNotDefinedType']);      // returns false\n     * > types.isValid({ a: 'myNotDefinedType' }); // returns false\n     *\n     * > types.isValid('user');               // returns false\n     * > types.add('user', { id: 'string' }); // makes the type become valid\n     * > types.isValid('user');               // returns true\n     *\n     * @param  {*}       type The type to get checked.\n     * @return {boolean}      Returns true if the type is valid, and false else.\n     */\n    this.isValid = function(type) {\n      var a,\n          k,\n          i;\n\n      if (this.get(type) === 'string') {\n        a = type.replace(/^[\\?\\!]/, '').split(/\\|/);\n        for (i in a)\n          if (__nativeTypes.indexOf(a[i]) < 0 && !(a[i] in _customTypes))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'object') {\n        for (k in type)\n          if (!this.isValid(type[k]))\n            return false;\n        return true;\n\n      } else if (this.get(type) === 'array')\n        return type.length === 1 ?\n          this.isValid(type[0]) :\n          false;\n      else\n        return false;\n    };\n\n\n\n    /**\n     * INSTANTIATION ROUTINE:\n     * **********************\n     */\n\n    // Add a type \"type\" to shortcut the #isValid method:\n    this.add('type', (function(v) {\n      return this.isValid(v);\n    }).bind(this));\n\n    // Add a type \"primitive\" to match every primitive types (including null):\n    this.add('primitive', function(v) {\n      return !v || !(v instanceof Object || typeof v === 'object');\n    });\n\n    // Adding custom types at instantiation:\n    defs = defs || {};\n    if (this.get(defs) !== 'object')\n      throw Error('Invalid argument.');\n\n    for (var k in defs)\n      this.add(k, defs[k]);\n  }\n\n\n\n  /**\n   * GLOBAL PUBLIC API:\n   * ******************\n   */\n\n  // Creating a \"main\" typology instance to export:\n  var types = Typology;\n  Typology.call(types);\n\n  // Version:\n  Object.defineProperty(types, 'version', {\n    value: '0.3.1'\n  });\n\n\n\n  /**\n   * EXPORT:\n   * *******\n   */\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = types;\n    exports.types = types;\n  } else if (typeof define === 'function' && define.amd)\n    define('typology', [], function() {\n      return types;\n    });\n  else\n    this.types = types;\n})(this);\n","\n/***** xregexp.js *****/\n\n/*!\r\n * XRegExp v2.0.0\r\n * (c) 2007-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * XRegExp provides augmented, extensible JavaScript regular expressions. You get new syntax,\r\n * flags, and methods beyond what browsers support natively. XRegExp is also a regex utility belt\r\n * with tools to make your client-side grepping simpler and more powerful, while freeing you from\r\n * worrying about pesky cross-browser inconsistencies and the dubious `lastIndex` property. See\r\n * XRegExp's documentation (http://xregexp.com/) for more details.\r\n * @module xregexp\r\n * @requires N/A\r\n */\r\nvar XRegExp;\r\n\r\n// Avoid running twice; that would reset tokens and could break references to native globals\r\nXRegExp = XRegExp || (function (undef) {\r\n    \"use strict\";\r\n\r\n/*--------------------------------------\r\n *  Private variables\r\n *------------------------------------*/\r\n\r\n    var self,\r\n        addToken,\r\n        add,\r\n\r\n// Optional features; can be installed and uninstalled\r\n        features = {\r\n            natives: false,\r\n            extensibility: false\r\n        },\r\n\r\n// Store native methods to use and restore (\"native\" is an ES3 reserved keyword)\r\n        nativ = {\r\n            exec: RegExp.prototype.exec,\r\n            test: RegExp.prototype.test,\r\n            match: String.prototype.match,\r\n            replace: String.prototype.replace,\r\n            split: String.prototype.split\r\n        },\r\n\r\n// Storage for fixed/extended native methods\r\n        fixed = {},\r\n\r\n// Storage for cached regexes\r\n        cache = {},\r\n\r\n// Storage for addon tokens\r\n        tokens = [],\r\n\r\n// Token scopes\r\n        defaultScope = \"default\",\r\n        classScope = \"class\",\r\n\r\n// Regexes that match native regex syntax\r\n        nativeTokens = {\r\n            // Any native multicharacter token in default scope (includes octals, excludes character classes)\r\n            \"default\": /^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)/,\r\n            // Any native multicharacter token in character class scope (includes octals)\r\n            \"class\": /^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))/\r\n        },\r\n\r\n// Any backreference in replacement strings\r\n        replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g,\r\n\r\n// Any character with a later instance in the string\r\n        duplicateFlags = /([\\s\\S])(?=[\\s\\S]*\\1)/g,\r\n\r\n// Any greedy/lazy quantifier\r\n        quantifier = /^(?:[?*+]|{\\d+(?:,\\d*)?})\\??/,\r\n\r\n// Check for correct `exec` handling of nonparticipating capturing groups\r\n        compliantExecNpcg = nativ.exec.call(/()??/, \"\")[1] === undef,\r\n\r\n// Check for flag y support (Firefox 3+)\r\n        hasNativeY = RegExp.prototype.sticky !== undef,\r\n\r\n// Used to kill infinite recursion during XRegExp construction\r\n        isInsideConstructor = false,\r\n\r\n// Storage for known flags, including addon flags\r\n        registeredFlags = \"gim\" + (hasNativeY ? \"y\" : \"\");\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n/**\r\n * Attaches XRegExp.prototype properties and named capture supporting data to a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to augment.\r\n * @param {Array} captureNames Array with capture names, or null.\r\n * @param {Boolean} [isNative] Whether the regex was created by `RegExp` rather than `XRegExp`.\r\n * @returns {RegExp} Augmented regex.\r\n */\r\n    function augment(regex, captureNames, isNative) {\r\n        var p;\r\n        // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\r\n        for (p in self.prototype) {\r\n            if (self.prototype.hasOwnProperty(p)) {\r\n                regex[p] = self.prototype[p];\r\n            }\r\n        }\r\n        regex.xregexp = {captureNames: captureNames, isNative: !!isNative};\r\n        return regex;\r\n    }\r\n\r\n/**\r\n * Returns native `RegExp` flags used by a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {String} Native flags in use.\r\n */\r\n    function getNativeFlags(regex) {\r\n        //return nativ.exec.call(/\\/([a-z]*)$/i, String(regex))[1];\r\n        return (regex.global     ? \"g\" : \"\") +\r\n               (regex.ignoreCase ? \"i\" : \"\") +\r\n               (regex.multiline  ? \"m\" : \"\") +\r\n               (regex.extended   ? \"x\" : \"\") + // Proposed for ES6, included in AS3\r\n               (regex.sticky     ? \"y\" : \"\"); // Proposed for ES6, included in Firefox 3+\r\n    }\r\n\r\n/**\r\n * Copies a regex object while preserving special properties for named capture and augmenting with\r\n * `XRegExp.prototype` methods. The copy has a fresh `lastIndex` property (set to zero). Allows\r\n * adding and removing flags while copying the regex.\r\n * @private\r\n * @param {RegExp} regex Regex to copy.\r\n * @param {String} [addFlags] Flags to be added while copying the regex.\r\n * @param {String} [removeFlags] Flags to be removed while copying the regex.\r\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\r\n */\r\n    function copy(regex, addFlags, removeFlags) {\r\n        if (!self.isRegExp(regex)) {\r\n            throw new TypeError(\"type RegExp expected\");\r\n        }\r\n        var flags = nativ.replace.call(getNativeFlags(regex) + (addFlags || \"\"), duplicateFlags, \"\");\r\n        if (removeFlags) {\r\n            // Would need to escape `removeFlags` if this was public\r\n            flags = nativ.replace.call(flags, new RegExp(\"[\" + removeFlags + \"]+\", \"g\"), \"\");\r\n        }\r\n        if (regex.xregexp && !regex.xregexp.isNative) {\r\n            // Compiling the current (rather than precompilation) source preserves the effects of nonnative source flags\r\n            regex = augment(self(regex.source, flags),\r\n                            regex.xregexp.captureNames ? regex.xregexp.captureNames.slice(0) : null);\r\n        } else {\r\n            // Augment with `XRegExp.prototype` methods, but use native `RegExp` (avoid searching for special tokens)\r\n            regex = augment(new RegExp(regex.source, flags), null, true);\r\n        }\r\n        return regex;\r\n    }\r\n\r\n/*\r\n * Returns the last index at which a given value can be found in an array, or `-1` if it's not\r\n * present. The array is searched backwards.\r\n * @private\r\n * @param {Array} array Array to search.\r\n * @param {*} value Value to locate in the array.\r\n * @returns {Number} Last zero-based index at which the item is found, or -1.\r\n */\r\n    function lastIndexOf(array, value) {\r\n        var i = array.length;\r\n        if (Array.prototype.lastIndexOf) {\r\n            return array.lastIndexOf(value); // Use the native method if available\r\n        }\r\n        while (i--) {\r\n            if (array[i] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n/**\r\n * Determines whether an object is of the specified type.\r\n * @private\r\n * @param {*} value Object to check.\r\n * @param {String} type Type to check for, in lowercase.\r\n * @returns {Boolean} Whether the object matches the type.\r\n */\r\n    function isType(value, type) {\r\n        return Object.prototype.toString.call(value).toLowerCase() === \"[object \" + type + \"]\";\r\n    }\r\n\r\n/**\r\n * Prepares an options object from the given value.\r\n * @private\r\n * @param {String|Object} value Value to convert to an options object.\r\n * @returns {Object} Options object.\r\n */\r\n    function prepareOptions(value) {\r\n        value = value || {};\r\n        if (value === \"all\" || value.all) {\r\n            value = {natives: true, extensibility: true};\r\n        } else if (isType(value, \"string\")) {\r\n            value = self.forEach(value, /[^\\s,]+/, function (m) {\r\n                this[m] = true;\r\n            }, {});\r\n        }\r\n        return value;\r\n    }\r\n\r\n/**\r\n * Runs built-in/custom tokens in reverse insertion order, until a match is found.\r\n * @private\r\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\r\n * @param {Number} pos Position to search for tokens within `pattern`.\r\n * @param {Number} scope Current regex scope.\r\n * @param {Object} context Context object assigned to token handler functions.\r\n * @returns {Object} Object with properties `output` (the substitution string returned by the\r\n *   successful token handler) and `match` (the token's match array), or null.\r\n */\r\n    function runTokens(pattern, pos, scope, context) {\r\n        var i = tokens.length,\r\n            result = null,\r\n            match,\r\n            t;\r\n        // Protect against constructing XRegExps within token handler and trigger functions\r\n        isInsideConstructor = true;\r\n        // Must reset `isInsideConstructor`, even if a `trigger` or `handler` throws\r\n        try {\r\n            while (i--) { // Run in reverse order\r\n                t = tokens[i];\r\n                if ((t.scope === \"all\" || t.scope === scope) && (!t.trigger || t.trigger.call(context))) {\r\n                    t.pattern.lastIndex = pos;\r\n                    match = fixed.exec.call(t.pattern, pattern); // Fixed `exec` here allows use of named backreferences, etc.\r\n                    if (match && match.index === pos) {\r\n                        result = {\r\n                            output: t.handler.call(context, match, scope),\r\n                            match: match\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        } finally {\r\n            isInsideConstructor = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n/**\r\n * Enables or disables XRegExp syntax and flag extensibility.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setExtensibility(on) {\r\n        self.addToken = addToken[on ? \"on\" : \"off\"];\r\n        features.extensibility = on;\r\n    }\r\n\r\n/**\r\n * Enables or disables native method overrides.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setNatives(on) {\r\n        RegExp.prototype.exec = (on ? fixed : nativ).exec;\r\n        RegExp.prototype.test = (on ? fixed : nativ).test;\r\n        String.prototype.match = (on ? fixed : nativ).match;\r\n        String.prototype.replace = (on ? fixed : nativ).replace;\r\n        String.prototype.split = (on ? fixed : nativ).split;\r\n        features.natives = on;\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Constructor\r\n *------------------------------------*/\r\n\r\n/**\r\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\r\n * native regular expression in that additional syntax and flags are supported. The returned object\r\n * is in fact a native `RegExp` and works with all native methods.\r\n * @class XRegExp\r\n * @constructor\r\n * @param {String|RegExp} pattern Regex pattern string, or an existing `RegExp` object to copy.\r\n * @param {String} [flags] Any combination of flags:\r\n *   <li>`g` - global\r\n *   <li>`i` - ignore case\r\n *   <li>`m` - multiline anchors\r\n *   <li>`n` - explicit capture\r\n *   <li>`s` - dot matches all (aka singleline)\r\n *   <li>`x` - free-spacing and line comments (aka extended)\r\n *   <li>`y` - sticky (Firefox 3+ only)\r\n *   Flags cannot be provided when constructing one `RegExp` from another.\r\n * @returns {RegExp} Extended regular expression object.\r\n * @example\r\n *\r\n * // With named capture and flag x\r\n * date = XRegExp('(?<year>  [0-9]{4}) -?  # year  \\n\\\r\n *                 (?<month> [0-9]{2}) -?  # month \\n\\\r\n *                 (?<day>   [0-9]{2})     # day   ', 'x');\r\n *\r\n * // Passing a regex object to copy it. The copy maintains special properties for named capture,\r\n * // is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property (set to\r\n * // zero). Native regexes are not recompiled using XRegExp syntax.\r\n * XRegExp(/regex/);\r\n */\r\n    self = function (pattern, flags) {\r\n        if (self.isRegExp(pattern)) {\r\n            if (flags !== undef) {\r\n                throw new TypeError(\"can't supply flags when constructing one RegExp from another\");\r\n            }\r\n            return copy(pattern);\r\n        }\r\n        // Tokens become part of the regex construction process, so protect against infinite recursion\r\n        // when an XRegExp is constructed within a token handler function\r\n        if (isInsideConstructor) {\r\n            throw new Error(\"can't call the XRegExp constructor within token definition functions\");\r\n        }\r\n\r\n        var output = [],\r\n            scope = defaultScope,\r\n            tokenContext = {\r\n                hasNamedCapture: false,\r\n                captureNames: [],\r\n                hasFlag: function (flag) {\r\n                    return flags.indexOf(flag) > -1;\r\n                }\r\n            },\r\n            pos = 0,\r\n            tokenResult,\r\n            match,\r\n            chr;\r\n        pattern = pattern === undef ? \"\" : String(pattern);\r\n        flags = flags === undef ? \"\" : String(flags);\r\n\r\n        if (nativ.match.call(flags, duplicateFlags)) { // Don't use test/exec because they would update lastIndex\r\n            throw new SyntaxError(\"invalid duplicate regular expression flag\");\r\n        }\r\n        // Strip/apply leading mode modifier with any combination of flags except g or y: (?imnsx)\r\n        pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function ($0, $1) {\r\n            if (nativ.test.call(/[gy]/, $1)) {\r\n                throw new SyntaxError(\"can't use flag g or y in mode modifier\");\r\n            }\r\n            flags = nativ.replace.call(flags + $1, duplicateFlags, \"\");\r\n            return \"\";\r\n        });\r\n        self.forEach(flags, /[\\s\\S]/, function (m) {\r\n            if (registeredFlags.indexOf(m[0]) < 0) {\r\n                throw new SyntaxError(\"invalid regular expression flag \" + m[0]);\r\n            }\r\n        });\r\n\r\n        while (pos < pattern.length) {\r\n            // Check for custom tokens at the current position\r\n            tokenResult = runTokens(pattern, pos, scope, tokenContext);\r\n            if (tokenResult) {\r\n                output.push(tokenResult.output);\r\n                pos += (tokenResult.match[0].length || 1);\r\n            } else {\r\n                // Check for native tokens (except character classes) at the current position\r\n                match = nativ.exec.call(nativeTokens[scope], pattern.slice(pos));\r\n                if (match) {\r\n                    output.push(match[0]);\r\n                    pos += match[0].length;\r\n                } else {\r\n                    chr = pattern.charAt(pos);\r\n                    if (chr === \"[\") {\r\n                        scope = classScope;\r\n                    } else if (chr === \"]\") {\r\n                        scope = defaultScope;\r\n                    }\r\n                    // Advance position by one character\r\n                    output.push(chr);\r\n                    ++pos;\r\n                }\r\n            }\r\n        }\r\n\r\n        return augment(new RegExp(output.join(\"\"), nativ.replace.call(flags, /[^gimy]+/g, \"\")),\r\n                       tokenContext.hasNamedCapture ? tokenContext.captureNames : null);\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Public methods/properties\r\n *------------------------------------*/\r\n\r\n// Installed and uninstalled states for `XRegExp.addToken`\r\n    addToken = {\r\n        on: function (regex, handler, options) {\r\n            options = options || {};\r\n            if (regex) {\r\n                tokens.push({\r\n                    pattern: copy(regex, \"g\" + (hasNativeY ? \"y\" : \"\")),\r\n                    handler: handler,\r\n                    scope: options.scope || defaultScope,\r\n                    trigger: options.trigger || null\r\n                });\r\n            }\r\n            // Providing `customFlags` with null `regex` and `handler` allows adding flags that do\r\n            // nothing, but don't throw an error\r\n            if (options.customFlags) {\r\n                registeredFlags = nativ.replace.call(registeredFlags + options.customFlags, duplicateFlags, \"\");\r\n            }\r\n        },\r\n        off: function () {\r\n            throw new Error(\"extensibility must be installed before using addToken\");\r\n        }\r\n    };\r\n\r\n/**\r\n * Extends or changes XRegExp syntax and allows custom flags. This is used internally and can be\r\n * used to create XRegExp addons. `XRegExp.install('extensibility')` must be run before calling\r\n * this function, or an error is thrown. If more than one token can match the same string, the last\r\n * added wins.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex object that matches the new token.\r\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\r\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\r\n *   properties of the regex being built, through `this`. Invoked with two arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The regex scope where the match was found.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   <li>`scope` {String} Scopes where the token applies: 'default', 'class', or 'all'.\r\n *   <li>`trigger` {Function} Function that returns `true` when the token should be applied; e.g.,\r\n *     if a flag is set. If `false` is returned, the matched string can be matched by other tokens.\r\n *     Has access to persistent properties of the regex being built, through `this` (including\r\n *     function `this.hasFlag`).\r\n *   <li>`customFlags` {String} Nonnative flags used by the token's handler or trigger functions.\r\n *     Prevents XRegExp from throwing an invalid flag error when the specified flags are used.\r\n * @example\r\n *\r\n * // Basic usage: Adds \\a for ALERT character\r\n * XRegExp.addToken(\r\n *   /\\\\a/,\r\n *   function () {return '\\\\x07';},\r\n *   {scope: 'all'}\r\n * );\r\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\r\n */\r\n    self.addToken = addToken.off;\r\n\r\n/**\r\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\r\n * the same pattern and flag combination, the cached copy is returned.\r\n * @memberOf XRegExp\r\n * @param {String} pattern Regex pattern string.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Cached XRegExp object.\r\n * @example\r\n *\r\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\r\n *   // The regex is compiled once only\r\n * }\r\n */\r\n    self.cache = function (pattern, flags) {\r\n        var key = pattern + \"/\" + (flags || \"\");\r\n        return cache[key] || (cache[key] = self(pattern, flags));\r\n    };\r\n\r\n/**\r\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\r\n * can safely be used at any point within a regex that uses any flags.\r\n * @memberOf XRegExp\r\n * @param {String} str String to escape.\r\n * @returns {String} String with regex metacharacters escaped.\r\n * @example\r\n *\r\n * XRegExp.escape('Escaped? <.>');\r\n * // -> 'Escaped\\?\\ <\\.>'\r\n */\r\n    self.escape = function (str) {\r\n        return nativ.replace.call(str, /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\r\n * regex uses named capture, named backreference properties are included on the match array.\r\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\r\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\r\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n * @example\r\n *\r\n * // Basic use, with named backreference\r\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\r\n * match.hex; // -> '2620'\r\n *\r\n * // With pos and sticky, in a loop\r\n * var pos = 2, result = [], match;\r\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\r\n *   result.push(match[1]);\r\n *   pos = match.index + match[0].length;\r\n * }\r\n * // result -> ['2', '3', '4']\r\n */\r\n    self.exec = function (str, regex, pos, sticky) {\r\n        var r2 = copy(regex, \"g\" + (sticky && hasNativeY ? \"y\" : \"\"), (sticky === false ? \"y\" : \"\")),\r\n            match;\r\n        r2.lastIndex = pos = pos || 0;\r\n        match = fixed.exec.call(r2, str); // Fixed `exec` required for `lastIndex` fix, etc.\r\n        if (sticky && match && match.index !== pos) {\r\n            match = null;\r\n        }\r\n        if (regex.global) {\r\n            regex.lastIndex = match ? r2.lastIndex : 0;\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Executes a provided function once per regex match.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The zero-based match index.\r\n *   <li>The string being traversed.\r\n *   <li>The regex object being used to traverse the string.\r\n * @param {*} [context] Object to use as `this` when executing `callback`.\r\n * @returns {*} Provided `context` object.\r\n * @example\r\n *\r\n * // Extracts every other digit from a string\r\n * XRegExp.forEach('1a2345', /\\d/, function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n    self.forEach = function (str, regex, callback, context) {\r\n        var pos = 0,\r\n            i = -1,\r\n            match;\r\n        while ((match = self.exec(str, regex, pos))) {\r\n            callback.call(context, match, ++i, str, regex);\r\n            pos = match.index + (match[0].length || 1);\r\n        }\r\n        return context;\r\n    };\r\n\r\n/**\r\n * Copies a regex object and adds flag `g`. The copy maintains special properties for named\r\n * capture, is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property\r\n * (set to zero). Native regexes are not recompiled using XRegExp syntax.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex to globalize.\r\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\r\n * @example\r\n *\r\n * var globalCopy = XRegExp.globalize(/regex/);\r\n * globalCopy.global; // -> true\r\n */\r\n    self.globalize = function (regex) {\r\n        return copy(regex, \"g\");\r\n    };\r\n\r\n/**\r\n * Installs optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.install({\r\n *   // Overrides native regex methods with fixed/extended versions that support named\r\n *   // backreferences and fix numerous cross-browser bugs\r\n *   natives: true,\r\n *\r\n *   // Enables extensibility of XRegExp syntax and flags\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.install('natives extensibility');\r\n *\r\n * // Using a shortcut to install all optional features\r\n * XRegExp.install('all');\r\n */\r\n    self.install = function (options) {\r\n        options = prepareOptions(options);\r\n        if (!features.natives && options.natives) {\r\n            setNatives(true);\r\n        }\r\n        if (!features.extensibility && options.extensibility) {\r\n            setExtensibility(true);\r\n        }\r\n    };\r\n\r\n/**\r\n * Checks whether an individual optional feature is installed.\r\n * @memberOf XRegExp\r\n * @param {String} feature Name of the feature to check. One of:\r\n *   <li>`natives`\r\n *   <li>`extensibility`\r\n * @returns {Boolean} Whether the feature is installed.\r\n * @example\r\n *\r\n * XRegExp.isInstalled('natives');\r\n */\r\n    self.isInstalled = function (feature) {\r\n        return !!(features[feature]);\r\n    };\r\n\r\n/**\r\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\r\n * created in another frame, when `instanceof` and `constructor` checks would fail.\r\n * @memberOf XRegExp\r\n * @param {*} value Object to check.\r\n * @returns {Boolean} Whether the object is a `RegExp` object.\r\n * @example\r\n *\r\n * XRegExp.isRegExp('string'); // -> false\r\n * XRegExp.isRegExp(/regex/i); // -> true\r\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\r\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\r\n */\r\n    self.isRegExp = function (value) {\r\n        return isType(value, \"regexp\");\r\n    };\r\n\r\n/**\r\n * Retrieves the matches from searching a string using a chain of regexes that successively search\r\n * within previous matches. The provided `chain` array can contain regexes and objects with `regex`\r\n * and `backref` properties. When a backreference is specified, the named or numbered backreference\r\n * is passed forward to the next regex or returned.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} chain Regexes that each search for matches within preceding results.\r\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage; matches numbers within <b> tags\r\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\r\n *   XRegExp('(?is)<b>.*?</b>'),\r\n *   /\\d+/\r\n * ]);\r\n * // -> ['2', '4', '56']\r\n *\r\n * // Passing forward and returning specific backreferences\r\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\r\n *         <a href=\"http://www.google.com/\">Google</a>';\r\n * XRegExp.matchChain(html, [\r\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\r\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\r\n * ]);\r\n * // -> ['xregexp.com', 'www.google.com']\r\n */\r\n    self.matchChain = function (str, chain) {\r\n        return (function recurseChain(values, level) {\r\n            var item = chain[level].regex ? chain[level] : {regex: chain[level]},\r\n                matches = [],\r\n                addMatch = function (match) {\r\n                    matches.push(item.backref ? (match[item.backref] || \"\") : match[0]);\r\n                },\r\n                i;\r\n            for (i = 0; i < values.length; ++i) {\r\n                self.forEach(values[i], item.regex, addMatch);\r\n            }\r\n            return ((level === chain.length - 1) || !matches.length) ?\r\n                    matches :\r\n                    recurseChain(matches, level + 1);\r\n        }([str], 0));\r\n    };\r\n\r\n/**\r\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\r\n * or regex, and the replacement can be a string or a function to be called for each match. To\r\n * perform a global search and replace, use the optional `scope` argument or include flag `g` if\r\n * using a regex. Replacement strings can use `${n}` for named and numbered backreferences.\r\n * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser\r\n * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n *   Replacement strings can include special replacement syntax:\r\n *     <li>$$ - Inserts a literal '$'.\r\n *     <li>$&, $0 - Inserts the matched substring.\r\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\r\n *     <li>$' - Inserts the string that follows the matched substring (right context).\r\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\r\n *       backreference n/nn.\r\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\r\n *       group, inserts backreference n.\r\n *   Replacement functions are invoked with three or more arguments:\r\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\r\n *       properties of this first argument.\r\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\r\n *     <li>The zero-based index of the match within the total search string.\r\n *     <li>The total string being searched.\r\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\r\n *   explicitly specified and using a regex with flag `g`, `scope` is 'all'.\r\n * @returns {String} New string with one or all matches replaced.\r\n * @example\r\n *\r\n * // Regex search, using named backreferences in replacement string\r\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\r\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\r\n * // -> 'Smith, John'\r\n *\r\n * // Regex search, using named backreferences in replacement function\r\n * XRegExp.replace('John Smith', name, function (match) {\r\n *   return match.last + ', ' + match.first;\r\n * });\r\n * // -> 'Smith, John'\r\n *\r\n * // Global string search/replacement\r\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\r\n * // -> 'XRegExp builds XRegExps'\r\n */\r\n    self.replace = function (str, search, replacement, scope) {\r\n        var isRegex = self.isRegExp(search),\r\n            search2 = search,\r\n            result;\r\n        if (isRegex) {\r\n            if (scope === undef && search.global) {\r\n                scope = \"all\"; // Follow flag g when `scope` isn't explicit\r\n            }\r\n            // Note that since a copy is used, `search`'s `lastIndex` isn't updated *during* replacement iterations\r\n            search2 = copy(search, scope === \"all\" ? \"g\" : \"\", scope === \"all\" ? \"\" : \"g\");\r\n        } else if (scope === \"all\") {\r\n            search2 = new RegExp(self.escape(String(search)), \"g\");\r\n        }\r\n        result = fixed.replace.call(String(str), search2, replacement); // Fixed `replace` required for named backreferences, etc.\r\n        if (isRegex && search.global) {\r\n            search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Splits a string into an array of strings using a regex or string separator. Matches of the\r\n * separator are not included in the result array. However, if `separator` is a regex that contains\r\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\r\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\r\n * cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to split.\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.split('a b c', ' ');\r\n * // -> ['a', 'b', 'c']\r\n *\r\n * // With limit\r\n * XRegExp.split('a b c', ' ', 2);\r\n * // -> ['a', 'b']\r\n *\r\n * // Backreferences in result array\r\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\r\n * // -> ['..', 'word', '1', '..']\r\n */\r\n    self.split = function (str, separator, limit) {\r\n        return fixed.split.call(str, separator, limit);\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\r\n * `sticky` arguments specify the search start position, and whether the match must start at the\r\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\r\n * updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.test` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.test('abc', /c/); // -> true\r\n *\r\n * // With pos and sticky\r\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\r\n */\r\n    self.test = function (str, regex, pos, sticky) {\r\n        // Do this the easy way :-)\r\n        return !!self.exec(str, regex, pos, sticky);\r\n    };\r\n\r\n/**\r\n * Uninstalls optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.uninstall({\r\n *   // Restores native regex methods\r\n *   natives: true,\r\n *\r\n *   // Disables additional syntax and flag extensions\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.uninstall('natives extensibility');\r\n *\r\n * // Using a shortcut to uninstall all optional features\r\n * XRegExp.uninstall('all');\r\n */\r\n    self.uninstall = function (options) {\r\n        options = prepareOptions(options);\r\n        if (features.natives && options.natives) {\r\n            setNatives(false);\r\n        }\r\n        if (features.extensibility && options.extensibility) {\r\n            setExtensibility(false);\r\n        }\r\n    };\r\n\r\n/**\r\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\r\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\r\n * Backreferences in provided regex objects are automatically renumbered to work correctly. Native\r\n * flags used by provided regexes are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {Array} patterns Regexes and strings to combine.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Union of the provided regexes and strings.\r\n * @example\r\n *\r\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\r\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\r\n *\r\n * XRegExp.union([XRegExp('(?<pet>dogs)\\\\k<pet>'), XRegExp('(?<pet>cats)\\\\k<pet>')]);\r\n * // -> XRegExp('(?<pet>dogs)\\\\k<pet>|(?<pet>cats)\\\\k<pet>')\r\n */\r\n    self.union = function (patterns, flags) {\r\n        var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n            numCaptures = 0,\r\n            numPriorCaptures,\r\n            captureNames,\r\n            rewrite = function (match, paren, backref) {\r\n                var name = captureNames[numCaptures - numPriorCaptures];\r\n                if (paren) { // Capturing group\r\n                    ++numCaptures;\r\n                    if (name) { // If the current capture has a name\r\n                        return \"(?<\" + name + \">\";\r\n                    }\r\n                } else if (backref) { // Backreference\r\n                    return \"\\\\\" + (+backref + numPriorCaptures);\r\n                }\r\n                return match;\r\n            },\r\n            output = [],\r\n            pattern,\r\n            i;\r\n        if (!(isType(patterns, \"array\") && patterns.length)) {\r\n            throw new TypeError(\"patterns must be a nonempty array\");\r\n        }\r\n        for (i = 0; i < patterns.length; ++i) {\r\n            pattern = patterns[i];\r\n            if (self.isRegExp(pattern)) {\r\n                numPriorCaptures = numCaptures;\r\n                captureNames = (pattern.xregexp && pattern.xregexp.captureNames) || [];\r\n                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns\r\n                // are independently valid; helps keep this simple. Named captures are put back\r\n                output.push(self(pattern.source).source.replace(parts, rewrite));\r\n            } else {\r\n                output.push(self.escape(pattern));\r\n            }\r\n        }\r\n        return self(output.join(\"|\"), flags);\r\n    };\r\n\r\n/**\r\n * The XRegExp version number.\r\n * @static\r\n * @memberOf XRegExp\r\n * @type String\r\n */\r\n    self.version = \"2.0.0\";\r\n\r\n/*--------------------------------------\r\n *  Fixed/extended native methods\r\n *------------------------------------*/\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method. Use via `XRegExp.exec` without overriding natives.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n */\r\n    fixed.exec = function (str) {\r\n        var match, name, r2, origLastIndex, i;\r\n        if (!this.global) {\r\n            origLastIndex = this.lastIndex;\r\n        }\r\n        match = nativ.exec.apply(this, arguments);\r\n        if (match) {\r\n            // Fix browsers whose `exec` methods don't consistently return `undefined` for\r\n            // nonparticipating capturing groups\r\n            if (!compliantExecNpcg && match.length > 1 && lastIndexOf(match, \"\") > -1) {\r\n                r2 = new RegExp(this.source, nativ.replace.call(getNativeFlags(this), \"g\", \"\"));\r\n                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\r\n                // matching due to characters outside the match\r\n                nativ.replace.call(String(str).slice(match.index), r2, function () {\r\n                    var i;\r\n                    for (i = 1; i < arguments.length - 2; ++i) {\r\n                        if (arguments[i] === undef) {\r\n                            match[i] = undef;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // Attach named capture properties\r\n            if (this.xregexp && this.xregexp.captureNames) {\r\n                for (i = 1; i < match.length; ++i) {\r\n                    name = this.xregexp.captureNames[i - 1];\r\n                    if (name) {\r\n                        match[name] = match[i];\r\n                    }\r\n                }\r\n            }\r\n            // Fix browsers that increment `lastIndex` after zero-length matches\r\n            if (this.global && !match[0].length && (this.lastIndex > match.index)) {\r\n                this.lastIndex = match.index;\r\n            }\r\n        }\r\n        if (!this.global) {\r\n            this.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n */\r\n    fixed.test = function (str) {\r\n        // Do this the easy way :-)\r\n        return !!fixed.exec.call(this, str);\r\n    };\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method.\r\n * @private\r\n * @param {RegExp} regex Regex to search with.\r\n * @returns {Array} If `regex` uses flag g, an array of match strings or null. Without flag g, the\r\n *   result of calling `regex.exec(this)`.\r\n */\r\n    fixed.match = function (regex) {\r\n        if (!self.isRegExp(regex)) {\r\n            regex = new RegExp(regex); // Use native `RegExp`\r\n        } else if (regex.global) {\r\n            var result = nativ.match.apply(this, arguments);\r\n            regex.lastIndex = 0; // Fixes IE bug\r\n            return result;\r\n        }\r\n        return fixed.exec.call(regex, this);\r\n    };\r\n\r\n/**\r\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\r\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes\r\n * browser bugs in replacement text syntax when performing a replacement using a nonregex search\r\n * value, and the value of a replacement regex's `lastIndex` property during replacement iterations\r\n * and upon completion. Note that this doesn't support SpiderMonkey's proprietary third (`flags`)\r\n * argument. Calling `XRegExp.install('natives')` uses this to override the native method. Use via\r\n * `XRegExp.replace` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n * @returns {String} New string with one or all matches replaced.\r\n */\r\n    fixed.replace = function (search, replacement) {\r\n        var isRegex = self.isRegExp(search), captureNames, result, str, origLastIndex;\r\n        if (isRegex) {\r\n            if (search.xregexp) {\r\n                captureNames = search.xregexp.captureNames;\r\n            }\r\n            if (!search.global) {\r\n                origLastIndex = search.lastIndex;\r\n            }\r\n        } else {\r\n            search += \"\";\r\n        }\r\n        if (isType(replacement, \"function\")) {\r\n            result = nativ.replace.call(String(this), search, function () {\r\n                var args = arguments, i;\r\n                if (captureNames) {\r\n                    // Change the `arguments[0]` string primitive to a `String` object that can store properties\r\n                    args[0] = new String(args[0]);\r\n                    // Store named backreferences on the first argument\r\n                    for (i = 0; i < captureNames.length; ++i) {\r\n                        if (captureNames[i]) {\r\n                            args[0][captureNames[i]] = args[i + 1];\r\n                        }\r\n                    }\r\n                }\r\n                // Update `lastIndex` before calling `replacement`.\r\n                // Fixes IE, Chrome, Firefox, Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\r\n                if (isRegex && search.global) {\r\n                    search.lastIndex = args[args.length - 2] + args[0].length;\r\n                }\r\n                return replacement.apply(null, args);\r\n            });\r\n        } else {\r\n            str = String(this); // Ensure `args[args.length - 1]` will be a string when given nonstring `this`\r\n            result = nativ.replace.call(str, search, function () {\r\n                var args = arguments; // Keep this function's `arguments` available through closure\r\n                return nativ.replace.call(String(replacement), replacementToken, function ($0, $1, $2) {\r\n                    var n;\r\n                    // Named or numbered backreference with curly brackets\r\n                    if ($1) {\r\n                        /* XRegExp behavior for `${n}`:\r\n                         * 1. Backreference to numbered capture, where `n` is 1+ digits. `0`, `00`, etc. is the entire match.\r\n                         * 2. Backreference to named capture `n`, if it exists and is not a number overridden by numbered capture.\r\n                         * 3. Otherwise, it's an error.\r\n                         */\r\n                        n = +$1; // Type-convert; drop leading zeros\r\n                        if (n <= args.length - 3) {\r\n                            return args[n] || \"\";\r\n                        }\r\n                        n = captureNames ? lastIndexOf(captureNames, $1) : -1;\r\n                        if (n < 0) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[n + 1] || \"\";\r\n                    }\r\n                    // Else, special variable or numbered backreference (without curly brackets)\r\n                    if ($2 === \"$\") return \"$\";\r\n                    if ($2 === \"&\" || +$2 === 0) return args[0]; // $&, $0 (not followed by 1-9), $00\r\n                    if ($2 === \"`\") return args[args.length - 1].slice(0, args[args.length - 2]);\r\n                    if ($2 === \"'\") return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\r\n                    // Else, numbered backreference (without curly brackets)\r\n                    $2 = +$2; // Type-convert; drop leading zero\r\n                    /* XRegExp behavior:\r\n                     * - Backreferences without curly brackets end after 1 or 2 digits. Use `${..}` for more digits.\r\n                     * - `$1` is an error if there are no capturing groups.\r\n                     * - `$10` is an error if there are less than 10 capturing groups. Use `${1}0` instead.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's an error.\r\n                     * - `$0` (not followed by 1-9), `$00`, and `$&` are the entire match.\r\n                     * Native behavior, for comparison:\r\n                     * - Backreferences end after 1 or 2 digits. Cannot use backreference to capturing group 100+.\r\n                     * - `$1` is a literal `$1` if there are no capturing groups.\r\n                     * - `$10` is `$1` followed by a literal `0` if there are less than 10 capturing groups.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's a literal `$01`.\r\n                     * - `$0` is a literal `$0`. `$&` is the entire match.\r\n                     */\r\n                    if (!isNaN($2)) {\r\n                        if ($2 > args.length - 3) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[$2] || \"\";\r\n                    }\r\n                    throw new SyntaxError(\"invalid token \" + $0);\r\n                });\r\n            });\r\n        }\r\n        if (isRegex) {\r\n            if (search.global) {\r\n                search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n            } else {\r\n                search.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n */\r\n    fixed.split = function (separator, limit) {\r\n        if (!self.isRegExp(separator)) {\r\n            return nativ.split.apply(this, arguments); // use faster native method\r\n        }\r\n        var str = String(this),\r\n            origLastIndex = separator.lastIndex,\r\n            output = [],\r\n            lastLastIndex = 0,\r\n            lastLength;\r\n        /* Values for `limit`, per the spec:\r\n         * If undefined: pow(2,32) - 1\r\n         * If 0, Infinity, or NaN: 0\r\n         * If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\r\n         * If negative number: pow(2,32) - floor(abs(limit))\r\n         * If other: Type-convert, then use the above rules\r\n         */\r\n        limit = (limit === undef ? -1 : limit) >>> 0;\r\n        self.forEach(str, separator, function (match) {\r\n            if ((match.index + match[0].length) > lastLastIndex) { // != `if (match[0].length)`\r\n                output.push(str.slice(lastLastIndex, match.index));\r\n                if (match.length > 1 && match.index < str.length) {\r\n                    Array.prototype.push.apply(output, match.slice(1));\r\n                }\r\n                lastLength = match[0].length;\r\n                lastLastIndex = match.index + lastLength;\r\n            }\r\n        });\r\n        if (lastLastIndex === str.length) {\r\n            if (!nativ.test.call(separator, \"\") || lastLength) {\r\n                output.push(\"\");\r\n            }\r\n        } else {\r\n            output.push(str.slice(lastLastIndex));\r\n        }\r\n        separator.lastIndex = origLastIndex;\r\n        return output.length > limit ? output.slice(0, limit) : output;\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Built-in tokens\r\n *------------------------------------*/\r\n\r\n// Shortcut\r\n    add = addToken.on;\r\n\r\n/* Letter identity escapes that natively match literal characters: \\p, \\P, etc.\r\n * Should be SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-\r\n * browser consistency and to reserve their syntax, but lets them be superseded by XRegExp addons.\r\n */\r\n    add(/\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4})|x(?![\\dA-Fa-f]{2}))/,\r\n        function (match, scope) {\r\n            // \\B is allowed in default scope only\r\n            if (match[1] === \"B\" && scope === defaultScope) {\r\n                return match[0];\r\n            }\r\n            throw new SyntaxError(\"invalid escape \" + match[0]);\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Empty character class: [] or [^]\r\n * Fixes a critical cross-browser syntax inconsistency. Unless this is standardized (per the spec),\r\n * regex syntax can't be accurately parsed because character class endings can't be determined.\r\n */\r\n    add(/\\[(\\^?)]/,\r\n        function (match) {\r\n            // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\r\n            // (?!) should work like \\b\\B, but is unreliable in Firefox\r\n            return match[1] ? \"[\\\\s\\\\S]\" : \"\\\\b\\\\B\";\r\n        });\r\n\r\n/* Comment pattern: (?# )\r\n * Inline comments are an alternative to the line comments allowed in free-spacing mode (flag x).\r\n */\r\n    add(/(?:\\(\\?#[^)]*\\))+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        });\r\n\r\n/* Named backreference: \\k<name>\r\n * Backreference names can use the characters A-Z, a-z, 0-9, _, and $ only.\r\n */\r\n    add(/\\\\k<([\\w$]+)>/,\r\n        function (match) {\r\n            var index = isNaN(match[1]) ? (lastIndexOf(this.captureNames, match[1]) + 1) : +match[1],\r\n                endIndex = match.index + match[0].length;\r\n            if (!index || index > this.captureNames.length) {\r\n                throw new SyntaxError(\"backreference to undefined group \" + match[0]);\r\n            }\r\n            // Keep backreferences separate from subsequent literal numbers\r\n            return \"\\\\\" + index + (\r\n                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ? \"\" : \"(?:)\"\r\n            );\r\n        });\r\n\r\n/* Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\r\n */\r\n    add(/(?:\\s+|#.*)+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"x\");\r\n            },\r\n            customFlags: \"x\"\r\n        });\r\n\r\n/* Dot, in dotall mode (aka singleline mode, flag s) only.\r\n */\r\n    add(/\\./,\r\n        function () {\r\n            return \"[\\\\s\\\\S]\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"s\");\r\n            },\r\n            customFlags: \"s\"\r\n        });\r\n\r\n/* Named capturing group; match the opening delimiter only: (?<name>\r\n * Capture names can use the characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers.\r\n * Supports Python-style (?P<name> as an alternate syntax to avoid issues in recent Opera (which\r\n * natively supports the Python-style syntax). Otherwise, XRegExp might treat numbered\r\n * backreferences to Python-style named capture as octals.\r\n */\r\n    add(/\\(\\?P?<([\\w$]+)>/,\r\n        function (match) {\r\n            if (!isNaN(match[1])) {\r\n                // Avoid incorrect lookups, since named backreferences are added to match arrays\r\n                throw new SyntaxError(\"can't use integer as capture name \" + match[0]);\r\n            }\r\n            this.captureNames.push(match[1]);\r\n            this.hasNamedCapture = true;\r\n            return \"(\";\r\n        });\r\n\r\n/* Numbered backreference or octal, plus any following digits: \\0, \\11, etc.\r\n * Octals except \\0 not followed by 0-9 and backreferences to unopened capture groups throw an\r\n * error. Other matches are returned unaltered. IE <= 8 doesn't support backreferences greater than\r\n * \\99 in regex syntax.\r\n */\r\n    add(/\\\\(\\d+)/,\r\n        function (match, scope) {\r\n            if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) &&\r\n                    match[1] !== \"0\") {\r\n                throw new SyntaxError(\"can't use octal escape or backreference to undefined group \" + match[0]);\r\n            }\r\n            return match[0];\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Capturing group; match the opening parenthesis only.\r\n * Required for support of named capturing groups. Also adds explicit capture mode (flag n).\r\n */\r\n    add(/\\((?!\\?)/,\r\n        function () {\r\n            if (this.hasFlag(\"n\")) {\r\n                return \"(?:\";\r\n            }\r\n            this.captureNames.push(null);\r\n            return \"(\";\r\n        },\r\n        {customFlags: \"n\"});\r\n\r\n/*--------------------------------------\r\n *  Expose XRegExp\r\n *------------------------------------*/\r\n\r\n// For CommonJS enviroments\r\n    if (typeof exports !== \"undefined\") {\r\n        exports.XRegExp = self;\r\n    }\r\n\r\n    return self;\r\n\r\n}());\r\n\r\n\n/***** unicode-base.js *****/\n\n/*!\r\n * XRegExp Unicode Base v1.0.0\r\n * (c) 2008-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for the `\\p{L}` or `\\p{Letter}` Unicode category. Addon packages for other Unicode\r\n * categories, scripts, blocks, and properties are available separately. All Unicode tokens can be\r\n * inverted using `\\P{..}` or `\\p{^..}`. Token names are case insensitive, and any spaces, hyphens,\r\n * and underscores are ignored.\r\n * @requires XRegExp\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var unicode = {};\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n// Generates a standardized token name (lowercase, with hyphens, spaces, and underscores removed)\r\n    function slug(name) {\r\n        return name.replace(/[- _]+/g, \"\").toLowerCase();\r\n    }\r\n\r\n// Expands a list of Unicode code points and ranges to be usable in a regex character class\r\n    function expand(str) {\r\n        return str.replace(/\\w{4}/g, \"\\\\u$&\");\r\n    }\r\n\r\n// Adds leading zeros if shorter than four characters\r\n    function pad4(str) {\r\n        while (str.length < 4) {\r\n            str = \"0\" + str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n// Converts a hexadecimal number to decimal\r\n    function dec(hex) {\r\n        return parseInt(hex, 16);\r\n    }\r\n\r\n// Converts a decimal number to hexadecimal\r\n    function hex(dec) {\r\n        return parseInt(dec, 10).toString(16);\r\n    }\r\n\r\n// Inverts a list of Unicode code points and ranges\r\n    function invert(range) {\r\n        var output = [],\r\n            lastEnd = -1,\r\n            start;\r\n        XRegExp.forEach(range, /\\\\u(\\w{4})(?:-\\\\u(\\w{4}))?/, function (m) {\r\n            start = dec(m[1]);\r\n            if (start > (lastEnd + 1)) {\r\n                output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n                if (start > (lastEnd + 2)) {\r\n                    output.push(\"-\\\\u\" + pad4(hex(start - 1)));\r\n                }\r\n            }\r\n            lastEnd = dec(m[2] || m[1]);\r\n        });\r\n        if (lastEnd < 0xFFFF) {\r\n            output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n            if (lastEnd < 0xFFFE) {\r\n                output.push(\"-\\\\uFFFF\");\r\n            }\r\n        }\r\n        return output.join(\"\");\r\n    }\r\n\r\n// Generates an inverted token on first use\r\n    function cacheInversion(item) {\r\n        return unicode[\"^\" + item] || (unicode[\"^\" + item] = invert(unicode[item]));\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Core functionality\r\n *------------------------------------*/\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n/**\r\n * Adds to the list of Unicode properties that XRegExp regexes can match via \\p{..} or \\P{..}.\r\n * @memberOf XRegExp\r\n * @param {Object} pack Named sets of Unicode code points and ranges.\r\n * @param {Object} [aliases] Aliases for the primary token names.\r\n * @example\r\n *\r\n * XRegExp.addUnicodePackage({\r\n *   XDigit: '0030-00390041-00460061-0066' // 0-9A-Fa-f\r\n * }, {\r\n *   XDigit: 'Hexadecimal'\r\n * });\r\n */\r\n    XRegExp.addUnicodePackage = function (pack, aliases) {\r\n        var p;\r\n        if (!XRegExp.isInstalled(\"extensibility\")) {\r\n            throw new Error(\"extensibility must be installed before adding Unicode packages\");\r\n        }\r\n        if (pack) {\r\n            for (p in pack) {\r\n                if (pack.hasOwnProperty(p)) {\r\n                    unicode[slug(p)] = expand(pack[p]);\r\n                }\r\n            }\r\n        }\r\n        if (aliases) {\r\n            for (p in aliases) {\r\n                if (aliases.hasOwnProperty(p)) {\r\n                    unicode[slug(aliases[p])] = unicode[slug(p)];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n/* Adds data for the Unicode `Letter` category. Addon packages include other categories, scripts,\r\n * blocks, and properties.\r\n */\r\n    XRegExp.addUnicodePackage({\r\n        L: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A008A2-08AC0904-0939093D09500958-09610971-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A697A6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\"\r\n    }, {\r\n        L: \"Letter\"\r\n    });\r\n\r\n/* Adds Unicode property syntax to XRegExp: \\p{..}, \\P{..}, \\p{^..}\r\n */\r\n    XRegExp.addToken(\r\n        /\\\\([pP]){(\\^?)([^}]*)}/,\r\n        function (match, scope) {\r\n            var inv = (match[1] === \"P\" || match[2]) ? \"^\" : \"\",\r\n                item = slug(match[3]);\r\n            // The double negative \\P{^..} is invalid\r\n            if (match[1] === \"P\" && match[2]) {\r\n                throw new SyntaxError(\"invalid double negation \\\\P{^\");\r\n            }\r\n            if (!unicode.hasOwnProperty(item)) {\r\n                throw new SyntaxError(\"invalid or unknown Unicode property \" + match[0]);\r\n            }\r\n            return scope === \"class\" ?\r\n                    (inv ? cacheInversion(item) : unicode[item]) :\r\n                    \"[\" + inv + unicode[item] + \"]\";\r\n        },\r\n        {scope: \"all\"}\r\n    );\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-categories.js *****/\n\n/*!\r\n * XRegExp Unicode Categories v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode categories (aka properties) E.g., `\\p{Lu}` or\r\n * `\\p{Uppercase Letter}`. Token names are case insensitive, and any spaces, hyphens, and\r\n * underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Categories\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        //L: \"\", // Included in the Unicode Base addon\r\n        Ll: \"0061-007A00B500DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02AF037103730377037B-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1D2B1D6B-1D771D79-1D9A1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF7210A210E210F2113212F21342139213C213D2146-2149214E21842C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7B2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76FA771-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        Lu: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F214521832C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lt: \"01C501C801CB01F21F88-1F8F1F98-1F9F1FA8-1FAF1FBC1FCC1FFC\",\r\n        Lm: \"02B0-02C102C6-02D102E0-02E402EC02EE0374037A0559064006E506E607F407F507FA081A0824082809710E460EC610FC17D718431AA71C78-1C7D1D2C-1D6A1D781D9B-1DBF2071207F2090-209C2C7C2C7D2D6F2E2F30053031-3035303B309D309E30FC-30FEA015A4F8-A4FDA60CA67FA717-A71FA770A788A7F8A7F9A9CFAA70AADDAAF3AAF4FF70FF9EFF9F\",\r\n        Lo: \"00AA00BA01BB01C0-01C3029405D0-05EA05F0-05F20620-063F0641-064A066E066F0671-06D306D506EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA0800-08150840-085808A008A2-08AC0904-0939093D09500958-09610972-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E450E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10D0-10FA10FD-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317DC1820-18421844-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C771CE9-1CEC1CEE-1CF11CF51CF62135-21382D30-2D672D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE3006303C3041-3096309F30A1-30FA30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A014A016-A48CA4D0-A4F7A500-A60BA610-A61FA62AA62BA66EA6A0-A6E5A7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2AA00-AA28AA40-AA42AA44-AA4BAA60-AA6FAA71-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADBAADCAAE0-AAEAAAF2AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF66-FF6FFF71-FF9DFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        M: \"0300-036F0483-04890591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0903093A-093C093E-094F0951-0957096209630981-098309BC09BE-09C409C709C809CB-09CD09D709E209E30A01-0A030A3C0A3E-0A420A470A480A4B-0A4D0A510A700A710A750A81-0A830ABC0ABE-0AC50AC7-0AC90ACB-0ACD0AE20AE30B01-0B030B3C0B3E-0B440B470B480B4B-0B4D0B560B570B620B630B820BBE-0BC20BC6-0BC80BCA-0BCD0BD70C01-0C030C3E-0C440C46-0C480C4A-0C4D0C550C560C620C630C820C830CBC0CBE-0CC40CC6-0CC80CCA-0CCD0CD50CD60CE20CE30D020D030D3E-0D440D46-0D480D4A-0D4D0D570D620D630D820D830DCA0DCF-0DD40DD60DD8-0DDF0DF20DF30E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F3E0F3F0F71-0F840F860F870F8D-0F970F99-0FBC0FC6102B-103E1056-1059105E-10601062-10641067-106D1071-10741082-108D108F109A-109D135D-135F1712-17141732-1734175217531772177317B4-17D317DD180B-180D18A91920-192B1930-193B19B0-19C019C819C91A17-1A1B1A55-1A5E1A60-1A7C1A7F1B00-1B041B34-1B441B6B-1B731B80-1B821BA1-1BAD1BE6-1BF31C24-1C371CD0-1CD21CD4-1CE81CED1CF2-1CF41DC0-1DE61DFC-1DFF20D0-20F02CEF-2CF12D7F2DE0-2DFF302A-302F3099309AA66F-A672A674-A67DA69FA6F0A6F1A802A806A80BA823-A827A880A881A8B4-A8C4A8E0-A8F1A926-A92DA947-A953A980-A983A9B3-A9C0AA29-AA36AA43AA4CAA4DAA7BAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAEB-AAEFAAF5AAF6ABE3-ABEAABECABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mn: \"0300-036F0483-04870591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0902093A093C0941-0948094D0951-095709620963098109BC09C1-09C409CD09E209E30A010A020A3C0A410A420A470A480A4B-0A4D0A510A700A710A750A810A820ABC0AC1-0AC50AC70AC80ACD0AE20AE30B010B3C0B3F0B41-0B440B4D0B560B620B630B820BC00BCD0C3E-0C400C46-0C480C4A-0C4D0C550C560C620C630CBC0CBF0CC60CCC0CCD0CE20CE30D41-0D440D4D0D620D630DCA0DD2-0DD40DD60E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F71-0F7E0F80-0F840F860F870F8D-0F970F99-0FBC0FC6102D-10301032-10371039103A103D103E10581059105E-10601071-1074108210851086108D109D135D-135F1712-17141732-1734175217531772177317B417B517B7-17BD17C617C9-17D317DD180B-180D18A91920-19221927192819321939-193B1A171A181A561A58-1A5E1A601A621A65-1A6C1A73-1A7C1A7F1B00-1B031B341B36-1B3A1B3C1B421B6B-1B731B801B811BA2-1BA51BA81BA91BAB1BE61BE81BE91BED1BEF-1BF11C2C-1C331C361C371CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF20D0-20DC20E120E5-20F02CEF-2CF12D7F2DE0-2DFF302A-302D3099309AA66FA674-A67DA69FA6F0A6F1A802A806A80BA825A826A8C4A8E0-A8F1A926-A92DA947-A951A980-A982A9B3A9B6-A9B9A9BCAA29-AA2EAA31AA32AA35AA36AA43AA4CAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAECAAEDAAF6ABE5ABE8ABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mc: \"0903093B093E-09400949-094C094E094F0982098309BE-09C009C709C809CB09CC09D70A030A3E-0A400A830ABE-0AC00AC90ACB0ACC0B020B030B3E0B400B470B480B4B0B4C0B570BBE0BBF0BC10BC20BC6-0BC80BCA-0BCC0BD70C01-0C030C41-0C440C820C830CBE0CC0-0CC40CC70CC80CCA0CCB0CD50CD60D020D030D3E-0D400D46-0D480D4A-0D4C0D570D820D830DCF-0DD10DD8-0DDF0DF20DF30F3E0F3F0F7F102B102C10311038103B103C105610571062-10641067-106D108310841087-108C108F109A-109C17B617BE-17C517C717C81923-19261929-192B193019311933-193819B0-19C019C819C91A19-1A1B1A551A571A611A631A641A6D-1A721B041B351B3B1B3D-1B411B431B441B821BA11BA61BA71BAA1BAC1BAD1BE71BEA-1BEC1BEE1BF21BF31C24-1C2B1C341C351CE11CF21CF3302E302FA823A824A827A880A881A8B4-A8C3A952A953A983A9B4A9B5A9BAA9BBA9BD-A9C0AA2FAA30AA33AA34AA4DAA7BAAEBAAEEAAEFAAF5ABE3ABE4ABE6ABE7ABE9ABEAABEC\",\r\n        Me: \"0488048920DD-20E020E2-20E4A670-A672\",\r\n        N: \"0030-003900B200B300B900BC-00BE0660-066906F0-06F907C0-07C90966-096F09E6-09EF09F4-09F90A66-0A6F0AE6-0AEF0B66-0B6F0B72-0B770BE6-0BF20C66-0C6F0C78-0C7E0CE6-0CEF0D66-0D750E50-0E590ED0-0ED90F20-0F331040-10491090-10991369-137C16EE-16F017E0-17E917F0-17F91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C5920702074-20792080-20892150-21822185-21892460-249B24EA-24FF2776-27932CFD30073021-30293038-303A3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA620-A629A6E6-A6EFA830-A835A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nd: \"0030-00390660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nl: \"16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF\",\r\n        No: \"00B200B300B900BC-00BE09F4-09F90B72-0B770BF0-0BF20C78-0C7E0D70-0D750F2A-0F331369-137C17F0-17F919DA20702074-20792080-20892150-215F21892460-249B24EA-24FF2776-27932CFD3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA830-A835\",\r\n        P: \"0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100A700AB00B600B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F3A-0F3D0F850FD0-0FD40FD90FDA104A-104F10FB1360-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2D702E00-2E2E2E30-2E3B3001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65\",\r\n        Pd: \"002D058A05BE140018062010-20152E172E1A2E3A2E3B301C303030A0FE31FE32FE58FE63FF0D\",\r\n        Ps: \"0028005B007B0F3A0F3C169B201A201E2045207D208D23292768276A276C276E27702772277427C527E627E827EA27EC27EE2983298529872989298B298D298F299129932995299729D829DA29FC2E222E242E262E283008300A300C300E3010301430163018301A301DFD3EFE17FE35FE37FE39FE3BFE3DFE3FFE41FE43FE47FE59FE5BFE5DFF08FF3BFF5BFF5FFF62\",\r\n        Pe: \"0029005D007D0F3B0F3D169C2046207E208E232A2769276B276D276F27712773277527C627E727E927EB27ED27EF298429862988298A298C298E2990299229942996299829D929DB29FD2E232E252E272E293009300B300D300F3011301530173019301B301E301FFD3FFE18FE36FE38FE3AFE3CFE3EFE40FE42FE44FE48FE5AFE5CFE5EFF09FF3DFF5DFF60FF63\",\r\n        Pi: \"00AB2018201B201C201F20392E022E042E092E0C2E1C2E20\",\r\n        Pf: \"00BB2019201D203A2E032E052E0A2E0D2E1D2E21\",\r\n        Pc: \"005F203F20402054FE33FE34FE4D-FE4FFF3F\",\r\n        Po: \"0021-00230025-0027002A002C002E002F003A003B003F0040005C00A100A700B600B700BF037E0387055A-055F058905C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F850FD0-0FD40FD90FDA104A-104F10FB1360-1368166D166E16EB-16ED1735173617D4-17D617D8-17DA1800-18051807-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD3201620172020-20272030-2038203B-203E2041-20432047-205120532055-205E2CF9-2CFC2CFE2CFF2D702E002E012E06-2E082E0B2E0E-2E162E182E192E1B2E1E2E1F2E2A-2E2E2E30-2E393001-3003303D30FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFE10-FE16FE19FE30FE45FE46FE49-FE4CFE50-FE52FE54-FE57FE5F-FE61FE68FE6AFE6BFF01-FF03FF05-FF07FF0AFF0CFF0EFF0FFF1AFF1BFF1FFF20FF3CFF61FF64FF65\",\r\n        S: \"0024002B003C-003E005E0060007C007E00A2-00A600A800A900AC00AE-00B100B400B800D700F702C2-02C502D2-02DF02E5-02EB02ED02EF-02FF03750384038503F60482058F0606-0608060B060E060F06DE06E906FD06FE07F609F209F309FA09FB0AF10B700BF3-0BFA0C7F0D790E3F0F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-139917DB194019DE-19FF1B61-1B6A1B74-1B7C1FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE20442052207A-207C208A-208C20A0-20B9210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B2140-2144214A-214D214F2190-2328232B-23F32400-24262440-244A249C-24E92500-26FF2701-27672794-27C427C7-27E527F0-29822999-29D729DC-29FB29FE-2B4C2B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F309B309C319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A700-A716A720A721A789A78AA828-A82BA836-A839AA77-AA79FB29FBB2-FBC1FDFCFDFDFE62FE64-FE66FE69FF04FF0BFF1C-FF1EFF3EFF40FF5CFF5EFFE0-FFE6FFE8-FFEEFFFCFFFD\",\r\n        Sm: \"002B003C-003E007C007E00AC00B100D700F703F60606-060820442052207A-207C208A-208C21182140-2144214B2190-2194219A219B21A021A321A621AE21CE21CF21D221D421F4-22FF2308-230B23202321237C239B-23B323DC-23E125B725C125F8-25FF266F27C0-27C427C7-27E527F0-27FF2900-29822999-29D729DC-29FB29FE-2AFF2B30-2B442B47-2B4CFB29FE62FE64-FE66FF0BFF1C-FF1EFF5CFF5EFFE2FFE9-FFEC\",\r\n        Sc: \"002400A2-00A5058F060B09F209F309FB0AF10BF90E3F17DB20A0-20B9A838FDFCFE69FF04FFE0FFE1FFE5FFE6\",\r\n        Sk: \"005E006000A800AF00B400B802C2-02C502D2-02DF02E5-02EB02ED02EF-02FF0375038403851FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE309B309CA700-A716A720A721A789A78AFBB2-FBC1FF3EFF40FFE3\",\r\n        So: \"00A600A900AE00B00482060E060F06DE06E906FD06FE07F609FA0B700BF3-0BF80BFA0C7F0D790F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-1399194019DE-19FF1B61-1B6A1B74-1B7C210021012103-210621082109211421162117211E-2123212521272129212E213A213B214A214C214D214F2195-2199219C-219F21A121A221A421A521A7-21AD21AF-21CD21D021D121D321D5-21F32300-2307230C-231F2322-2328232B-237B237D-239A23B4-23DB23E2-23F32400-24262440-244A249C-24E92500-25B625B8-25C025C2-25F72600-266E2670-26FF2701-27672794-27BF2800-28FF2B00-2B2F2B452B462B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A828-A82BA836A837A839AA77-AA79FDFDFFE4FFE8FFEDFFEEFFFCFFFD\",\r\n        Z: \"002000A01680180E2000-200A20282029202F205F3000\",\r\n        Zs: \"002000A01680180E2000-200A202F205F3000\",\r\n        Zl: \"2028\",\r\n        Zp: \"2029\",\r\n        C: \"0000-001F007F-009F00AD03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-0605061C061D06DD070E070F074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF200B-200F202A-202E2060-206F20722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-F8FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFD-FF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFFBFFFEFFFF\",\r\n        Cc: \"0000-001F007F-009F\",\r\n        Cf: \"00AD0600-060406DD070F200B-200F202A-202E2060-2064206A-206FFEFFFFF9-FFFB\",\r\n        Co: \"E000-F8FF\",\r\n        Cs: \"D800-DFFF\",\r\n        Cn: \"03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-05FF0605061C061D070E074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF2065-206920722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-D7FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFDFEFEFF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFF8FFFEFFFF\"\r\n    }, {\r\n        //L: \"Letter\", // Included in the Unicode Base addon\r\n        Ll: \"Lowercase_Letter\",\r\n        Lu: \"Uppercase_Letter\",\r\n        Lt: \"Titlecase_Letter\",\r\n        Lm: \"Modifier_Letter\",\r\n        Lo: \"Other_Letter\",\r\n        M: \"Mark\",\r\n        Mn: \"Nonspacing_Mark\",\r\n        Mc: \"Spacing_Mark\",\r\n        Me: \"Enclosing_Mark\",\r\n        N: \"Number\",\r\n        Nd: \"Decimal_Number\",\r\n        Nl: \"Letter_Number\",\r\n        No: \"Other_Number\",\r\n        P: \"Punctuation\",\r\n        Pd: \"Dash_Punctuation\",\r\n        Ps: \"Open_Punctuation\",\r\n        Pe: \"Close_Punctuation\",\r\n        Pi: \"Initial_Punctuation\",\r\n        Pf: \"Final_Punctuation\",\r\n        Pc: \"Connector_Punctuation\",\r\n        Po: \"Other_Punctuation\",\r\n        S: \"Symbol\",\r\n        Sm: \"Math_Symbol\",\r\n        Sc: \"Currency_Symbol\",\r\n        Sk: \"Modifier_Symbol\",\r\n        So: \"Other_Symbol\",\r\n        Z: \"Separator\",\r\n        Zs: \"Space_Separator\",\r\n        Zl: \"Line_Separator\",\r\n        Zp: \"Paragraph_Separator\",\r\n        C: \"Other\",\r\n        Cc: \"Control\",\r\n        Cf: \"Format\",\r\n        Co: \"Private_Use\",\r\n        Cs: \"Surrogate\",\r\n        Cn: \"Unassigned\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-scripts.js *****/\n\n/*!\r\n * XRegExp Unicode Scripts v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode scripts in the Basic Multilingual Plane (U+0000-U+FFFF).\r\n * E.g., `\\p{Latin}`. Token names are case insensitive, and any spaces, hyphens, and underscores\r\n * are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Scripts\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Arabic: \"0600-06040606-060B060D-061A061E0620-063F0641-064A0656-065E066A-066F0671-06DC06DE-06FF0750-077F08A008A2-08AC08E4-08FEFB50-FBC1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFCFE70-FE74FE76-FEFC\",\r\n        Armenian: \"0531-05560559-055F0561-0587058A058FFB13-FB17\",\r\n        Balinese: \"1B00-1B4B1B50-1B7C\",\r\n        Bamum: \"A6A0-A6F7\",\r\n        Batak: \"1BC0-1BF31BFC-1BFF\",\r\n        Bengali: \"0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB\",\r\n        Bopomofo: \"02EA02EB3105-312D31A0-31BA\",\r\n        Braille: \"2800-28FF\",\r\n        Buginese: \"1A00-1A1B1A1E1A1F\",\r\n        Buhid: \"1740-1753\",\r\n        Canadian_Aboriginal: \"1400-167F18B0-18F5\",\r\n        Cham: \"AA00-AA36AA40-AA4DAA50-AA59AA5C-AA5F\",\r\n        Cherokee: \"13A0-13F4\",\r\n        Common: \"0000-0040005B-0060007B-00A900AB-00B900BB-00BF00D700F702B9-02DF02E5-02E902EC-02FF0374037E038503870589060C061B061F06400660-066906DD096409650E3F0FD5-0FD810FB16EB-16ED173517361802180318051CD31CE11CE9-1CEC1CEE-1CF31CF51CF62000-200B200E-2064206A-20702074-207E2080-208E20A0-20B92100-21252127-2129212C-21312133-214D214F-215F21892190-23F32400-24262440-244A2460-26FF2701-27FF2900-2B4C2B50-2B592E00-2E3B2FF0-2FFB3000-300430063008-30203030-3037303C-303F309B309C30A030FB30FC3190-319F31C0-31E33220-325F327F-32CF3358-33FF4DC0-4DFFA700-A721A788-A78AA830-A839FD3EFD3FFDFDFE10-FE19FE30-FE52FE54-FE66FE68-FE6BFEFFFF01-FF20FF3B-FF40FF5B-FF65FF70FF9EFF9FFFE0-FFE6FFE8-FFEEFFF9-FFFD\",\r\n        Coptic: \"03E2-03EF2C80-2CF32CF9-2CFF\",\r\n        Cyrillic: \"0400-04840487-05271D2B1D782DE0-2DFFA640-A697A69F\",\r\n        Devanagari: \"0900-09500953-09630966-09770979-097FA8E0-A8FB\",\r\n        Ethiopic: \"1200-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-13992D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDEAB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2E\",\r\n        Georgian: \"10A0-10C510C710CD10D0-10FA10FC-10FF2D00-2D252D272D2D\",\r\n        Glagolitic: \"2C00-2C2E2C30-2C5E\",\r\n        Greek: \"0370-03730375-0377037A-037D038403860388-038A038C038E-03A103A3-03E103F0-03FF1D26-1D2A1D5D-1D611D66-1D6A1DBF1F00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2126\",\r\n        Gujarati: \"0A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF1\",\r\n        Gurmukhi: \"0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A75\",\r\n        Han: \"2E80-2E992E9B-2EF32F00-2FD5300530073021-30293038-303B3400-4DB54E00-9FCCF900-FA6DFA70-FAD9\",\r\n        Hangul: \"1100-11FF302E302F3131-318E3200-321E3260-327EA960-A97CAC00-D7A3D7B0-D7C6D7CB-D7FBFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Hanunoo: \"1720-1734\",\r\n        Hebrew: \"0591-05C705D0-05EA05F0-05F4FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FB4F\",\r\n        Hiragana: \"3041-3096309D-309F\",\r\n        Inherited: \"0300-036F04850486064B-0655065F0670095109521CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF200C200D20D0-20F0302A-302D3099309AFE00-FE0FFE20-FE26\",\r\n        Javanese: \"A980-A9CDA9CF-A9D9A9DEA9DF\",\r\n        Kannada: \"0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF2\",\r\n        Katakana: \"30A1-30FA30FD-30FF31F0-31FF32D0-32FE3300-3357FF66-FF6FFF71-FF9D\",\r\n        Kayah_Li: \"A900-A92F\",\r\n        Khmer: \"1780-17DD17E0-17E917F0-17F919E0-19FF\",\r\n        Lao: \"0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF\",\r\n        Latin: \"0041-005A0061-007A00AA00BA00C0-00D600D8-00F600F8-02B802E0-02E41D00-1D251D2C-1D5C1D62-1D651D6B-1D771D79-1DBE1E00-1EFF2071207F2090-209C212A212B2132214E2160-21882C60-2C7FA722-A787A78B-A78EA790-A793A7A0-A7AAA7F8-A7FFFB00-FB06FF21-FF3AFF41-FF5A\",\r\n        Lepcha: \"1C00-1C371C3B-1C491C4D-1C4F\",\r\n        Limbu: \"1900-191C1920-192B1930-193B19401944-194F\",\r\n        Lisu: \"A4D0-A4FF\",\r\n        Malayalam: \"0D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F\",\r\n        Mandaic: \"0840-085B085E\",\r\n        Meetei_Mayek: \"AAE0-AAF6ABC0-ABEDABF0-ABF9\",\r\n        Mongolian: \"1800180118041806-180E1810-18191820-18771880-18AA\",\r\n        Myanmar: \"1000-109FAA60-AA7B\",\r\n        New_Tai_Lue: \"1980-19AB19B0-19C919D0-19DA19DE19DF\",\r\n        Nko: \"07C0-07FA\",\r\n        Ogham: \"1680-169C\",\r\n        Ol_Chiki: \"1C50-1C7F\",\r\n        Oriya: \"0B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B77\",\r\n        Phags_Pa: \"A840-A877\",\r\n        Rejang: \"A930-A953A95F\",\r\n        Runic: \"16A0-16EA16EE-16F0\",\r\n        Samaritan: \"0800-082D0830-083E\",\r\n        Saurashtra: \"A880-A8C4A8CE-A8D9\",\r\n        Sinhala: \"0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF4\",\r\n        Sundanese: \"1B80-1BBF1CC0-1CC7\",\r\n        Syloti_Nagri: \"A800-A82B\",\r\n        Syriac: \"0700-070D070F-074A074D-074F\",\r\n        Tagalog: \"1700-170C170E-1714\",\r\n        Tagbanwa: \"1760-176C176E-177017721773\",\r\n        Tai_Le: \"1950-196D1970-1974\",\r\n        Tai_Tham: \"1A20-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD\",\r\n        Tai_Viet: \"AA80-AAC2AADB-AADF\",\r\n        Tamil: \"0B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA\",\r\n        Telugu: \"0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F\",\r\n        Thaana: \"0780-07B1\",\r\n        Thai: \"0E01-0E3A0E40-0E5B\",\r\n        Tibetan: \"0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FD40FD90FDA\",\r\n        Tifinagh: \"2D30-2D672D6F2D702D7F\",\r\n        Vai: \"A500-A62B\",\r\n        Yi: \"A000-A48CA490-A4C6\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-blocks.js *****/\n\n/*!\r\n * XRegExp Unicode Blocks v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode blocks in the Basic Multilingual Plane (U+0000-U+FFFF). Unicode\r\n * blocks use the prefix \"In\". E.g., `\\p{InBasicLatin}`. Token names are case insensitive, and any\r\n * spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Blocks\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        InBasic_Latin: \"0000-007F\",\r\n        InLatin_1_Supplement: \"0080-00FF\",\r\n        InLatin_Extended_A: \"0100-017F\",\r\n        InLatin_Extended_B: \"0180-024F\",\r\n        InIPA_Extensions: \"0250-02AF\",\r\n        InSpacing_Modifier_Letters: \"02B0-02FF\",\r\n        InCombining_Diacritical_Marks: \"0300-036F\",\r\n        InGreek_and_Coptic: \"0370-03FF\",\r\n        InCyrillic: \"0400-04FF\",\r\n        InCyrillic_Supplement: \"0500-052F\",\r\n        InArmenian: \"0530-058F\",\r\n        InHebrew: \"0590-05FF\",\r\n        InArabic: \"0600-06FF\",\r\n        InSyriac: \"0700-074F\",\r\n        InArabic_Supplement: \"0750-077F\",\r\n        InThaana: \"0780-07BF\",\r\n        InNKo: \"07C0-07FF\",\r\n        InSamaritan: \"0800-083F\",\r\n        InMandaic: \"0840-085F\",\r\n        InArabic_Extended_A: \"08A0-08FF\",\r\n        InDevanagari: \"0900-097F\",\r\n        InBengali: \"0980-09FF\",\r\n        InGurmukhi: \"0A00-0A7F\",\r\n        InGujarati: \"0A80-0AFF\",\r\n        InOriya: \"0B00-0B7F\",\r\n        InTamil: \"0B80-0BFF\",\r\n        InTelugu: \"0C00-0C7F\",\r\n        InKannada: \"0C80-0CFF\",\r\n        InMalayalam: \"0D00-0D7F\",\r\n        InSinhala: \"0D80-0DFF\",\r\n        InThai: \"0E00-0E7F\",\r\n        InLao: \"0E80-0EFF\",\r\n        InTibetan: \"0F00-0FFF\",\r\n        InMyanmar: \"1000-109F\",\r\n        InGeorgian: \"10A0-10FF\",\r\n        InHangul_Jamo: \"1100-11FF\",\r\n        InEthiopic: \"1200-137F\",\r\n        InEthiopic_Supplement: \"1380-139F\",\r\n        InCherokee: \"13A0-13FF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics: \"1400-167F\",\r\n        InOgham: \"1680-169F\",\r\n        InRunic: \"16A0-16FF\",\r\n        InTagalog: \"1700-171F\",\r\n        InHanunoo: \"1720-173F\",\r\n        InBuhid: \"1740-175F\",\r\n        InTagbanwa: \"1760-177F\",\r\n        InKhmer: \"1780-17FF\",\r\n        InMongolian: \"1800-18AF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics_Extended: \"18B0-18FF\",\r\n        InLimbu: \"1900-194F\",\r\n        InTai_Le: \"1950-197F\",\r\n        InNew_Tai_Lue: \"1980-19DF\",\r\n        InKhmer_Symbols: \"19E0-19FF\",\r\n        InBuginese: \"1A00-1A1F\",\r\n        InTai_Tham: \"1A20-1AAF\",\r\n        InBalinese: \"1B00-1B7F\",\r\n        InSundanese: \"1B80-1BBF\",\r\n        InBatak: \"1BC0-1BFF\",\r\n        InLepcha: \"1C00-1C4F\",\r\n        InOl_Chiki: \"1C50-1C7F\",\r\n        InSundanese_Supplement: \"1CC0-1CCF\",\r\n        InVedic_Extensions: \"1CD0-1CFF\",\r\n        InPhonetic_Extensions: \"1D00-1D7F\",\r\n        InPhonetic_Extensions_Supplement: \"1D80-1DBF\",\r\n        InCombining_Diacritical_Marks_Supplement: \"1DC0-1DFF\",\r\n        InLatin_Extended_Additional: \"1E00-1EFF\",\r\n        InGreek_Extended: \"1F00-1FFF\",\r\n        InGeneral_Punctuation: \"2000-206F\",\r\n        InSuperscripts_and_Subscripts: \"2070-209F\",\r\n        InCurrency_Symbols: \"20A0-20CF\",\r\n        InCombining_Diacritical_Marks_for_Symbols: \"20D0-20FF\",\r\n        InLetterlike_Symbols: \"2100-214F\",\r\n        InNumber_Forms: \"2150-218F\",\r\n        InArrows: \"2190-21FF\",\r\n        InMathematical_Operators: \"2200-22FF\",\r\n        InMiscellaneous_Technical: \"2300-23FF\",\r\n        InControl_Pictures: \"2400-243F\",\r\n        InOptical_Character_Recognition: \"2440-245F\",\r\n        InEnclosed_Alphanumerics: \"2460-24FF\",\r\n        InBox_Drawing: \"2500-257F\",\r\n        InBlock_Elements: \"2580-259F\",\r\n        InGeometric_Shapes: \"25A0-25FF\",\r\n        InMiscellaneous_Symbols: \"2600-26FF\",\r\n        InDingbats: \"2700-27BF\",\r\n        InMiscellaneous_Mathematical_Symbols_A: \"27C0-27EF\",\r\n        InSupplemental_Arrows_A: \"27F0-27FF\",\r\n        InBraille_Patterns: \"2800-28FF\",\r\n        InSupplemental_Arrows_B: \"2900-297F\",\r\n        InMiscellaneous_Mathematical_Symbols_B: \"2980-29FF\",\r\n        InSupplemental_Mathematical_Operators: \"2A00-2AFF\",\r\n        InMiscellaneous_Symbols_and_Arrows: \"2B00-2BFF\",\r\n        InGlagolitic: \"2C00-2C5F\",\r\n        InLatin_Extended_C: \"2C60-2C7F\",\r\n        InCoptic: \"2C80-2CFF\",\r\n        InGeorgian_Supplement: \"2D00-2D2F\",\r\n        InTifinagh: \"2D30-2D7F\",\r\n        InEthiopic_Extended: \"2D80-2DDF\",\r\n        InCyrillic_Extended_A: \"2DE0-2DFF\",\r\n        InSupplemental_Punctuation: \"2E00-2E7F\",\r\n        InCJK_Radicals_Supplement: \"2E80-2EFF\",\r\n        InKangxi_Radicals: \"2F00-2FDF\",\r\n        InIdeographic_Description_Characters: \"2FF0-2FFF\",\r\n        InCJK_Symbols_and_Punctuation: \"3000-303F\",\r\n        InHiragana: \"3040-309F\",\r\n        InKatakana: \"30A0-30FF\",\r\n        InBopomofo: \"3100-312F\",\r\n        InHangul_Compatibility_Jamo: \"3130-318F\",\r\n        InKanbun: \"3190-319F\",\r\n        InBopomofo_Extended: \"31A0-31BF\",\r\n        InCJK_Strokes: \"31C0-31EF\",\r\n        InKatakana_Phonetic_Extensions: \"31F0-31FF\",\r\n        InEnclosed_CJK_Letters_and_Months: \"3200-32FF\",\r\n        InCJK_Compatibility: \"3300-33FF\",\r\n        InCJK_Unified_Ideographs_Extension_A: \"3400-4DBF\",\r\n        InYijing_Hexagram_Symbols: \"4DC0-4DFF\",\r\n        InCJK_Unified_Ideographs: \"4E00-9FFF\",\r\n        InYi_Syllables: \"A000-A48F\",\r\n        InYi_Radicals: \"A490-A4CF\",\r\n        InLisu: \"A4D0-A4FF\",\r\n        InVai: \"A500-A63F\",\r\n        InCyrillic_Extended_B: \"A640-A69F\",\r\n        InBamum: \"A6A0-A6FF\",\r\n        InModifier_Tone_Letters: \"A700-A71F\",\r\n        InLatin_Extended_D: \"A720-A7FF\",\r\n        InSyloti_Nagri: \"A800-A82F\",\r\n        InCommon_Indic_Number_Forms: \"A830-A83F\",\r\n        InPhags_pa: \"A840-A87F\",\r\n        InSaurashtra: \"A880-A8DF\",\r\n        InDevanagari_Extended: \"A8E0-A8FF\",\r\n        InKayah_Li: \"A900-A92F\",\r\n        InRejang: \"A930-A95F\",\r\n        InHangul_Jamo_Extended_A: \"A960-A97F\",\r\n        InJavanese: \"A980-A9DF\",\r\n        InCham: \"AA00-AA5F\",\r\n        InMyanmar_Extended_A: \"AA60-AA7F\",\r\n        InTai_Viet: \"AA80-AADF\",\r\n        InMeetei_Mayek_Extensions: \"AAE0-AAFF\",\r\n        InEthiopic_Extended_A: \"AB00-AB2F\",\r\n        InMeetei_Mayek: \"ABC0-ABFF\",\r\n        InHangul_Syllables: \"AC00-D7AF\",\r\n        InHangul_Jamo_Extended_B: \"D7B0-D7FF\",\r\n        InHigh_Surrogates: \"D800-DB7F\",\r\n        InHigh_Private_Use_Surrogates: \"DB80-DBFF\",\r\n        InLow_Surrogates: \"DC00-DFFF\",\r\n        InPrivate_Use_Area: \"E000-F8FF\",\r\n        InCJK_Compatibility_Ideographs: \"F900-FAFF\",\r\n        InAlphabetic_Presentation_Forms: \"FB00-FB4F\",\r\n        InArabic_Presentation_Forms_A: \"FB50-FDFF\",\r\n        InVariation_Selectors: \"FE00-FE0F\",\r\n        InVertical_Forms: \"FE10-FE1F\",\r\n        InCombining_Half_Marks: \"FE20-FE2F\",\r\n        InCJK_Compatibility_Forms: \"FE30-FE4F\",\r\n        InSmall_Form_Variants: \"FE50-FE6F\",\r\n        InArabic_Presentation_Forms_B: \"FE70-FEFF\",\r\n        InHalfwidth_and_Fullwidth_Forms: \"FF00-FFEF\",\r\n        InSpecials: \"FFF0-FFFF\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-properties.js *****/\n\n/*!\r\n * XRegExp Unicode Properties v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds Unicode properties necessary to meet Level 1 Unicode support (detailed in UTS#18 RL1.2).\r\n * Includes code points from the Basic Multilingual Plane (U+0000-U+FFFF) only. Token names are\r\n * case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Properties\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Alphabetic: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE03450370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705B0-05BD05BF05C105C205C405C505C705D0-05EA05F0-05F20610-061A0620-06570659-065F066E-06D306D5-06DC06E1-06E806ED-06EF06FA-06FC06FF0710-073F074D-07B107CA-07EA07F407F507FA0800-0817081A-082C0840-085808A008A2-08AC08E4-08E908F0-08FE0900-093B093D-094C094E-09500955-09630971-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BD-09C409C709C809CB09CC09CE09D709DC09DD09DF-09E309F009F10A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3E-0A420A470A480A4B0A4C0A510A59-0A5C0A5E0A70-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD-0AC50AC7-0AC90ACB0ACC0AD00AE0-0AE30B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D-0B440B470B480B4B0B4C0B560B570B5C0B5D0B5F-0B630B710B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCC0BD00BD70C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4C0C550C560C580C590C60-0C630C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD-0CC40CC6-0CC80CCA-0CCC0CD50CD60CDE0CE0-0CE30CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4C0D4E0D570D60-0D630D7A-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCF-0DD40DD60DD8-0DDF0DF20DF30E01-0E3A0E40-0E460E4D0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60ECD0EDC-0EDF0F000F40-0F470F49-0F6C0F71-0F810F88-0F970F99-0FBC1000-10361038103B-103F1050-10621065-1068106E-1086108E109C109D10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135F1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16EE-16F01700-170C170E-17131720-17331740-17531760-176C176E-1770177217731780-17B317B6-17C817D717DC1820-18771880-18AA18B0-18F51900-191C1920-192B1930-19381950-196D1970-19741980-19AB19B0-19C91A00-1A1B1A20-1A5E1A61-1A741AA71B00-1B331B35-1B431B45-1B4B1B80-1BA91BAC-1BAF1BBA-1BE51BE7-1BF11C00-1C351C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF31CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E2160-218824B6-24E92C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2DFF2E2F3005-30073021-30293031-30353038-303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA674-A67BA67F-A697A69F-A6EFA717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A827A840-A873A880-A8C3A8F2-A8F7A8FBA90A-A92AA930-A952A960-A97CA980-A9B2A9B4-A9BFA9CFAA00-AA36AA40-AA4DAA60-AA76AA7AAA80-AABEAAC0AAC2AADB-AADDAAE0-AAEFAAF2-AAF5AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEAAC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Uppercase: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F21452160-216F218324B6-24CF2C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lowercase: \"0061-007A00AA00B500BA00DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02B802C002C102E0-02E40345037103730377037A-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1DBF1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF72071207F2090-209C210A210E210F2113212F21342139213C213D2146-2149214E2170-217F218424D0-24E92C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7D2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76F-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7F8-A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        White_Space: \"0009-000D0020008500A01680180E2000-200A20282029202F205F3000\",\r\n        Noncharacter_Code_Point: \"FDD0-FDEFFFFEFFFF\",\r\n        Default_Ignorable_Code_Point: \"00AD034F115F116017B417B5180B-180D200B-200F202A-202E2060-206F3164FE00-FE0FFEFFFFA0FFF0-FFF8\",\r\n        // \\p{Any} matches a code unit. To match any code point via surrogate pairs, use (?:[\\0-\\uD7FF\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])\r\n        Any: \"0000-FFFF\", // \\p{^Any} compiles to [^\\u0000-\\uFFFF]; [\\p{^Any}] to []\r\n        Ascii: \"0000-007F\",\r\n        // \\p{Assigned} is equivalent to \\p{^Cn}\r\n        //Assigned: XRegExp(\"[\\\\p{^Cn}]\").source.replace(/[[\\]]|\\\\u/g, \"\") // Negation inside a character class triggers inversion\r\n        Assigned: \"0000-0377037A-037E0384-038A038C038E-03A103A3-05270531-05560559-055F0561-05870589058A058F0591-05C705D0-05EA05F0-05F40600-06040606-061B061E-070D070F-074A074D-07B107C0-07FA0800-082D0830-083E0840-085B085E08A008A2-08AC08E4-08FE0900-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF10B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B770B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF40E01-0E3A0E3F-0E5B0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FDA1000-10C510C710CD10D0-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-139913A0-13F41400-169C16A0-16F01700-170C170E-17141720-17361740-17531760-176C176E-1770177217731780-17DD17E0-17E917F0-17F91800-180E1810-18191820-18771880-18AA18B0-18F51900-191C1920-192B1930-193B19401944-196D1970-19741980-19AB19B0-19C919D0-19DA19DE-1A1B1A1E-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD1B00-1B4B1B50-1B7C1B80-1BF31BFC-1C371C3B-1C491C4D-1C7F1CC0-1CC71CD0-1CF61D00-1DE61DFC-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2000-2064206A-20712074-208E2090-209C20A0-20B920D0-20F02100-21892190-23F32400-24262440-244A2460-26FF2701-2B4C2B50-2B592C00-2C2E2C30-2C5E2C60-2CF32CF9-2D252D272D2D2D30-2D672D6F2D702D7F-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2E3B2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB3000-303F3041-30963099-30FF3105-312D3131-318E3190-31BA31C0-31E331F0-321E3220-32FE3300-4DB54DC0-9FCCA000-A48CA490-A4C6A4D0-A62BA640-A697A69F-A6F7A700-A78EA790-A793A7A0-A7AAA7F8-A82BA830-A839A840-A877A880-A8C4A8CE-A8D9A8E0-A8FBA900-A953A95F-A97CA980-A9CDA9CF-A9D9A9DEA9DFAA00-AA36AA40-AA4DAA50-AA59AA5C-AA7BAA80-AAC2AADB-AAF6AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEDABF0-ABF9AC00-D7A3D7B0-D7C6D7CB-D7FBD800-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBC1FBD3-FD3FFD50-FD8FFD92-FDC7FDF0-FDFDFE00-FE19FE20-FE26FE30-FE52FE54-FE66FE68-FE6BFE70-FE74FE76-FEFCFEFFFF01-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDCFFE0-FFE6FFE8-FFEEFFF9-FFFD\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** matchrecursive.js *****/\n\n/*!\r\n * XRegExp.matchRecursive v0.2.0\r\n * (c) 2009-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Returns a match detail object composed of the provided values.\r\n * @private\r\n */\r\n    function row(value, name, start, end) {\r\n        return {value:value, name:name, start:start, end:end};\r\n    }\r\n\r\n/**\r\n * Returns an array of match strings between outermost left and right delimiters, or an array of\r\n * objects with detailed match parts and position data. An error is thrown if delimiters are\r\n * unbalanced within the data.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {String} left Left delimiter as an XRegExp pattern.\r\n * @param {String} right Right delimiter as an XRegExp pattern.\r\n * @param {String} [flags] Flags for the left and right delimiters. Use any of: `gimnsxy`.\r\n * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\r\n * @returns {Array} Array of matches, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage\r\n * var str = '(t((e))s)t()(ing)';\r\n * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\r\n * // -> ['t((e))s', '', 'ing']\r\n *\r\n * // Extended information mode with valueNames\r\n * str = 'Here is <div> <div>an</div></div> example';\r\n * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\r\n *   valueNames: ['between', 'left', 'match', 'right']\r\n * });\r\n * // -> [\r\n * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\r\n * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\r\n * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\r\n * // {name: 'right',   value: '</div>',         start: 27, end: 33},\r\n * // {name: 'between', value: ' example',       start: 33, end: 41}\r\n * // ]\r\n *\r\n * // Omitting unneeded parts with null valueNames, and using escapeChar\r\n * str = '...{1}\\\\{{function(x,y){return y+x;}}';\r\n * XRegExp.matchRecursive(str, '{', '}', 'g', {\r\n *   valueNames: ['literal', null, 'value', null],\r\n *   escapeChar: '\\\\'\r\n * });\r\n * // -> [\r\n * // {name: 'literal', value: '...', start: 0, end: 3},\r\n * // {name: 'value',   value: '1',   start: 4, end: 5},\r\n * // {name: 'literal', value: '\\\\{', start: 6, end: 8},\r\n * // {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}\r\n * // ]\r\n *\r\n * // Sticky mode via flag y\r\n * str = '<1><<<2>>><3>4<5>';\r\n * XRegExp.matchRecursive(str, '<', '>', 'gy');\r\n * // -> ['1', '<<2>>', '3']\r\n */\r\n    XRegExp.matchRecursive = function (str, left, right, flags, options) {\r\n        flags = flags || \"\";\r\n        options = options || {};\r\n        var global = flags.indexOf(\"g\") > -1,\r\n            sticky = flags.indexOf(\"y\") > -1,\r\n            basicFlags = flags.replace(/y/g, \"\"), // Flag y controlled internally\r\n            escapeChar = options.escapeChar,\r\n            vN = options.valueNames,\r\n            output = [],\r\n            openTokens = 0,\r\n            delimStart = 0,\r\n            delimEnd = 0,\r\n            lastOuterEnd = 0,\r\n            outerStart,\r\n            innerStart,\r\n            leftMatch,\r\n            rightMatch,\r\n            esc;\r\n        left = XRegExp(left, basicFlags);\r\n        right = XRegExp(right, basicFlags);\r\n\r\n        if (escapeChar) {\r\n            if (escapeChar.length > 1) {\r\n                throw new SyntaxError(\"can't use more than one escape character\");\r\n            }\r\n            escapeChar = XRegExp.escape(escapeChar);\r\n            // Using XRegExp.union safely rewrites backreferences in `left` and `right`\r\n            esc = new RegExp(\r\n                \"(?:\" + escapeChar + \"[\\\\S\\\\s]|(?:(?!\" + XRegExp.union([left, right]).source + \")[^\" + escapeChar + \"])+)+\",\r\n                flags.replace(/[^im]+/g, \"\") // Flags gy not needed here; flags nsx handled by XRegExp\r\n            );\r\n        }\r\n\r\n        while (true) {\r\n            // If using an escape character, advance to the delimiter's next starting position,\r\n            // skipping any escaped characters in between\r\n            if (escapeChar) {\r\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, \"sticky\") || [\"\"])[0].length;\r\n            }\r\n            leftMatch = XRegExp.exec(str, left, delimEnd);\r\n            rightMatch = XRegExp.exec(str, right, delimEnd);\r\n            // Keep the leftmost match only\r\n            if (leftMatch && rightMatch) {\r\n                if (leftMatch.index <= rightMatch.index) {\r\n                    rightMatch = null;\r\n                } else {\r\n                    leftMatch = null;\r\n                }\r\n            }\r\n            /* Paths (LM:leftMatch, RM:rightMatch, OT:openTokens):\r\n            LM | RM | OT | Result\r\n            1  | 0  | 1  | loop\r\n            1  | 0  | 0  | loop\r\n            0  | 1  | 1  | loop\r\n            0  | 1  | 0  | throw\r\n            0  | 0  | 1  | throw\r\n            0  | 0  | 0  | break\r\n            * Doesn't include the sticky mode special case\r\n            * Loop ends after the first completed match if `!global` */\r\n            if (leftMatch || rightMatch) {\r\n                delimStart = (leftMatch || rightMatch).index;\r\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n            } else if (!openTokens) {\r\n                break;\r\n            }\r\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n                break;\r\n            }\r\n            if (leftMatch) {\r\n                if (!openTokens) {\r\n                    outerStart = delimStart;\r\n                    innerStart = delimEnd;\r\n                }\r\n                ++openTokens;\r\n            } else if (rightMatch && openTokens) {\r\n                if (!--openTokens) {\r\n                    if (vN) {\r\n                        if (vN[0] && outerStart > lastOuterEnd) {\r\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\r\n                        }\r\n                        if (vN[1]) {\r\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\r\n                        }\r\n                        if (vN[2]) {\r\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\r\n                        }\r\n                        if (vN[3]) {\r\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\r\n                        }\r\n                    } else {\r\n                        output.push(str.slice(innerStart, delimStart));\r\n                    }\r\n                    lastOuterEnd = delimEnd;\r\n                    if (!global) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"string contains unbalanced delimiters\");\r\n            }\r\n            // If the delimiter matched an empty string, avoid an infinite loop\r\n            if (delimStart === delimEnd) {\r\n                ++delimEnd;\r\n            }\r\n        }\r\n\r\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\r\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** build.js *****/\n\n/*!\r\n * XRegExp.build v0.1.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Inspired by RegExp.create by Lea Verou <http://lea.verou.me/>\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var subparts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n        parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subparts], \"g\");\r\n\r\n/**\r\n * Strips a leading `^` and trailing unescaped `$`, if both are present.\r\n * @private\r\n * @param {String} pattern Pattern to process.\r\n * @returns {String} Pattern with edge anchors removed.\r\n */\r\n    function deanchor(pattern) {\r\n        var startAnchor = /^(?:\\(\\?:\\))?\\^/, // Leading `^` or `(?:)^` (handles /x cruft)\r\n            endAnchor = /\\$(?:\\(\\?:\\))?$/; // Trailing `$` or `$(?:)` (handles /x cruft)\r\n        if (endAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, \"\"))) { // Ensure trailing `$` isn't escaped\r\n            return pattern.replace(startAnchor, \"\").replace(endAnchor, \"\");\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n/**\r\n * Converts the provided value to an XRegExp.\r\n * @private\r\n * @param {String|RegExp} value Value to convert.\r\n * @returns {RegExp} XRegExp object with XRegExp syntax applied.\r\n */\r\n    function asXRegExp(value) {\r\n        return XRegExp.isRegExp(value) ?\r\n                (value.xregexp && !value.xregexp.isNative ? value : XRegExp(value.source)) :\r\n                XRegExp(value);\r\n    }\r\n\r\n/**\r\n * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in the\r\n * outer pattern and provided subpatterns are automatically renumbered to work correctly. Native\r\n * flags used by provided subpatterns are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\r\n *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\r\n *   character classes.\r\n * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\r\n *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Regex with interpolated subpatterns.\r\n * @example\r\n *\r\n * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\r\n *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\r\n *     h12: /1[0-2]|0?[1-9]/,\r\n *     h24: /2[0-3]|[01][0-9]/\r\n *   }, 'x'),\r\n *   minutes: /^[0-5][0-9]$/\r\n * });\r\n * time.test('10:59'); // -> true\r\n * XRegExp.exec('10:59', time).minutes; // -> '59'\r\n */\r\n    XRegExp.build = function (pattern, subs, flags) {\r\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\r\n            data = {},\r\n            numCaps = 0, // Caps is short for captures\r\n            numPriorCaps,\r\n            numOuterCaps = 0,\r\n            outerCapsMap = [0],\r\n            outerCapNames,\r\n            sub,\r\n            p;\r\n\r\n        // Add flags within a leading mode modifier to the overall pattern's flags\r\n        if (inlineFlags) {\r\n            flags = flags || \"\";\r\n            inlineFlags[1].replace(/./g, function (flag) {\r\n                flags += (flags.indexOf(flag) > -1 ? \"\" : flag); // Don't add duplicates\r\n            });\r\n        }\r\n\r\n        for (p in subs) {\r\n            if (subs.hasOwnProperty(p)) {\r\n                // Passing to XRegExp enables entended syntax for subpatterns provided as strings\r\n                // and ensures independent validity, lest an unescaped `(`, `)`, `[`, or trailing\r\n                // `\\` breaks the `(?:)` wrapper. For subpatterns provided as regexes, it dies on\r\n                // octals and adds the `xregexp` property, for simplicity\r\n                sub = asXRegExp(subs[p]);\r\n                // Deanchoring allows embedding independently useful anchored regexes. If you\r\n                // really need to keep your anchors, double them (i.e., `^^...$$`)\r\n                data[p] = {pattern: deanchor(sub.source), names: sub.xregexp.captureNames || []};\r\n            }\r\n        }\r\n\r\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\r\n        // helps keep this simple. Named captures will be put back\r\n        pattern = asXRegExp(pattern);\r\n        outerCapNames = pattern.xregexp.captureNames || [];\r\n        pattern = pattern.source.replace(parts, function ($0, $1, $2, $3, $4) {\r\n            var subName = $1 || $2, capName, intro;\r\n            if (subName) { // Named subpattern\r\n                if (!data.hasOwnProperty(subName)) {\r\n                    throw new ReferenceError(\"undefined property \" + $0);\r\n                }\r\n                if ($1) { // Named subpattern was wrapped in a capturing group\r\n                    capName = outerCapNames[numOuterCaps];\r\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\r\n                    // as the capture name\r\n                    intro = \"(?<\" + (capName || subName) + \">\";\r\n                } else {\r\n                    intro = \"(?:\";\r\n                }\r\n                numPriorCaps = numCaps;\r\n                return intro + data[subName].pattern.replace(subparts, function (match, paren, backref) {\r\n                    if (paren) { // Capturing group\r\n                        capName = data[subName].names[numCaps - numPriorCaps];\r\n                        ++numCaps;\r\n                        if (capName) { // If the current capture has a name, preserve the name\r\n                            return \"(?<\" + capName + \">\";\r\n                        }\r\n                    } else if (backref) { // Backreference\r\n                        return \"\\\\\" + (+backref + numPriorCaps); // Rewrite the backreference\r\n                    }\r\n                    return match;\r\n                }) + \")\";\r\n            }\r\n            if ($3) { // Capturing group\r\n                capName = outerCapNames[numOuterCaps];\r\n                outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                if (capName) { // If the current capture has a name, preserve the name\r\n                    return \"(?<\" + capName + \">\";\r\n                }\r\n            } else if ($4) { // Backreference\r\n                return \"\\\\\" + outerCapsMap[+$4]; // Rewrite the backreference\r\n            }\r\n            return $0;\r\n        });\r\n\r\n        return XRegExp(pattern, flags);\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** prototypes.js *****/\n\n/*!\r\n * XRegExp Prototype Methods v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * Adds a collection of methods to `XRegExp.prototype`. RegExp objects copied by XRegExp are also\r\n * augmented with any `XRegExp.prototype` methods. Hence, the following work equivalently:\r\n *\r\n * XRegExp('[a-z]', 'ig').xexec('abc');\r\n * XRegExp(/[a-z]/ig).xexec('abc');\r\n * XRegExp.globalize(/[a-z]/i).xexec('abc');\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Copy properties of `b` to `a`.\r\n * @private\r\n * @param {Object} a Object that will receive new properties.\r\n * @param {Object} b Object whose properties will be copied.\r\n */\r\n    function extend(a, b) {\r\n        for (var p in b) {\r\n            if (b.hasOwnProperty(p)) {\r\n                a[p] = b[p];\r\n            }\r\n        }\r\n        //return a;\r\n    }\r\n\r\n    extend(XRegExp.prototype, {\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the first value in the provided arguments array.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.apply`.\r\n * @param {Array} args Array with the string to search as its first value.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').apply(null, ['abc']); // -> true\r\n */\r\n        apply: function (context, args) {\r\n            return this.test(args[0]);\r\n        },\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the provided string.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.call`.\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').call(null, 'abc'); // -> true\r\n */\r\n        call: function (context, str) {\r\n            return this.test(str);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.forEach}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('\\\\d').forEach('1a2345', function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n        forEach: function (str, callback, context) {\r\n            return XRegExp.forEach(str, this, callback, context);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.globalize}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var globalCopy = XRegExp('regex').globalize();\r\n * globalCopy.global; // -> true\r\n */\r\n        globalize: function () {\r\n            return XRegExp.globalize(this);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.exec}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var match = XRegExp('U\\\\+(?<hex>[0-9A-F]{4})').xexec('U+2620');\r\n * match.hex; // -> '2620'\r\n */\r\n        xexec: function (str, pos, sticky) {\r\n            return XRegExp.exec(str, this, pos, sticky);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.test}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('c').xtest('abc'); // -> true\r\n */\r\n        xtest: function (str, pos, sticky) {\r\n            return XRegExp.test(str, this, pos, sticky);\r\n        }\r\n\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n"]}